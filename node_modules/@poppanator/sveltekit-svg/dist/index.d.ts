import { type Config } from 'svgo';
import type { Plugin } from 'vite';
interface Options {
    /**
     * Output type
     *
     * `dataurl` can also take the following options, which are verbatim SVGO
     * `datauri` options:
     *
     * - `?dataurl=base64` (default, same as `?dataurl`)
     * - `?dataurl=enc` URL encoded string
     * - `?dataurl=unenc` Plain SVG
     *
     * @default "component"
     */
    type?: 'src' | 'url' | 'component' | 'dataurl';
    /**
     * Verbatim [SVGO](https://github.com/svg/svgo) options
     */
    svgoOptions?: Config | false;
    /**
     * Paths to apply the SVG plugin on. This can be useful if you want to apply
     * different SVGO options/plugins on different SVGs.
     *
     * The paths are path prefixes and should be relative to your
     * `svelte.config.js` file.
     *
     * @example
     * ```
     * {
     *   includePaths: ['src/assets/icons/', 'src/images/icons/']
     * }
     * ```
     */
    includePaths?: string[];
}
declare function readSvg(options?: Options): Plugin;
export = readSvg;
