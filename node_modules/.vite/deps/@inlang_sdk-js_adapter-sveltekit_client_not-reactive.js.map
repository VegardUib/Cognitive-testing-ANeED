{
  "version": 3,
  "sources": ["../../@inlang/sdk-js/dist/adapter-sveltekit/runtime/client/not-reactive/context.js", "../../@inlang/sdk-js/dist/adapter-sveltekit/runtime/client/shared/context.js"],
  "sourcesContent": ["import { inlangSymbol, replaceLanguageInUrl } from \"../../shared/utils.js\";\nimport { goto } from \"$app/navigation\";\nimport { page } from \"$app/stores\";\nimport { get } from \"svelte/store\";\nimport { setContext } from \"svelte\";\nimport { getRuntimeFromContext as getRuntimeFromContextShared } from \"../shared/context.js\";\nexport const getRuntimeFromContext = () => getRuntimeFromContextShared();\nexport const addRuntimeToContext = (runtime) => {\n    const { language, referenceLanguage, languages, i, loadResource } = runtime;\n    const switchLanguage = async (language) => {\n        if (runtime.language === language)\n            return;\n        return goto(replaceLanguageInUrl(get(page).url, language), { invalidateAll: true });\n    };\n    setContext(inlangSymbol, {\n        language,\n        referenceLanguage,\n        languages,\n        i,\n        loadResource,\n        switchLanguage,\n        route: route.bind(undefined, language),\n    });\n};\nconst route = (language, href) => {\n    if (!href.startsWith(\"/\"))\n        return href;\n    const url = `/${language}${href}`;\n    return (url.endsWith(\"/\") ? url.slice(0, -1) : url);\n};\n", "import { getContext } from \"svelte\";\nimport { inlangSymbol } from \"../../shared/utils.js\";\n// TODO: wrap with error message only during development\nexport const getRuntimeFromContext = () => {\n    try {\n        return getContext(inlangSymbol);\n    }\n    catch (e) {\n        throw Error(`\nYou cannot directly access any '@inlang/sdk-js' imports in this scope. You need to pass them from 'handle' or 'load' to the function you want to call e.g.\n\n// -- Change this -------------------------------------------------------------\n\nimport { i } from '@inlang/sdk-js'\n\nexport const load = async () => {\n   return { title: getPageTitle() }\n}\n\nconst getPageTitle = () => {\n   console.log(i('hello.inlang'))\n}\n\n// -- To this -----------------------------------------------------------------\n\nimport { i } from '@inlang/sdk-js'\n\nexport const load = async () => {\n   return { title: getPageTitle(i) }\n}\n\nconst getPageTitle = (/** @type { import('@inlang/sdk-js/runtime').InlangFunction } */ i) => {\n   console.log(i('hello.inlang'))\n}\n\n// ----------------------------------------------------------------------------\n`, { cause: e });\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;AACA,SAAS,YAAY;AACrB,SAAS,YAAY;;;ACCd,IAAM,wBAAwB,MAAM;AACvC,MAAI;AACA,WAAO,WAAW,YAAY;AAAA,EAClC,SACO,GAAG;AACN,UAAM,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA4BjB,EAAE,OAAO,EAAE,CAAC;AAAA,EACX;AACJ;;;ADhCO,IAAMA,yBAAwB,MAAM,sBAA4B;AAChE,IAAM,sBAAsB,CAAC,YAAY;AAC5C,QAAM,EAAE,UAAU,mBAAmB,WAAW,GAAG,aAAa,IAAI;AACpE,QAAM,iBAAiB,OAAOC,cAAa;AACvC,QAAI,QAAQ,aAAaA;AACrB;AACJ,WAAO,KAAK,qBAAqB,gBAAI,IAAI,EAAE,KAAKA,SAAQ,GAAG,EAAE,eAAe,KAAK,CAAC;AAAA,EACtF;AACA,aAAW,cAAc;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO,MAAM,KAAK,QAAW,QAAQ;AAAA,EACzC,CAAC;AACL;AACA,IAAM,QAAQ,CAAC,UAAU,SAAS;AAC9B,MAAI,CAAC,KAAK,WAAW,GAAG;AACpB,WAAO;AACX,QAAM,MAAM,IAAI,QAAQ,GAAG,IAAI;AAC/B,SAAQ,IAAI,SAAS,GAAG,IAAI,IAAI,MAAM,GAAG,EAAE,IAAI;AACnD;",
  "names": ["getRuntimeFromContext", "language"]
}
