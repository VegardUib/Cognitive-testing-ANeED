{
  "version": 3,
  "sources": ["../../../../node_modules/ts-dedent/src/index.ts", "../../../../node_modules/tslib/tslib.es6.js", "../../../../node_modules/ast-types/lib/types.js", "../../../../node_modules/ast-types/lib/path.js", "../../../../node_modules/ast-types/lib/scope.js", "../../../../node_modules/ast-types/lib/node-path.js", "../../../../node_modules/ast-types/lib/path-visitor.js", "../../../../node_modules/ast-types/lib/equiv.js", "../../../../node_modules/ast-types/fork.js", "../../../../node_modules/ast-types/lib/shared.js", "../../../../node_modules/ast-types/def/operators/core.js", "../../../../node_modules/ast-types/def/operators/es2016.js", "../../../../node_modules/ast-types/def/operators/es2020.js", "../../../../node_modules/ast-types/def/operators/es2021.js", "../../../../node_modules/ast-types/def/core.js", "../../../../node_modules/ast-types/def/es6.js", "../../../../node_modules/ast-types/def/es2016.js", "../../../../node_modules/ast-types/def/es2017.js", "../../../../node_modules/ast-types/def/es2018.js", "../../../../node_modules/ast-types/def/es2019.js", "../../../../node_modules/ast-types/def/es2020.js", "../../../../node_modules/ast-types/def/es2021.js", "../../../../node_modules/ast-types/def/es2022.js", "../../../../node_modules/ast-types/def/es-proposals.js", "../../../../node_modules/ast-types/def/jsx.js", "../../../../node_modules/ast-types/def/type-annotations.js", "../../../../node_modules/ast-types/def/flow.js", "../../../../node_modules/ast-types/def/esprima.js", "../../../../node_modules/ast-types/def/babel-core.js", "../../../../node_modules/ast-types/def/babel.js", "../../../../node_modules/ast-types/def/typescript.js", "../../../../node_modules/ast-types/gen/namedTypes.js", "../../../../node_modules/ast-types/main.js", "../../../../node_modules/source-map/lib/base64.js", "../../../../node_modules/source-map/lib/base64-vlq.js", "../../../../node_modules/source-map/lib/util.js", "../../../../node_modules/source-map/lib/array-set.js", "../../../../node_modules/source-map/lib/mapping-list.js", "../../../../node_modules/source-map/lib/source-map-generator.js", "../../../../node_modules/source-map/lib/binary-search.js", "../../../../node_modules/source-map/lib/quick-sort.js", "../../../../node_modules/source-map/lib/source-map-consumer.js", "../../../../node_modules/source-map/lib/source-node.js", "../../../../node_modules/source-map/source-map.js", "../../../../node_modules/recast/lib/util.js", "../../../../node_modules/esprima/dist/esprima.js", "../../../../node_modules/recast/parsers/esprima.js", "../../../../node_modules/@babel/parser/src/options.ts", "../../../../node_modules/@babel/parser/src/tokenizer/context.ts", "../../../../node_modules/@babel/parser/src/tokenizer/types.ts", "../../../../node_modules/@babel/parser/src/util/location.ts", "../../../../node_modules/@babel/parser/src/parse-error/credentials.ts", "../../../../node_modules/@babel/parser/src/parse-error/module-errors.ts", "../../../../node_modules/@babel/parser/src/parse-error/to-node-description.ts", "../../../../node_modules/@babel/parser/src/parse-error/standard-errors.ts", "../../../../node_modules/@babel/parser/src/parse-error/strict-mode-errors.ts", "../../../../node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.ts", "../../../../node_modules/@babel/parser/src/parse-error.ts", "../../../../node_modules/@babel/parser/src/plugins/estree.ts", "../../../../node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts", "../../../../node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts", "../../../../node_modules/@babel/parser/src/util/identifier.ts", "../../../../node_modules/@babel/parser/src/util/scopeflags.ts", "../../../../node_modules/@babel/parser/src/util/scope.ts", "../../../../node_modules/@babel/parser/src/plugins/flow/scope.ts", "../../../../node_modules/@babel/parser/src/parser/base.ts", "../../../../node_modules/@babel/parser/src/parser/comments.ts", "../../../../node_modules/@babel/parser/src/util/whitespace.ts", "../../../../node_modules/@babel/parser/src/tokenizer/state.ts", "../../../../node_modules/@babel/babel-helper-string-parser/src/index.ts", "../../../../node_modules/@babel/parser/src/tokenizer/index.ts", "../../../../node_modules/@babel/parser/src/util/class-scope.ts", "../../../../node_modules/@babel/parser/src/util/expression-scope.ts", "../../../../node_modules/@babel/parser/src/util/production-parameter.ts", "../../../../node_modules/@babel/parser/src/parser/util.ts", "../../../../node_modules/@babel/parser/src/parser/node.ts", "../../../../node_modules/@babel/parser/src/plugins/flow/index.ts", "../../../../node_modules/@babel/parser/src/plugins/jsx/xhtml.ts", "../../../../node_modules/@babel/parser/src/plugins/jsx/index.ts", "../../../../node_modules/@babel/parser/src/plugins/typescript/scope.ts", "../../../../node_modules/@babel/parser/src/parser/lval.ts", "../../../../node_modules/@babel/parser/src/plugins/typescript/index.ts", "../../../../node_modules/@babel/parser/src/plugins/placeholders.ts", "../../../../node_modules/@babel/parser/src/plugins/v8intrinsic.ts", "../../../../node_modules/@babel/parser/src/plugin-utils.ts", "../../../../node_modules/@babel/parser/src/parser/expression.ts", "../../../../node_modules/@babel/parser/src/parser/statement.ts", "../../../../node_modules/@babel/parser/src/parser/index.ts", "../../../../node_modules/@babel/parser/src/index.ts", "../../../../node_modules/vitefu/src/sync.cjs", "../../src/adapter-sveltekit/vite-plugin/plugin.ts", "../../src/adapter-sveltekit/vite-plugin/checks/appTemplate.ts", "../../src/adapter-sveltekit/vite-plugin/checks/routes.ts", "../../../core/dist/plugin/errors/PluginSetupError.js", "../../../../node_modules/deepmerge-ts/dist/node/index.mjs", "../../../core/dist/plugin/setupPlugins.js", "../../../core/dist/config/setupConfig.js", "../../../../node_modules/zod/lib/index.mjs", "../../../core/dist/ast/zod.js", "../../../core/dist/config/parseConfig.js", "../../../core/dist/config/ideExtension/zodSchema.js", "../../../core/dist/config/zod.js", "../../../core/dist/environment/$import.js", "../../../../source-code-git/fs/dist/utilities/normalizePath.js", "../../src/config/config.ts", "../../../../node_modules/recast/main.js", "../../../../node_modules/recast/lib/parser.js", "../../../../node_modules/recast/lib/options.js", "../../../../node_modules/recast/lib/lines.js", "../../../../node_modules/recast/lib/mapping.js", "../../../../node_modules/recast/lib/comments.js", "../../../../node_modules/recast/lib/printer.js", "../../../../node_modules/recast/lib/fast-path.js", "../../../../node_modules/recast/lib/patcher.js", "../../../../node_modules/magicast/dist/shared/magicast.91b07a20.mjs", "../../../../node_modules/magicast/dist/index.mjs", "../../src/adapter-sveltekit/vite-plugin/config.ts", "../../../core/dist/test/testConfig.js", "../../../core/dist/test/testConfigFile.js", "../../../core/dist/test/mockEnvironment.js", "../../../sdk-js-plugin/dist/index.js", "../../package.json", "../../../../node_modules/vitefu/src/index.js", "../../src/adapter-sveltekit/vite-plugin/fileInformation.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/_.js.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/_.svelte.ts", "../../../../node_modules/magicast/dist/helpers.mjs", "../../node_modules/estree-walker/src/walker.js", "../../node_modules/estree-walker/src/sync.js", "../../node_modules/estree-walker/src/index.js", "../../src/helpers/ast.ts", "../../../../node_modules/@jridgewell/sourcemap-codec/src/sourcemap-codec.ts", "../../node_modules/magic-string/src/BitSet.js", "../../node_modules/magic-string/src/Chunk.js", "../../node_modules/magic-string/src/SourceMap.js", "../../node_modules/magic-string/src/utils/guessIndent.js", "../../node_modules/magic-string/src/utils/getRelativePath.js", "../../node_modules/magic-string/src/utils/isObject.js", "../../node_modules/magic-string/src/utils/getLocator.js", "../../node_modules/magic-string/src/utils/Mappings.js", "../../node_modules/magic-string/src/MagicString.js", "../../node_modules/magic-string/src/Bundle.js", "../../src/helpers/inlangAst.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/+layout.js.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/+layout.server.js.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/+layout.svelte.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/+page.js.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/+page.server.js.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/+page.svelte.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/+server.js.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/_.server.js.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/hooks.server.js.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/[language].json.ts", "../../src/adapter-sveltekit/vite-plugin/transforms/index.ts", "../../src/adapter-sveltekit/index.ts"],
  "sourcesContent": ["export function dedent(\n  templ: TemplateStringsArray | string,\n  ...values: unknown[]\n): string {\n  let strings = Array.from(typeof templ === 'string' ? [templ] : templ);\n\n  // 1. Remove trailing whitespace.\n  strings[strings.length - 1] = strings[strings.length - 1].replace(\n    /\\r?\\n([\\t ]*)$/,\n    '',\n  );\n\n  // 2. Find all line breaks to determine the highest common indentation level.\n  const indentLengths = strings.reduce((arr, str) => {\n    const matches = str.match(/\\n([\\t ]+|(?!\\s).)/g);\n    if (matches) {\n      return arr.concat(\n        matches.map((match) => match.match(/[\\t ]/g)?.length ?? 0),\n      );\n    }\n    return arr;\n  }, <number[]>[]);\n\n  // 3. Remove the common indentation from all strings.\n  if (indentLengths.length) {\n    const pattern = new RegExp(`\\n[\\t ]{${Math.min(...indentLengths)}}`, 'g');\n\n    strings = strings.map((str) => str.replace(pattern, '\\n'));\n  }\n\n  // 4. Remove leading whitespace.\n  strings[0] = strings[0].replace(/^\\r?\\n/, '');\n\n  // 5. Perform interpolation.\n  let string = strings[0];\n\n  values.forEach((value, i) => {\n    // 5.1 Read current indentation level\n    const endentations = string.match(/(?:^|\\n)( *)$/)\n    const endentation = endentations ? endentations[1] : ''\n    let indentedValue = value\n    // 5.2 Add indentation to values with multiline strings\n    if (typeof value === 'string' && value.includes('\\n')) {\n      indentedValue = String(value)\n        .split('\\n')\n        .map((str, i) => {\n          return i === 0 ? str : `${endentation}${str}`\n        })\n        .join('\\n');\n    }\n\n    string += indentedValue + strings[i + 1];\n  });\n\n  return string;\n}\n\nexport default dedent;\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Def = void 0;\nvar tslib_1 = require(\"tslib\");\nvar Op = Object.prototype;\nvar objToStr = Op.toString;\nvar hasOwn = Op.hasOwnProperty;\nvar BaseType = /** @class */ (function () {\n    function BaseType() {\n    }\n    BaseType.prototype.assert = function (value, deep) {\n        if (!this.check(value, deep)) {\n            var str = shallowStringify(value);\n            throw new Error(str + \" does not match type \" + this);\n        }\n        return true;\n    };\n    BaseType.prototype.arrayOf = function () {\n        var elemType = this;\n        return new ArrayType(elemType);\n    };\n    return BaseType;\n}());\nvar ArrayType = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(ArrayType, _super);\n    function ArrayType(elemType) {\n        var _this = _super.call(this) || this;\n        _this.elemType = elemType;\n        _this.kind = \"ArrayType\";\n        return _this;\n    }\n    ArrayType.prototype.toString = function () {\n        return \"[\" + this.elemType + \"]\";\n    };\n    ArrayType.prototype.check = function (value, deep) {\n        var _this = this;\n        return Array.isArray(value) && value.every(function (elem) { return _this.elemType.check(elem, deep); });\n    };\n    return ArrayType;\n}(BaseType));\nvar IdentityType = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(IdentityType, _super);\n    function IdentityType(value) {\n        var _this = _super.call(this) || this;\n        _this.value = value;\n        _this.kind = \"IdentityType\";\n        return _this;\n    }\n    IdentityType.prototype.toString = function () {\n        return String(this.value);\n    };\n    IdentityType.prototype.check = function (value, deep) {\n        var result = value === this.value;\n        if (!result && typeof deep === \"function\") {\n            deep(this, value);\n        }\n        return result;\n    };\n    return IdentityType;\n}(BaseType));\nvar ObjectType = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(ObjectType, _super);\n    function ObjectType(fields) {\n        var _this = _super.call(this) || this;\n        _this.fields = fields;\n        _this.kind = \"ObjectType\";\n        return _this;\n    }\n    ObjectType.prototype.toString = function () {\n        return \"{ \" + this.fields.join(\", \") + \" }\";\n    };\n    ObjectType.prototype.check = function (value, deep) {\n        return (objToStr.call(value) === objToStr.call({}) &&\n            this.fields.every(function (field) {\n                return field.type.check(value[field.name], deep);\n            }));\n    };\n    return ObjectType;\n}(BaseType));\nvar OrType = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(OrType, _super);\n    function OrType(types) {\n        var _this = _super.call(this) || this;\n        _this.types = types;\n        _this.kind = \"OrType\";\n        return _this;\n    }\n    OrType.prototype.toString = function () {\n        return this.types.join(\" | \");\n    };\n    OrType.prototype.check = function (value, deep) {\n        return this.types.some(function (type) {\n            return type.check(value, deep);\n        });\n    };\n    return OrType;\n}(BaseType));\nvar PredicateType = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(PredicateType, _super);\n    function PredicateType(name, predicate) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.predicate = predicate;\n        _this.kind = \"PredicateType\";\n        return _this;\n    }\n    PredicateType.prototype.toString = function () {\n        return this.name;\n    };\n    PredicateType.prototype.check = function (value, deep) {\n        var result = this.predicate(value, deep);\n        if (!result && typeof deep === \"function\") {\n            deep(this, value);\n        }\n        return result;\n    };\n    return PredicateType;\n}(BaseType));\nvar Def = /** @class */ (function () {\n    function Def(type, typeName) {\n        this.type = type;\n        this.typeName = typeName;\n        this.baseNames = [];\n        this.ownFields = Object.create(null);\n        // Includes own typeName. Populated during finalization.\n        this.allSupertypes = Object.create(null);\n        // Linear inheritance hierarchy. Populated during finalization.\n        this.supertypeList = [];\n        // Includes inherited fields.\n        this.allFields = Object.create(null);\n        // Non-hidden keys of allFields.\n        this.fieldNames = [];\n        // This property will be overridden as true by individual Def instances\n        // when they are finalized.\n        this.finalized = false;\n        // False by default until .build(...) is called on an instance.\n        this.buildable = false;\n        this.buildParams = [];\n    }\n    Def.prototype.isSupertypeOf = function (that) {\n        if (that instanceof Def) {\n            if (this.finalized !== true ||\n                that.finalized !== true) {\n                throw new Error(\"\");\n            }\n            return hasOwn.call(that.allSupertypes, this.typeName);\n        }\n        else {\n            throw new Error(that + \" is not a Def\");\n        }\n    };\n    Def.prototype.checkAllFields = function (value, deep) {\n        var allFields = this.allFields;\n        if (this.finalized !== true) {\n            throw new Error(\"\" + this.typeName);\n        }\n        function checkFieldByName(name) {\n            var field = allFields[name];\n            var type = field.type;\n            var child = field.getValue(value);\n            return type.check(child, deep);\n        }\n        return value !== null &&\n            typeof value === \"object\" &&\n            Object.keys(allFields).every(checkFieldByName);\n    };\n    Def.prototype.bases = function () {\n        var supertypeNames = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            supertypeNames[_i] = arguments[_i];\n        }\n        var bases = this.baseNames;\n        if (this.finalized) {\n            if (supertypeNames.length !== bases.length) {\n                throw new Error(\"\");\n            }\n            for (var i = 0; i < supertypeNames.length; i++) {\n                if (supertypeNames[i] !== bases[i]) {\n                    throw new Error(\"\");\n                }\n            }\n            return this;\n        }\n        supertypeNames.forEach(function (baseName) {\n            // This indexOf lookup may be O(n), but the typical number of base\n            // names is very small, and indexOf is a native Array method.\n            if (bases.indexOf(baseName) < 0) {\n                bases.push(baseName);\n            }\n        });\n        return this; // For chaining.\n    };\n    return Def;\n}());\nexports.Def = Def;\nvar Field = /** @class */ (function () {\n    function Field(name, type, defaultFn, hidden) {\n        this.name = name;\n        this.type = type;\n        this.defaultFn = defaultFn;\n        this.hidden = !!hidden;\n    }\n    Field.prototype.toString = function () {\n        return JSON.stringify(this.name) + \": \" + this.type;\n    };\n    Field.prototype.getValue = function (obj) {\n        var value = obj[this.name];\n        if (typeof value !== \"undefined\") {\n            return value;\n        }\n        if (typeof this.defaultFn === \"function\") {\n            value = this.defaultFn.call(obj);\n        }\n        return value;\n    };\n    return Field;\n}());\nfunction shallowStringify(value) {\n    if (Array.isArray(value)) {\n        return \"[\" + value.map(shallowStringify).join(\", \") + \"]\";\n    }\n    if (value && typeof value === \"object\") {\n        return \"{ \" + Object.keys(value).map(function (key) {\n            return key + \": \" + value[key];\n        }).join(\", \") + \" }\";\n    }\n    return JSON.stringify(value);\n}\nfunction typesPlugin(_fork) {\n    var Type = {\n        or: function () {\n            var types = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                types[_i] = arguments[_i];\n            }\n            return new OrType(types.map(function (type) { return Type.from(type); }));\n        },\n        from: function (value, name) {\n            if (value instanceof ArrayType ||\n                value instanceof IdentityType ||\n                value instanceof ObjectType ||\n                value instanceof OrType ||\n                value instanceof PredicateType) {\n                return value;\n            }\n            // The Def type is used as a helper for constructing compound\n            // interface types for AST nodes.\n            if (value instanceof Def) {\n                return value.type;\n            }\n            // Support [ElemType] syntax.\n            if (isArray.check(value)) {\n                if (value.length !== 1) {\n                    throw new Error(\"only one element type is permitted for typed arrays\");\n                }\n                return new ArrayType(Type.from(value[0]));\n            }\n            // Support { someField: FieldType, ... } syntax.\n            if (isObject.check(value)) {\n                return new ObjectType(Object.keys(value).map(function (name) {\n                    return new Field(name, Type.from(value[name], name));\n                }));\n            }\n            if (typeof value === \"function\") {\n                var bicfIndex = builtInCtorFns.indexOf(value);\n                if (bicfIndex >= 0) {\n                    return builtInCtorTypes[bicfIndex];\n                }\n                if (typeof name !== \"string\") {\n                    throw new Error(\"missing name\");\n                }\n                return new PredicateType(name, value);\n            }\n            // As a last resort, toType returns a type that matches any value that\n            // is === from. This is primarily useful for literal values like\n            // toType(null), but it has the additional advantage of allowing\n            // toType to be a total function.\n            return new IdentityType(value);\n        },\n        // Define a type whose name is registered in a namespace (the defCache) so\n        // that future definitions will return the same type given the same name.\n        // In particular, this system allows for circular and forward definitions.\n        // The Def object d returned from Type.def may be used to configure the\n        // type d.type by calling methods such as d.bases, d.build, and d.field.\n        def: function (typeName) {\n            return hasOwn.call(defCache, typeName)\n                ? defCache[typeName]\n                : defCache[typeName] = new DefImpl(typeName);\n        },\n        hasDef: function (typeName) {\n            return hasOwn.call(defCache, typeName);\n        }\n    };\n    var builtInCtorFns = [];\n    var builtInCtorTypes = [];\n    function defBuiltInType(name, example) {\n        var objStr = objToStr.call(example);\n        var type = new PredicateType(name, function (value) { return objToStr.call(value) === objStr; });\n        if (example && typeof example.constructor === \"function\") {\n            builtInCtorFns.push(example.constructor);\n            builtInCtorTypes.push(type);\n        }\n        return type;\n    }\n    // These types check the underlying [[Class]] attribute of the given\n    // value, rather than using the problematic typeof operator. Note however\n    // that no subtyping is considered; so, for instance, isObject.check\n    // returns false for [], /./, new Date, and null.\n    var isString = defBuiltInType(\"string\", \"truthy\");\n    var isFunction = defBuiltInType(\"function\", function () { });\n    var isArray = defBuiltInType(\"array\", []);\n    var isObject = defBuiltInType(\"object\", {});\n    var isRegExp = defBuiltInType(\"RegExp\", /./);\n    var isDate = defBuiltInType(\"Date\", new Date());\n    var isNumber = defBuiltInType(\"number\", 3);\n    var isBoolean = defBuiltInType(\"boolean\", true);\n    var isNull = defBuiltInType(\"null\", null);\n    var isUndefined = defBuiltInType(\"undefined\", undefined);\n    var isBigInt = typeof BigInt === \"function\"\n        ? defBuiltInType(\"BigInt\", BigInt(1234))\n        : new PredicateType(\"BigInt\", function () { return false; });\n    var builtInTypes = {\n        string: isString,\n        function: isFunction,\n        array: isArray,\n        object: isObject,\n        RegExp: isRegExp,\n        Date: isDate,\n        number: isNumber,\n        boolean: isBoolean,\n        null: isNull,\n        undefined: isUndefined,\n        BigInt: isBigInt,\n    };\n    // In order to return the same Def instance every time Type.def is called\n    // with a particular name, those instances need to be stored in a cache.\n    var defCache = Object.create(null);\n    function defFromValue(value) {\n        if (value && typeof value === \"object\") {\n            var type = value.type;\n            if (typeof type === \"string\" &&\n                hasOwn.call(defCache, type)) {\n                var d = defCache[type];\n                if (d.finalized) {\n                    return d;\n                }\n            }\n        }\n        return null;\n    }\n    var DefImpl = /** @class */ (function (_super) {\n        (0, tslib_1.__extends)(DefImpl, _super);\n        function DefImpl(typeName) {\n            var _this = _super.call(this, new PredicateType(typeName, function (value, deep) { return _this.check(value, deep); }), typeName) || this;\n            return _this;\n        }\n        DefImpl.prototype.check = function (value, deep) {\n            if (this.finalized !== true) {\n                throw new Error(\"prematurely checking unfinalized type \" + this.typeName);\n            }\n            // A Def type can only match an object value.\n            if (value === null || typeof value !== \"object\") {\n                return false;\n            }\n            var vDef = defFromValue(value);\n            if (!vDef) {\n                // If we couldn't infer the Def associated with the given value,\n                // and we expected it to be a SourceLocation or a Position, it was\n                // probably just missing a \"type\" field (because Esprima does not\n                // assign a type property to such nodes). Be optimistic and let\n                // this.checkAllFields make the final decision.\n                if (this.typeName === \"SourceLocation\" ||\n                    this.typeName === \"Position\") {\n                    return this.checkAllFields(value, deep);\n                }\n                // Calling this.checkAllFields for any other type of node is both\n                // bad for performance and way too forgiving.\n                return false;\n            }\n            // If checking deeply and vDef === this, then we only need to call\n            // checkAllFields once. Calling checkAllFields is too strict when deep\n            // is false, because then we only care about this.isSupertypeOf(vDef).\n            if (deep && vDef === this) {\n                return this.checkAllFields(value, deep);\n            }\n            // In most cases we rely exclusively on isSupertypeOf to make O(1)\n            // subtyping determinations. This suffices in most situations outside\n            // of unit tests, since interface conformance is checked whenever new\n            // instances are created using builder functions.\n            if (!this.isSupertypeOf(vDef)) {\n                return false;\n            }\n            // The exception is when deep is true; then, we recursively check all\n            // fields.\n            if (!deep) {\n                return true;\n            }\n            // Use the more specific Def (vDef) to perform the deep check, but\n            // shallow-check fields defined by the less specific Def (this).\n            return vDef.checkAllFields(value, deep)\n                && this.checkAllFields(value, false);\n        };\n        DefImpl.prototype.build = function () {\n            var _this = this;\n            var buildParams = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                buildParams[_i] = arguments[_i];\n            }\n            // Calling Def.prototype.build multiple times has the effect of merely\n            // redefining this property.\n            this.buildParams = buildParams;\n            if (this.buildable) {\n                // If this Def is already buildable, update self.buildParams and\n                // continue using the old builder function.\n                return this;\n            }\n            // Every buildable type will have its \"type\" field filled in\n            // automatically. This includes types that are not subtypes of Node,\n            // like SourceLocation, but that seems harmless (TODO?).\n            this.field(\"type\", String, function () { return _this.typeName; });\n            // Override Dp.buildable for this Def instance.\n            this.buildable = true;\n            var addParam = function (built, param, arg, isArgAvailable) {\n                if (hasOwn.call(built, param))\n                    return;\n                var all = _this.allFields;\n                if (!hasOwn.call(all, param)) {\n                    throw new Error(\"\" + param);\n                }\n                var field = all[param];\n                var type = field.type;\n                var value;\n                if (isArgAvailable) {\n                    value = arg;\n                }\n                else if (field.defaultFn) {\n                    // Expose the partially-built object to the default\n                    // function as its `this` object.\n                    value = field.defaultFn.call(built);\n                }\n                else {\n                    var message = \"no value or default function given for field \" +\n                        JSON.stringify(param) + \" of \" + _this.typeName + \"(\" +\n                        _this.buildParams.map(function (name) {\n                            return all[name];\n                        }).join(\", \") + \")\";\n                    throw new Error(message);\n                }\n                if (!type.check(value)) {\n                    throw new Error(shallowStringify(value) +\n                        \" does not match field \" + field +\n                        \" of type \" + _this.typeName);\n                }\n                built[param] = value;\n            };\n            // Calling the builder function will construct an instance of the Def,\n            // with positional arguments mapped to the fields original passed to .build.\n            // If not enough arguments are provided, the default value for the remaining fields\n            // will be used.\n            var builder = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var argc = args.length;\n                if (!_this.finalized) {\n                    throw new Error(\"attempting to instantiate unfinalized type \" +\n                        _this.typeName);\n                }\n                var built = Object.create(nodePrototype);\n                _this.buildParams.forEach(function (param, i) {\n                    if (i < argc) {\n                        addParam(built, param, args[i], true);\n                    }\n                    else {\n                        addParam(built, param, null, false);\n                    }\n                });\n                Object.keys(_this.allFields).forEach(function (param) {\n                    // Use the default value.\n                    addParam(built, param, null, false);\n                });\n                // Make sure that the \"type\" field was filled automatically.\n                if (built.type !== _this.typeName) {\n                    throw new Error(\"\");\n                }\n                return built;\n            };\n            // Calling .from on the builder function will construct an instance of the Def,\n            // using field values from the passed object. For fields missing from the passed object,\n            // their default value will be used.\n            builder.from = function (obj) {\n                if (!_this.finalized) {\n                    throw new Error(\"attempting to instantiate unfinalized type \" +\n                        _this.typeName);\n                }\n                var built = Object.create(nodePrototype);\n                Object.keys(_this.allFields).forEach(function (param) {\n                    if (hasOwn.call(obj, param)) {\n                        addParam(built, param, obj[param], true);\n                    }\n                    else {\n                        addParam(built, param, null, false);\n                    }\n                });\n                // Make sure that the \"type\" field was filled automatically.\n                if (built.type !== _this.typeName) {\n                    throw new Error(\"\");\n                }\n                return built;\n            };\n            Object.defineProperty(builders, getBuilderName(this.typeName), {\n                enumerable: true,\n                value: builder\n            });\n            return this;\n        };\n        // The reason fields are specified using .field(...) instead of an object\n        // literal syntax is somewhat subtle: the object literal syntax would\n        // support only one key and one value, but with .field(...) we can pass\n        // any number of arguments to specify the field.\n        DefImpl.prototype.field = function (name, type, defaultFn, hidden) {\n            if (this.finalized) {\n                console.error(\"Ignoring attempt to redefine field \" +\n                    JSON.stringify(name) + \" of finalized type \" +\n                    JSON.stringify(this.typeName));\n                return this;\n            }\n            this.ownFields[name] = new Field(name, Type.from(type), defaultFn, hidden);\n            return this; // For chaining.\n        };\n        DefImpl.prototype.finalize = function () {\n            var _this = this;\n            // It's not an error to finalize a type more than once, but only the\n            // first call to .finalize does anything.\n            if (!this.finalized) {\n                var allFields = this.allFields;\n                var allSupertypes = this.allSupertypes;\n                this.baseNames.forEach(function (name) {\n                    var def = defCache[name];\n                    if (def instanceof Def) {\n                        def.finalize();\n                        extend(allFields, def.allFields);\n                        extend(allSupertypes, def.allSupertypes);\n                    }\n                    else {\n                        var message = \"unknown supertype name \" +\n                            JSON.stringify(name) +\n                            \" for subtype \" +\n                            JSON.stringify(_this.typeName);\n                        throw new Error(message);\n                    }\n                });\n                // TODO Warn if fields are overridden with incompatible types.\n                extend(allFields, this.ownFields);\n                allSupertypes[this.typeName] = this;\n                this.fieldNames.length = 0;\n                for (var fieldName in allFields) {\n                    if (hasOwn.call(allFields, fieldName) &&\n                        !allFields[fieldName].hidden) {\n                        this.fieldNames.push(fieldName);\n                    }\n                }\n                // Types are exported only once they have been finalized.\n                Object.defineProperty(namedTypes, this.typeName, {\n                    enumerable: true,\n                    value: this.type\n                });\n                this.finalized = true;\n                // A linearization of the inheritance hierarchy.\n                populateSupertypeList(this.typeName, this.supertypeList);\n                if (this.buildable &&\n                    this.supertypeList.lastIndexOf(\"Expression\") >= 0) {\n                    wrapExpressionBuilderWithStatement(this.typeName);\n                }\n            }\n        };\n        return DefImpl;\n    }(Def));\n    // Note that the list returned by this function is a copy of the internal\n    // supertypeList, *without* the typeName itself as the first element.\n    function getSupertypeNames(typeName) {\n        if (!hasOwn.call(defCache, typeName)) {\n            throw new Error(\"\");\n        }\n        var d = defCache[typeName];\n        if (d.finalized !== true) {\n            throw new Error(\"\");\n        }\n        return d.supertypeList.slice(1);\n    }\n    // Returns an object mapping from every known type in the defCache to the\n    // most specific supertype whose name is an own property of the candidates\n    // object.\n    function computeSupertypeLookupTable(candidates) {\n        var table = {};\n        var typeNames = Object.keys(defCache);\n        var typeNameCount = typeNames.length;\n        for (var i = 0; i < typeNameCount; ++i) {\n            var typeName = typeNames[i];\n            var d = defCache[typeName];\n            if (d.finalized !== true) {\n                throw new Error(\"\" + typeName);\n            }\n            for (var j = 0; j < d.supertypeList.length; ++j) {\n                var superTypeName = d.supertypeList[j];\n                if (hasOwn.call(candidates, superTypeName)) {\n                    table[typeName] = superTypeName;\n                    break;\n                }\n            }\n        }\n        return table;\n    }\n    var builders = Object.create(null);\n    // This object is used as prototype for any node created by a builder.\n    var nodePrototype = {};\n    // Call this function to define a new method to be shared by all AST\n    // nodes. The replaced method (if any) is returned for easy wrapping.\n    function defineMethod(name, func) {\n        var old = nodePrototype[name];\n        // Pass undefined as func to delete nodePrototype[name].\n        if (isUndefined.check(func)) {\n            delete nodePrototype[name];\n        }\n        else {\n            isFunction.assert(func);\n            Object.defineProperty(nodePrototype, name, {\n                enumerable: true,\n                configurable: true,\n                value: func\n            });\n        }\n        return old;\n    }\n    function getBuilderName(typeName) {\n        return typeName.replace(/^[A-Z]+/, function (upperCasePrefix) {\n            var len = upperCasePrefix.length;\n            switch (len) {\n                case 0: return \"\";\n                // If there's only one initial capital letter, just lower-case it.\n                case 1: return upperCasePrefix.toLowerCase();\n                default:\n                    // If there's more than one initial capital letter, lower-case\n                    // all but the last one, so that XMLDefaultDeclaration (for\n                    // example) becomes xmlDefaultDeclaration.\n                    return upperCasePrefix.slice(0, len - 1).toLowerCase() +\n                        upperCasePrefix.charAt(len - 1);\n            }\n        });\n    }\n    function getStatementBuilderName(typeName) {\n        typeName = getBuilderName(typeName);\n        return typeName.replace(/(Expression)?$/, \"Statement\");\n    }\n    var namedTypes = {};\n    // Like Object.keys, but aware of what fields each AST type should have.\n    function getFieldNames(object) {\n        var d = defFromValue(object);\n        if (d) {\n            return d.fieldNames.slice(0);\n        }\n        if (\"type\" in object) {\n            throw new Error(\"did not recognize object of type \" +\n                JSON.stringify(object.type));\n        }\n        return Object.keys(object);\n    }\n    // Get the value of an object property, taking object.type and default\n    // functions into account.\n    function getFieldValue(object, fieldName) {\n        var d = defFromValue(object);\n        if (d) {\n            var field = d.allFields[fieldName];\n            if (field) {\n                return field.getValue(object);\n            }\n        }\n        return object && object[fieldName];\n    }\n    // Iterate over all defined fields of an object, including those missing\n    // or undefined, passing each field name and effective value (as returned\n    // by getFieldValue) to the callback. If the object has no corresponding\n    // Def, the callback will never be called.\n    function eachField(object, callback, context) {\n        getFieldNames(object).forEach(function (name) {\n            callback.call(this, name, getFieldValue(object, name));\n        }, context);\n    }\n    // Similar to eachField, except that iteration stops as soon as the\n    // callback returns a truthy value. Like Array.prototype.some, the final\n    // result is either true or false to indicates whether the callback\n    // returned true for any element or not.\n    function someField(object, callback, context) {\n        return getFieldNames(object).some(function (name) {\n            return callback.call(this, name, getFieldValue(object, name));\n        }, context);\n    }\n    // Adds an additional builder for Expression subtypes\n    // that wraps the built Expression in an ExpressionStatements.\n    function wrapExpressionBuilderWithStatement(typeName) {\n        var wrapperName = getStatementBuilderName(typeName);\n        // skip if the builder already exists\n        if (builders[wrapperName])\n            return;\n        // the builder function to wrap with builders.ExpressionStatement\n        var wrapped = builders[getBuilderName(typeName)];\n        // skip if there is nothing to wrap\n        if (!wrapped)\n            return;\n        var builder = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return builders.expressionStatement(wrapped.apply(builders, args));\n        };\n        builder.from = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return builders.expressionStatement(wrapped.from.apply(builders, args));\n        };\n        builders[wrapperName] = builder;\n    }\n    function populateSupertypeList(typeName, list) {\n        list.length = 0;\n        list.push(typeName);\n        var lastSeen = Object.create(null);\n        for (var pos = 0; pos < list.length; ++pos) {\n            typeName = list[pos];\n            var d = defCache[typeName];\n            if (d.finalized !== true) {\n                throw new Error(\"\");\n            }\n            // If we saw typeName earlier in the breadth-first traversal,\n            // delete the last-seen occurrence.\n            if (hasOwn.call(lastSeen, typeName)) {\n                delete list[lastSeen[typeName]];\n            }\n            // Record the new index of the last-seen occurrence of typeName.\n            lastSeen[typeName] = pos;\n            // Enqueue the base names of this type.\n            list.push.apply(list, d.baseNames);\n        }\n        // Compaction loop to remove array holes.\n        for (var to = 0, from = to, len = list.length; from < len; ++from) {\n            if (hasOwn.call(list, from)) {\n                list[to++] = list[from];\n            }\n        }\n        list.length = to;\n    }\n    function extend(into, from) {\n        Object.keys(from).forEach(function (name) {\n            into[name] = from[name];\n        });\n        return into;\n    }\n    function finalize() {\n        Object.keys(defCache).forEach(function (name) {\n            defCache[name].finalize();\n        });\n    }\n    return {\n        Type: Type,\n        builtInTypes: builtInTypes,\n        getSupertypeNames: getSupertypeNames,\n        computeSupertypeLookupTable: computeSupertypeLookupTable,\n        builders: builders,\n        defineMethod: defineMethod,\n        getBuilderName: getBuilderName,\n        getStatementBuilderName: getStatementBuilderName,\n        namedTypes: namedTypes,\n        getFieldNames: getFieldNames,\n        getFieldValue: getFieldValue,\n        eachField: eachField,\n        someField: someField,\n        finalize: finalize,\n    };\n}\nexports.default = typesPlugin;\n;\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = (0, tslib_1.__importDefault)(require(\"./types\"));\nvar Op = Object.prototype;\nvar hasOwn = Op.hasOwnProperty;\nfunction pathPlugin(fork) {\n    var types = fork.use(types_1.default);\n    var isArray = types.builtInTypes.array;\n    var isNumber = types.builtInTypes.number;\n    var Path = function Path(value, parentPath, name) {\n        if (!(this instanceof Path)) {\n            throw new Error(\"Path constructor cannot be invoked without 'new'\");\n        }\n        if (parentPath) {\n            if (!(parentPath instanceof Path)) {\n                throw new Error(\"\");\n            }\n        }\n        else {\n            parentPath = null;\n            name = null;\n        }\n        // The value encapsulated by this Path, generally equal to\n        // parentPath.value[name] if we have a parentPath.\n        this.value = value;\n        // The immediate parent Path of this Path.\n        this.parentPath = parentPath;\n        // The name of the property of parentPath.value through which this\n        // Path's value was reached.\n        this.name = name;\n        // Calling path.get(\"child\") multiple times always returns the same\n        // child Path object, for both performance and consistency reasons.\n        this.__childCache = null;\n    };\n    var Pp = Path.prototype;\n    function getChildCache(path) {\n        // Lazily create the child cache. This also cheapens cache\n        // invalidation, since you can just reset path.__childCache to null.\n        return path.__childCache || (path.__childCache = Object.create(null));\n    }\n    function getChildPath(path, name) {\n        var cache = getChildCache(path);\n        var actualChildValue = path.getValueProperty(name);\n        var childPath = cache[name];\n        if (!hasOwn.call(cache, name) ||\n            // Ensure consistency between cache and reality.\n            childPath.value !== actualChildValue) {\n            childPath = cache[name] = new path.constructor(actualChildValue, path, name);\n        }\n        return childPath;\n    }\n    // This method is designed to be overridden by subclasses that need to\n    // handle missing properties, etc.\n    Pp.getValueProperty = function getValueProperty(name) {\n        return this.value[name];\n    };\n    Pp.get = function get() {\n        var names = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            names[_i] = arguments[_i];\n        }\n        var path = this;\n        var count = names.length;\n        for (var i = 0; i < count; ++i) {\n            path = getChildPath(path, names[i]);\n        }\n        return path;\n    };\n    Pp.each = function each(callback, context) {\n        var childPaths = [];\n        var len = this.value.length;\n        var i = 0;\n        // Collect all the original child paths before invoking the callback.\n        for (var i = 0; i < len; ++i) {\n            if (hasOwn.call(this.value, i)) {\n                childPaths[i] = this.get(i);\n            }\n        }\n        // Invoke the callback on just the original child paths, regardless of\n        // any modifications made to the array by the callback. I chose these\n        // semantics over cleverly invoking the callback on new elements because\n        // this way is much easier to reason about.\n        context = context || this;\n        for (i = 0; i < len; ++i) {\n            if (hasOwn.call(childPaths, i)) {\n                callback.call(context, childPaths[i]);\n            }\n        }\n    };\n    Pp.map = function map(callback, context) {\n        var result = [];\n        this.each(function (childPath) {\n            result.push(callback.call(this, childPath));\n        }, context);\n        return result;\n    };\n    Pp.filter = function filter(callback, context) {\n        var result = [];\n        this.each(function (childPath) {\n            if (callback.call(this, childPath)) {\n                result.push(childPath);\n            }\n        }, context);\n        return result;\n    };\n    function emptyMoves() { }\n    function getMoves(path, offset, start, end) {\n        isArray.assert(path.value);\n        if (offset === 0) {\n            return emptyMoves;\n        }\n        var length = path.value.length;\n        if (length < 1) {\n            return emptyMoves;\n        }\n        var argc = arguments.length;\n        if (argc === 2) {\n            start = 0;\n            end = length;\n        }\n        else if (argc === 3) {\n            start = Math.max(start, 0);\n            end = length;\n        }\n        else {\n            start = Math.max(start, 0);\n            end = Math.min(end, length);\n        }\n        isNumber.assert(start);\n        isNumber.assert(end);\n        var moves = Object.create(null);\n        var cache = getChildCache(path);\n        for (var i = start; i < end; ++i) {\n            if (hasOwn.call(path.value, i)) {\n                var childPath = path.get(i);\n                if (childPath.name !== i) {\n                    throw new Error(\"\");\n                }\n                var newIndex = i + offset;\n                childPath.name = newIndex;\n                moves[newIndex] = childPath;\n                delete cache[i];\n            }\n        }\n        delete cache.length;\n        return function () {\n            for (var newIndex in moves) {\n                var childPath = moves[newIndex];\n                if (childPath.name !== +newIndex) {\n                    throw new Error(\"\");\n                }\n                cache[newIndex] = childPath;\n                path.value[newIndex] = childPath.value;\n            }\n        };\n    }\n    Pp.shift = function shift() {\n        var move = getMoves(this, -1);\n        var result = this.value.shift();\n        move();\n        return result;\n    };\n    Pp.unshift = function unshift() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var move = getMoves(this, args.length);\n        var result = this.value.unshift.apply(this.value, args);\n        move();\n        return result;\n    };\n    Pp.push = function push() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        isArray.assert(this.value);\n        delete getChildCache(this).length;\n        return this.value.push.apply(this.value, args);\n    };\n    Pp.pop = function pop() {\n        isArray.assert(this.value);\n        var cache = getChildCache(this);\n        delete cache[this.value.length - 1];\n        delete cache.length;\n        return this.value.pop();\n    };\n    Pp.insertAt = function insertAt(index) {\n        var argc = arguments.length;\n        var move = getMoves(this, argc - 1, index);\n        if (move === emptyMoves && argc <= 1) {\n            return this;\n        }\n        index = Math.max(index, 0);\n        for (var i = 1; i < argc; ++i) {\n            this.value[index + i - 1] = arguments[i];\n        }\n        move();\n        return this;\n    };\n    Pp.insertBefore = function insertBefore() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var pp = this.parentPath;\n        var argc = args.length;\n        var insertAtArgs = [this.name];\n        for (var i = 0; i < argc; ++i) {\n            insertAtArgs.push(args[i]);\n        }\n        return pp.insertAt.apply(pp, insertAtArgs);\n    };\n    Pp.insertAfter = function insertAfter() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var pp = this.parentPath;\n        var argc = args.length;\n        var insertAtArgs = [this.name + 1];\n        for (var i = 0; i < argc; ++i) {\n            insertAtArgs.push(args[i]);\n        }\n        return pp.insertAt.apply(pp, insertAtArgs);\n    };\n    function repairRelationshipWithParent(path) {\n        if (!(path instanceof Path)) {\n            throw new Error(\"\");\n        }\n        var pp = path.parentPath;\n        if (!pp) {\n            // Orphan paths have no relationship to repair.\n            return path;\n        }\n        var parentValue = pp.value;\n        var parentCache = getChildCache(pp);\n        // Make sure parentCache[path.name] is populated.\n        if (parentValue[path.name] === path.value) {\n            parentCache[path.name] = path;\n        }\n        else if (isArray.check(parentValue)) {\n            // Something caused path.name to become out of date, so attempt to\n            // recover by searching for path.value in parentValue.\n            var i = parentValue.indexOf(path.value);\n            if (i >= 0) {\n                parentCache[path.name = i] = path;\n            }\n        }\n        else {\n            // If path.value disagrees with parentValue[path.name], and\n            // path.name is not an array index, let path.value become the new\n            // parentValue[path.name] and update parentCache accordingly.\n            parentValue[path.name] = path.value;\n            parentCache[path.name] = path;\n        }\n        if (parentValue[path.name] !== path.value) {\n            throw new Error(\"\");\n        }\n        if (path.parentPath.get(path.name) !== path) {\n            throw new Error(\"\");\n        }\n        return path;\n    }\n    Pp.replace = function replace(replacement) {\n        var results = [];\n        var parentValue = this.parentPath.value;\n        var parentCache = getChildCache(this.parentPath);\n        var count = arguments.length;\n        repairRelationshipWithParent(this);\n        if (isArray.check(parentValue)) {\n            var originalLength = parentValue.length;\n            var move = getMoves(this.parentPath, count - 1, this.name + 1);\n            var spliceArgs = [this.name, 1];\n            for (var i = 0; i < count; ++i) {\n                spliceArgs.push(arguments[i]);\n            }\n            var splicedOut = parentValue.splice.apply(parentValue, spliceArgs);\n            if (splicedOut[0] !== this.value) {\n                throw new Error(\"\");\n            }\n            if (parentValue.length !== (originalLength - 1 + count)) {\n                throw new Error(\"\");\n            }\n            move();\n            if (count === 0) {\n                delete this.value;\n                delete parentCache[this.name];\n                this.__childCache = null;\n            }\n            else {\n                if (parentValue[this.name] !== replacement) {\n                    throw new Error(\"\");\n                }\n                if (this.value !== replacement) {\n                    this.value = replacement;\n                    this.__childCache = null;\n                }\n                for (i = 0; i < count; ++i) {\n                    results.push(this.parentPath.get(this.name + i));\n                }\n                if (results[0] !== this) {\n                    throw new Error(\"\");\n                }\n            }\n        }\n        else if (count === 1) {\n            if (this.value !== replacement) {\n                this.__childCache = null;\n            }\n            this.value = parentValue[this.name] = replacement;\n            results.push(this);\n        }\n        else if (count === 0) {\n            delete parentValue[this.name];\n            delete this.value;\n            this.__childCache = null;\n            // Leave this path cached as parentCache[this.name], even though\n            // it no longer has a value defined.\n        }\n        else {\n            throw new Error(\"Could not replace path\");\n        }\n        return results;\n    };\n    return Path;\n}\nexports.default = pathPlugin;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = (0, tslib_1.__importDefault)(require(\"./types\"));\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction scopePlugin(fork) {\n    var types = fork.use(types_1.default);\n    var Type = types.Type;\n    var namedTypes = types.namedTypes;\n    var Node = namedTypes.Node;\n    var Expression = namedTypes.Expression;\n    var isArray = types.builtInTypes.array;\n    var b = types.builders;\n    var Scope = function Scope(path, parentScope) {\n        if (!(this instanceof Scope)) {\n            throw new Error(\"Scope constructor cannot be invoked without 'new'\");\n        }\n        if (!TypeParameterScopeType.check(path.value)) {\n            ScopeType.assert(path.value);\n        }\n        var depth;\n        if (parentScope) {\n            if (!(parentScope instanceof Scope)) {\n                throw new Error(\"\");\n            }\n            depth = parentScope.depth + 1;\n        }\n        else {\n            parentScope = null;\n            depth = 0;\n        }\n        Object.defineProperties(this, {\n            path: { value: path },\n            node: { value: path.value },\n            isGlobal: { value: !parentScope, enumerable: true },\n            depth: { value: depth },\n            parent: { value: parentScope },\n            bindings: { value: {} },\n            types: { value: {} },\n        });\n    };\n    var ScopeType = Type.or(\n    // Program nodes introduce global scopes.\n    namedTypes.Program, \n    // Function is the supertype of FunctionExpression,\n    // FunctionDeclaration, ArrowExpression, etc.\n    namedTypes.Function, \n    // In case you didn't know, the caught parameter shadows any variable\n    // of the same name in an outer scope.\n    namedTypes.CatchClause);\n    // These types introduce scopes that are restricted to type parameters in\n    // Flow (this doesn't apply to ECMAScript).\n    var TypeParameterScopeType = Type.or(namedTypes.Function, namedTypes.ClassDeclaration, namedTypes.ClassExpression, namedTypes.InterfaceDeclaration, namedTypes.TSInterfaceDeclaration, namedTypes.TypeAlias, namedTypes.TSTypeAliasDeclaration);\n    var FlowOrTSTypeParameterType = Type.or(namedTypes.TypeParameter, namedTypes.TSTypeParameter);\n    Scope.isEstablishedBy = function (node) {\n        return ScopeType.check(node) || TypeParameterScopeType.check(node);\n    };\n    var Sp = Scope.prototype;\n    // Will be overridden after an instance lazily calls scanScope.\n    Sp.didScan = false;\n    Sp.declares = function (name) {\n        this.scan();\n        return hasOwn.call(this.bindings, name);\n    };\n    Sp.declaresType = function (name) {\n        this.scan();\n        return hasOwn.call(this.types, name);\n    };\n    Sp.declareTemporary = function (prefix) {\n        if (prefix) {\n            if (!/^[a-z$_]/i.test(prefix)) {\n                throw new Error(\"\");\n            }\n        }\n        else {\n            prefix = \"t$\";\n        }\n        // Include this.depth in the name to make sure the name does not\n        // collide with any variables in nested/enclosing scopes.\n        prefix += this.depth.toString(36) + \"$\";\n        this.scan();\n        var index = 0;\n        while (this.declares(prefix + index)) {\n            ++index;\n        }\n        var name = prefix + index;\n        return this.bindings[name] = types.builders.identifier(name);\n    };\n    Sp.injectTemporary = function (identifier, init) {\n        identifier || (identifier = this.declareTemporary());\n        var bodyPath = this.path.get(\"body\");\n        if (namedTypes.BlockStatement.check(bodyPath.value)) {\n            bodyPath = bodyPath.get(\"body\");\n        }\n        bodyPath.unshift(b.variableDeclaration(\"var\", [b.variableDeclarator(identifier, init || null)]));\n        return identifier;\n    };\n    Sp.scan = function (force) {\n        if (force || !this.didScan) {\n            for (var name in this.bindings) {\n                // Empty out this.bindings, just in cases.\n                delete this.bindings[name];\n            }\n            for (var name in this.types) {\n                // Empty out this.types, just in cases.\n                delete this.types[name];\n            }\n            scanScope(this.path, this.bindings, this.types);\n            this.didScan = true;\n        }\n    };\n    Sp.getBindings = function () {\n        this.scan();\n        return this.bindings;\n    };\n    Sp.getTypes = function () {\n        this.scan();\n        return this.types;\n    };\n    function scanScope(path, bindings, scopeTypes) {\n        var node = path.value;\n        if (TypeParameterScopeType.check(node)) {\n            var params = path.get('typeParameters', 'params');\n            if (isArray.check(params.value)) {\n                params.each(function (childPath) {\n                    addTypeParameter(childPath, scopeTypes);\n                });\n            }\n        }\n        if (ScopeType.check(node)) {\n            if (namedTypes.CatchClause.check(node)) {\n                // A catch clause establishes a new scope but the only variable\n                // bound in that scope is the catch parameter. Any other\n                // declarations create bindings in the outer scope.\n                addPattern(path.get(\"param\"), bindings);\n            }\n            else {\n                recursiveScanScope(path, bindings, scopeTypes);\n            }\n        }\n    }\n    function recursiveScanScope(path, bindings, scopeTypes) {\n        var node = path.value;\n        if (path.parent &&\n            namedTypes.FunctionExpression.check(path.parent.node) &&\n            path.parent.node.id) {\n            addPattern(path.parent.get(\"id\"), bindings);\n        }\n        if (!node) {\n            // None of the remaining cases matter if node is falsy.\n        }\n        else if (isArray.check(node)) {\n            path.each(function (childPath) {\n                recursiveScanChild(childPath, bindings, scopeTypes);\n            });\n        }\n        else if (namedTypes.Function.check(node)) {\n            path.get(\"params\").each(function (paramPath) {\n                addPattern(paramPath, bindings);\n            });\n            recursiveScanChild(path.get(\"body\"), bindings, scopeTypes);\n            recursiveScanScope(path.get(\"typeParameters\"), bindings, scopeTypes);\n        }\n        else if ((namedTypes.TypeAlias && namedTypes.TypeAlias.check(node)) ||\n            (namedTypes.InterfaceDeclaration && namedTypes.InterfaceDeclaration.check(node)) ||\n            (namedTypes.TSTypeAliasDeclaration && namedTypes.TSTypeAliasDeclaration.check(node)) ||\n            (namedTypes.TSInterfaceDeclaration && namedTypes.TSInterfaceDeclaration.check(node))) {\n            addTypePattern(path.get(\"id\"), scopeTypes);\n        }\n        else if (namedTypes.VariableDeclarator.check(node)) {\n            addPattern(path.get(\"id\"), bindings);\n            recursiveScanChild(path.get(\"init\"), bindings, scopeTypes);\n        }\n        else if (node.type === \"ImportSpecifier\" ||\n            node.type === \"ImportNamespaceSpecifier\" ||\n            node.type === \"ImportDefaultSpecifier\") {\n            addPattern(\n            // Esprima used to use the .name field to refer to the local\n            // binding identifier for ImportSpecifier nodes, but .id for\n            // ImportNamespaceSpecifier and ImportDefaultSpecifier nodes.\n            // ESTree/Acorn/ESpree use .local for all three node types.\n            path.get(node.local ? \"local\" :\n                node.name ? \"name\" : \"id\"), bindings);\n        }\n        else if (Node.check(node) && !Expression.check(node)) {\n            types.eachField(node, function (name, child) {\n                var childPath = path.get(name);\n                if (!pathHasValue(childPath, child)) {\n                    throw new Error(\"\");\n                }\n                recursiveScanChild(childPath, bindings, scopeTypes);\n            });\n        }\n    }\n    function pathHasValue(path, value) {\n        if (path.value === value) {\n            return true;\n        }\n        // Empty arrays are probably produced by defaults.emptyArray, in which\n        // case is makes sense to regard them as equivalent, if not ===.\n        if (Array.isArray(path.value) &&\n            path.value.length === 0 &&\n            Array.isArray(value) &&\n            value.length === 0) {\n            return true;\n        }\n        return false;\n    }\n    function recursiveScanChild(path, bindings, scopeTypes) {\n        var node = path.value;\n        if (!node || Expression.check(node)) {\n            // Ignore falsy values and Expressions.\n        }\n        else if (namedTypes.FunctionDeclaration.check(node) &&\n            node.id !== null) {\n            addPattern(path.get(\"id\"), bindings);\n        }\n        else if (namedTypes.ClassDeclaration &&\n            namedTypes.ClassDeclaration.check(node) &&\n            node.id !== null) {\n            addPattern(path.get(\"id\"), bindings);\n            recursiveScanScope(path.get(\"typeParameters\"), bindings, scopeTypes);\n        }\n        else if ((namedTypes.InterfaceDeclaration &&\n            namedTypes.InterfaceDeclaration.check(node)) ||\n            (namedTypes.TSInterfaceDeclaration &&\n                namedTypes.TSInterfaceDeclaration.check(node))) {\n            addTypePattern(path.get(\"id\"), scopeTypes);\n        }\n        else if (ScopeType.check(node)) {\n            if (namedTypes.CatchClause.check(node) &&\n                // TODO Broaden this to accept any pattern.\n                namedTypes.Identifier.check(node.param)) {\n                var catchParamName = node.param.name;\n                var hadBinding = hasOwn.call(bindings, catchParamName);\n                // Any declarations that occur inside the catch body that do\n                // not have the same name as the catch parameter should count\n                // as bindings in the outer scope.\n                recursiveScanScope(path.get(\"body\"), bindings, scopeTypes);\n                // If a new binding matching the catch parameter name was\n                // created while scanning the catch body, ignore it because it\n                // actually refers to the catch parameter and not the outer\n                // scope that we're currently scanning.\n                if (!hadBinding) {\n                    delete bindings[catchParamName];\n                }\n            }\n        }\n        else {\n            recursiveScanScope(path, bindings, scopeTypes);\n        }\n    }\n    function addPattern(patternPath, bindings) {\n        var pattern = patternPath.value;\n        namedTypes.Pattern.assert(pattern);\n        if (namedTypes.Identifier.check(pattern)) {\n            if (hasOwn.call(bindings, pattern.name)) {\n                bindings[pattern.name].push(patternPath);\n            }\n            else {\n                bindings[pattern.name] = [patternPath];\n            }\n        }\n        else if (namedTypes.AssignmentPattern &&\n            namedTypes.AssignmentPattern.check(pattern)) {\n            addPattern(patternPath.get('left'), bindings);\n        }\n        else if (namedTypes.ObjectPattern &&\n            namedTypes.ObjectPattern.check(pattern)) {\n            patternPath.get('properties').each(function (propertyPath) {\n                var property = propertyPath.value;\n                if (namedTypes.Pattern.check(property)) {\n                    addPattern(propertyPath, bindings);\n                }\n                else if (namedTypes.Property.check(property) ||\n                    (namedTypes.ObjectProperty &&\n                        namedTypes.ObjectProperty.check(property))) {\n                    addPattern(propertyPath.get('value'), bindings);\n                }\n                else if (namedTypes.SpreadProperty &&\n                    namedTypes.SpreadProperty.check(property)) {\n                    addPattern(propertyPath.get('argument'), bindings);\n                }\n            });\n        }\n        else if (namedTypes.ArrayPattern &&\n            namedTypes.ArrayPattern.check(pattern)) {\n            patternPath.get('elements').each(function (elementPath) {\n                var element = elementPath.value;\n                if (namedTypes.Pattern.check(element)) {\n                    addPattern(elementPath, bindings);\n                }\n                else if (namedTypes.SpreadElement &&\n                    namedTypes.SpreadElement.check(element)) {\n                    addPattern(elementPath.get(\"argument\"), bindings);\n                }\n            });\n        }\n        else if (namedTypes.PropertyPattern &&\n            namedTypes.PropertyPattern.check(pattern)) {\n            addPattern(patternPath.get('pattern'), bindings);\n        }\n        else if ((namedTypes.SpreadElementPattern &&\n            namedTypes.SpreadElementPattern.check(pattern)) ||\n            (namedTypes.RestElement &&\n                namedTypes.RestElement.check(pattern)) ||\n            (namedTypes.SpreadPropertyPattern &&\n                namedTypes.SpreadPropertyPattern.check(pattern))) {\n            addPattern(patternPath.get('argument'), bindings);\n        }\n    }\n    function addTypePattern(patternPath, types) {\n        var pattern = patternPath.value;\n        namedTypes.Pattern.assert(pattern);\n        if (namedTypes.Identifier.check(pattern)) {\n            if (hasOwn.call(types, pattern.name)) {\n                types[pattern.name].push(patternPath);\n            }\n            else {\n                types[pattern.name] = [patternPath];\n            }\n        }\n    }\n    function addTypeParameter(parameterPath, types) {\n        var parameter = parameterPath.value;\n        FlowOrTSTypeParameterType.assert(parameter);\n        if (hasOwn.call(types, parameter.name)) {\n            types[parameter.name].push(parameterPath);\n        }\n        else {\n            types[parameter.name] = [parameterPath];\n        }\n    }\n    Sp.lookup = function (name) {\n        for (var scope = this; scope; scope = scope.parent)\n            if (scope.declares(name))\n                break;\n        return scope;\n    };\n    Sp.lookupType = function (name) {\n        for (var scope = this; scope; scope = scope.parent)\n            if (scope.declaresType(name))\n                break;\n        return scope;\n    };\n    Sp.getGlobalScope = function () {\n        var scope = this;\n        while (!scope.isGlobal)\n            scope = scope.parent;\n        return scope;\n    };\n    return Scope;\n}\nexports.default = scopePlugin;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = (0, tslib_1.__importDefault)(require(\"./types\"));\nvar path_1 = (0, tslib_1.__importDefault)(require(\"./path\"));\nvar scope_1 = (0, tslib_1.__importDefault)(require(\"./scope\"));\nfunction nodePathPlugin(fork) {\n    var types = fork.use(types_1.default);\n    var n = types.namedTypes;\n    var b = types.builders;\n    var isNumber = types.builtInTypes.number;\n    var isArray = types.builtInTypes.array;\n    var Path = fork.use(path_1.default);\n    var Scope = fork.use(scope_1.default);\n    var NodePath = function NodePath(value, parentPath, name) {\n        if (!(this instanceof NodePath)) {\n            throw new Error(\"NodePath constructor cannot be invoked without 'new'\");\n        }\n        Path.call(this, value, parentPath, name);\n    };\n    var NPp = NodePath.prototype = Object.create(Path.prototype, {\n        constructor: {\n            value: NodePath,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperties(NPp, {\n        node: {\n            get: function () {\n                Object.defineProperty(this, \"node\", {\n                    configurable: true,\n                    value: this._computeNode()\n                });\n                return this.node;\n            }\n        },\n        parent: {\n            get: function () {\n                Object.defineProperty(this, \"parent\", {\n                    configurable: true,\n                    value: this._computeParent()\n                });\n                return this.parent;\n            }\n        },\n        scope: {\n            get: function () {\n                Object.defineProperty(this, \"scope\", {\n                    configurable: true,\n                    value: this._computeScope()\n                });\n                return this.scope;\n            }\n        }\n    });\n    NPp.replace = function () {\n        delete this.node;\n        delete this.parent;\n        delete this.scope;\n        return Path.prototype.replace.apply(this, arguments);\n    };\n    NPp.prune = function () {\n        var remainingNodePath = this.parent;\n        this.replace();\n        return cleanUpNodesAfterPrune(remainingNodePath);\n    };\n    // The value of the first ancestor Path whose value is a Node.\n    NPp._computeNode = function () {\n        var value = this.value;\n        if (n.Node.check(value)) {\n            return value;\n        }\n        var pp = this.parentPath;\n        return pp && pp.node || null;\n    };\n    // The first ancestor Path whose value is a Node distinct from this.node.\n    NPp._computeParent = function () {\n        var value = this.value;\n        var pp = this.parentPath;\n        if (!n.Node.check(value)) {\n            while (pp && !n.Node.check(pp.value)) {\n                pp = pp.parentPath;\n            }\n            if (pp) {\n                pp = pp.parentPath;\n            }\n        }\n        while (pp && !n.Node.check(pp.value)) {\n            pp = pp.parentPath;\n        }\n        return pp || null;\n    };\n    // The closest enclosing scope that governs this node.\n    NPp._computeScope = function () {\n        var value = this.value;\n        var pp = this.parentPath;\n        var scope = pp && pp.scope;\n        if (n.Node.check(value) &&\n            Scope.isEstablishedBy(value)) {\n            scope = new Scope(this, scope);\n        }\n        return scope || null;\n    };\n    NPp.getValueProperty = function (name) {\n        return types.getFieldValue(this.value, name);\n    };\n    /**\n     * Determine whether this.node needs to be wrapped in parentheses in order\n     * for a parser to reproduce the same local AST structure.\n     *\n     * For instance, in the expression `(1 + 2) * 3`, the BinaryExpression\n     * whose operator is \"+\" needs parentheses, because `1 + 2 * 3` would\n     * parse differently.\n     *\n     * If assumeExpressionContext === true, we don't worry about edge cases\n     * like an anonymous FunctionExpression appearing lexically first in its\n     * enclosing statement and thus needing parentheses to avoid being parsed\n     * as a FunctionDeclaration with a missing name.\n     */\n    NPp.needsParens = function (assumeExpressionContext) {\n        var pp = this.parentPath;\n        if (!pp) {\n            return false;\n        }\n        var node = this.value;\n        // Only expressions need parentheses.\n        if (!n.Expression.check(node)) {\n            return false;\n        }\n        // Identifiers never need parentheses.\n        if (node.type === \"Identifier\") {\n            return false;\n        }\n        while (!n.Node.check(pp.value)) {\n            pp = pp.parentPath;\n            if (!pp) {\n                return false;\n            }\n        }\n        var parent = pp.value;\n        switch (node.type) {\n            case \"UnaryExpression\":\n            case \"SpreadElement\":\n            case \"SpreadProperty\":\n                return parent.type === \"MemberExpression\"\n                    && this.name === \"object\"\n                    && parent.object === node;\n            case \"BinaryExpression\":\n            case \"LogicalExpression\":\n                switch (parent.type) {\n                    case \"CallExpression\":\n                        return this.name === \"callee\"\n                            && parent.callee === node;\n                    case \"UnaryExpression\":\n                    case \"SpreadElement\":\n                    case \"SpreadProperty\":\n                        return true;\n                    case \"MemberExpression\":\n                        return this.name === \"object\"\n                            && parent.object === node;\n                    case \"BinaryExpression\":\n                    case \"LogicalExpression\": {\n                        var n_1 = node;\n                        var po = parent.operator;\n                        var pp_1 = PRECEDENCE[po];\n                        var no = n_1.operator;\n                        var np = PRECEDENCE[no];\n                        if (pp_1 > np) {\n                            return true;\n                        }\n                        if (pp_1 === np && this.name === \"right\") {\n                            if (parent.right !== n_1) {\n                                throw new Error(\"Nodes must be equal\");\n                            }\n                            return true;\n                        }\n                    }\n                    default:\n                        return false;\n                }\n            case \"SequenceExpression\":\n                switch (parent.type) {\n                    case \"ForStatement\":\n                        // Although parentheses wouldn't hurt around sequence\n                        // expressions in the head of for loops, traditional style\n                        // dictates that e.g. i++, j++ should not be wrapped with\n                        // parentheses.\n                        return false;\n                    case \"ExpressionStatement\":\n                        return this.name !== \"expression\";\n                    default:\n                        // Otherwise err on the side of overparenthesization, adding\n                        // explicit exceptions above if this proves overzealous.\n                        return true;\n                }\n            case \"YieldExpression\":\n                switch (parent.type) {\n                    case \"BinaryExpression\":\n                    case \"LogicalExpression\":\n                    case \"UnaryExpression\":\n                    case \"SpreadElement\":\n                    case \"SpreadProperty\":\n                    case \"CallExpression\":\n                    case \"MemberExpression\":\n                    case \"NewExpression\":\n                    case \"ConditionalExpression\":\n                    case \"YieldExpression\":\n                        return true;\n                    default:\n                        return false;\n                }\n            case \"Literal\":\n                return parent.type === \"MemberExpression\"\n                    && isNumber.check(node.value)\n                    && this.name === \"object\"\n                    && parent.object === node;\n            case \"AssignmentExpression\":\n            case \"ConditionalExpression\":\n                switch (parent.type) {\n                    case \"UnaryExpression\":\n                    case \"SpreadElement\":\n                    case \"SpreadProperty\":\n                    case \"BinaryExpression\":\n                    case \"LogicalExpression\":\n                        return true;\n                    case \"CallExpression\":\n                        return this.name === \"callee\"\n                            && parent.callee === node;\n                    case \"ConditionalExpression\":\n                        return this.name === \"test\"\n                            && parent.test === node;\n                    case \"MemberExpression\":\n                        return this.name === \"object\"\n                            && parent.object === node;\n                    default:\n                        return false;\n                }\n            default:\n                if (parent.type === \"NewExpression\" &&\n                    this.name === \"callee\" &&\n                    parent.callee === node) {\n                    return containsCallExpression(node);\n                }\n        }\n        if (assumeExpressionContext !== true &&\n            !this.canBeFirstInStatement() &&\n            this.firstInStatement())\n            return true;\n        return false;\n    };\n    function isBinary(node) {\n        return n.BinaryExpression.check(node)\n            || n.LogicalExpression.check(node);\n    }\n    // @ts-ignore 'isUnaryLike' is declared but its value is never read. [6133]\n    function isUnaryLike(node) {\n        return n.UnaryExpression.check(node)\n            // I considered making SpreadElement and SpreadProperty subtypes\n            // of UnaryExpression, but they're not really Expression nodes.\n            || (n.SpreadElement && n.SpreadElement.check(node))\n            || (n.SpreadProperty && n.SpreadProperty.check(node));\n    }\n    var PRECEDENCE = {};\n    [[\"||\"],\n        [\"&&\"],\n        [\"|\"],\n        [\"^\"],\n        [\"&\"],\n        [\"==\", \"===\", \"!=\", \"!==\"],\n        [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n        [\">>\", \"<<\", \">>>\"],\n        [\"+\", \"-\"],\n        [\"*\", \"/\", \"%\"]\n    ].forEach(function (tier, i) {\n        tier.forEach(function (op) {\n            PRECEDENCE[op] = i;\n        });\n    });\n    function containsCallExpression(node) {\n        if (n.CallExpression.check(node)) {\n            return true;\n        }\n        if (isArray.check(node)) {\n            return node.some(containsCallExpression);\n        }\n        if (n.Node.check(node)) {\n            return types.someField(node, function (_name, child) {\n                return containsCallExpression(child);\n            });\n        }\n        return false;\n    }\n    NPp.canBeFirstInStatement = function () {\n        var node = this.node;\n        return !n.FunctionExpression.check(node)\n            && !n.ObjectExpression.check(node);\n    };\n    NPp.firstInStatement = function () {\n        return firstInStatement(this);\n    };\n    function firstInStatement(path) {\n        for (var node, parent; path.parent; path = path.parent) {\n            node = path.node;\n            parent = path.parent.node;\n            if (n.BlockStatement.check(parent) &&\n                path.parent.name === \"body\" &&\n                path.name === 0) {\n                if (parent.body[0] !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                return true;\n            }\n            if (n.ExpressionStatement.check(parent) &&\n                path.name === \"expression\") {\n                if (parent.expression !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                return true;\n            }\n            if (n.SequenceExpression.check(parent) &&\n                path.parent.name === \"expressions\" &&\n                path.name === 0) {\n                if (parent.expressions[0] !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (n.CallExpression.check(parent) &&\n                path.name === \"callee\") {\n                if (parent.callee !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (n.MemberExpression.check(parent) &&\n                path.name === \"object\") {\n                if (parent.object !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (n.ConditionalExpression.check(parent) &&\n                path.name === \"test\") {\n                if (parent.test !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (isBinary(parent) &&\n                path.name === \"left\") {\n                if (parent.left !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (n.UnaryExpression.check(parent) &&\n                !parent.prefix &&\n                path.name === \"argument\") {\n                if (parent.argument !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Pruning certain nodes will result in empty or incomplete nodes, here we clean those nodes up.\n     */\n    function cleanUpNodesAfterPrune(remainingNodePath) {\n        if (n.VariableDeclaration.check(remainingNodePath.node)) {\n            var declarations = remainingNodePath.get('declarations').value;\n            if (!declarations || declarations.length === 0) {\n                return remainingNodePath.prune();\n            }\n        }\n        else if (n.ExpressionStatement.check(remainingNodePath.node)) {\n            if (!remainingNodePath.get('expression').value) {\n                return remainingNodePath.prune();\n            }\n        }\n        else if (n.IfStatement.check(remainingNodePath.node)) {\n            cleanUpIfStatementAfterPrune(remainingNodePath);\n        }\n        return remainingNodePath;\n    }\n    function cleanUpIfStatementAfterPrune(ifStatement) {\n        var testExpression = ifStatement.get('test').value;\n        var alternate = ifStatement.get('alternate').value;\n        var consequent = ifStatement.get('consequent').value;\n        if (!consequent && !alternate) {\n            var testExpressionStatement = b.expressionStatement(testExpression);\n            ifStatement.replace(testExpressionStatement);\n        }\n        else if (!consequent && alternate) {\n            var negatedTestExpression = b.unaryExpression('!', testExpression, true);\n            if (n.UnaryExpression.check(testExpression) && testExpression.operator === '!') {\n                negatedTestExpression = testExpression.argument;\n            }\n            ifStatement.get(\"test\").replace(negatedTestExpression);\n            ifStatement.get(\"consequent\").replace(alternate);\n            ifStatement.get(\"alternate\").replace();\n        }\n    }\n    return NodePath;\n}\nexports.default = nodePathPlugin;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = (0, tslib_1.__importDefault)(require(\"./types\"));\nvar node_path_1 = (0, tslib_1.__importDefault)(require(\"./node-path\"));\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction pathVisitorPlugin(fork) {\n    var types = fork.use(types_1.default);\n    var NodePath = fork.use(node_path_1.default);\n    var isArray = types.builtInTypes.array;\n    var isObject = types.builtInTypes.object;\n    var isFunction = types.builtInTypes.function;\n    var undefined;\n    var PathVisitor = function PathVisitor() {\n        if (!(this instanceof PathVisitor)) {\n            throw new Error(\"PathVisitor constructor cannot be invoked without 'new'\");\n        }\n        // Permanent state.\n        this._reusableContextStack = [];\n        this._methodNameTable = computeMethodNameTable(this);\n        this._shouldVisitComments =\n            hasOwn.call(this._methodNameTable, \"Block\") ||\n                hasOwn.call(this._methodNameTable, \"Line\");\n        this.Context = makeContextConstructor(this);\n        // State reset every time PathVisitor.prototype.visit is called.\n        this._visiting = false;\n        this._changeReported = false;\n    };\n    function computeMethodNameTable(visitor) {\n        var typeNames = Object.create(null);\n        for (var methodName in visitor) {\n            if (/^visit[A-Z]/.test(methodName)) {\n                typeNames[methodName.slice(\"visit\".length)] = true;\n            }\n        }\n        var supertypeTable = types.computeSupertypeLookupTable(typeNames);\n        var methodNameTable = Object.create(null);\n        var typeNameKeys = Object.keys(supertypeTable);\n        var typeNameCount = typeNameKeys.length;\n        for (var i = 0; i < typeNameCount; ++i) {\n            var typeName = typeNameKeys[i];\n            methodName = \"visit\" + supertypeTable[typeName];\n            if (isFunction.check(visitor[methodName])) {\n                methodNameTable[typeName] = methodName;\n            }\n        }\n        return methodNameTable;\n    }\n    PathVisitor.fromMethodsObject = function fromMethodsObject(methods) {\n        if (methods instanceof PathVisitor) {\n            return methods;\n        }\n        if (!isObject.check(methods)) {\n            // An empty visitor?\n            return new PathVisitor;\n        }\n        var Visitor = function Visitor() {\n            if (!(this instanceof Visitor)) {\n                throw new Error(\"Visitor constructor cannot be invoked without 'new'\");\n            }\n            PathVisitor.call(this);\n        };\n        var Vp = Visitor.prototype = Object.create(PVp);\n        Vp.constructor = Visitor;\n        extend(Vp, methods);\n        extend(Visitor, PathVisitor);\n        isFunction.assert(Visitor.fromMethodsObject);\n        isFunction.assert(Visitor.visit);\n        return new Visitor;\n    };\n    function extend(target, source) {\n        for (var property in source) {\n            if (hasOwn.call(source, property)) {\n                target[property] = source[property];\n            }\n        }\n        return target;\n    }\n    PathVisitor.visit = function visit(node, methods) {\n        return PathVisitor.fromMethodsObject(methods).visit(node);\n    };\n    var PVp = PathVisitor.prototype;\n    PVp.visit = function () {\n        if (this._visiting) {\n            throw new Error(\"Recursively calling visitor.visit(path) resets visitor state. \" +\n                \"Try this.visit(path) or this.traverse(path) instead.\");\n        }\n        // Private state that needs to be reset before every traversal.\n        this._visiting = true;\n        this._changeReported = false;\n        this._abortRequested = false;\n        var argc = arguments.length;\n        var args = new Array(argc);\n        for (var i = 0; i < argc; ++i) {\n            args[i] = arguments[i];\n        }\n        if (!(args[0] instanceof NodePath)) {\n            args[0] = new NodePath({ root: args[0] }).get(\"root\");\n        }\n        // Called with the same arguments as .visit.\n        this.reset.apply(this, args);\n        var didNotThrow;\n        try {\n            var root = this.visitWithoutReset(args[0]);\n            didNotThrow = true;\n        }\n        finally {\n            this._visiting = false;\n            if (!didNotThrow && this._abortRequested) {\n                // If this.visitWithoutReset threw an exception and\n                // this._abortRequested was set to true, return the root of\n                // the AST instead of letting the exception propagate, so that\n                // client code does not have to provide a try-catch block to\n                // intercept the AbortRequest exception.  Other kinds of\n                // exceptions will propagate without being intercepted and\n                // rethrown by a catch block, so their stacks will accurately\n                // reflect the original throwing context.\n                return args[0].value;\n            }\n        }\n        return root;\n    };\n    PVp.AbortRequest = function AbortRequest() { };\n    PVp.abort = function () {\n        var visitor = this;\n        visitor._abortRequested = true;\n        var request = new visitor.AbortRequest();\n        // If you decide to catch this exception and stop it from propagating,\n        // make sure to call its cancel method to avoid silencing other\n        // exceptions that might be thrown later in the traversal.\n        request.cancel = function () {\n            visitor._abortRequested = false;\n        };\n        throw request;\n    };\n    PVp.reset = function (_path /*, additional arguments */) {\n        // Empty stub; may be reassigned or overridden by subclasses.\n    };\n    PVp.visitWithoutReset = function (path) {\n        if (this instanceof this.Context) {\n            // Since this.Context.prototype === this, there's a chance we\n            // might accidentally call context.visitWithoutReset. If that\n            // happens, re-invoke the method against context.visitor.\n            return this.visitor.visitWithoutReset(path);\n        }\n        if (!(path instanceof NodePath)) {\n            throw new Error(\"\");\n        }\n        var value = path.value;\n        var methodName = value &&\n            typeof value === \"object\" &&\n            typeof value.type === \"string\" &&\n            this._methodNameTable[value.type];\n        if (methodName) {\n            var context = this.acquireContext(path);\n            try {\n                return context.invokeVisitorMethod(methodName);\n            }\n            finally {\n                this.releaseContext(context);\n            }\n        }\n        else {\n            // If there was no visitor method to call, visit the children of\n            // this node generically.\n            return visitChildren(path, this);\n        }\n    };\n    function visitChildren(path, visitor) {\n        if (!(path instanceof NodePath)) {\n            throw new Error(\"\");\n        }\n        if (!(visitor instanceof PathVisitor)) {\n            throw new Error(\"\");\n        }\n        var value = path.value;\n        if (isArray.check(value)) {\n            path.each(visitor.visitWithoutReset, visitor);\n        }\n        else if (!isObject.check(value)) {\n            // No children to visit.\n        }\n        else {\n            var childNames = types.getFieldNames(value);\n            // The .comments field of the Node type is hidden, so we only\n            // visit it if the visitor defines visitBlock or visitLine, and\n            // value.comments is defined.\n            if (visitor._shouldVisitComments &&\n                value.comments &&\n                childNames.indexOf(\"comments\") < 0) {\n                childNames.push(\"comments\");\n            }\n            var childCount = childNames.length;\n            var childPaths = [];\n            for (var i = 0; i < childCount; ++i) {\n                var childName = childNames[i];\n                if (!hasOwn.call(value, childName)) {\n                    value[childName] = types.getFieldValue(value, childName);\n                }\n                childPaths.push(path.get(childName));\n            }\n            for (var i = 0; i < childCount; ++i) {\n                visitor.visitWithoutReset(childPaths[i]);\n            }\n        }\n        return path.value;\n    }\n    PVp.acquireContext = function (path) {\n        if (this._reusableContextStack.length === 0) {\n            return new this.Context(path);\n        }\n        return this._reusableContextStack.pop().reset(path);\n    };\n    PVp.releaseContext = function (context) {\n        if (!(context instanceof this.Context)) {\n            throw new Error(\"\");\n        }\n        this._reusableContextStack.push(context);\n        context.currentPath = null;\n    };\n    PVp.reportChanged = function () {\n        this._changeReported = true;\n    };\n    PVp.wasChangeReported = function () {\n        return this._changeReported;\n    };\n    function makeContextConstructor(visitor) {\n        function Context(path) {\n            if (!(this instanceof Context)) {\n                throw new Error(\"\");\n            }\n            if (!(this instanceof PathVisitor)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            Object.defineProperty(this, \"visitor\", {\n                value: visitor,\n                writable: false,\n                enumerable: true,\n                configurable: false\n            });\n            this.currentPath = path;\n            this.needToCallTraverse = true;\n            Object.seal(this);\n        }\n        if (!(visitor instanceof PathVisitor)) {\n            throw new Error(\"\");\n        }\n        // Note that the visitor object is the prototype of Context.prototype,\n        // so all visitor methods are inherited by context objects.\n        var Cp = Context.prototype = Object.create(visitor);\n        Cp.constructor = Context;\n        extend(Cp, sharedContextProtoMethods);\n        return Context;\n    }\n    // Every PathVisitor has a different this.Context constructor and\n    // this.Context.prototype object, but those prototypes can all use the\n    // same reset, invokeVisitorMethod, and traverse function objects.\n    var sharedContextProtoMethods = Object.create(null);\n    sharedContextProtoMethods.reset =\n        function reset(path) {\n            if (!(this instanceof this.Context)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            this.currentPath = path;\n            this.needToCallTraverse = true;\n            return this;\n        };\n    sharedContextProtoMethods.invokeVisitorMethod =\n        function invokeVisitorMethod(methodName) {\n            if (!(this instanceof this.Context)) {\n                throw new Error(\"\");\n            }\n            if (!(this.currentPath instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            var result = this.visitor[methodName].call(this, this.currentPath);\n            if (result === false) {\n                // Visitor methods return false to indicate that they have handled\n                // their own traversal needs, and we should not complain if\n                // this.needToCallTraverse is still true.\n                this.needToCallTraverse = false;\n            }\n            else if (result !== undefined) {\n                // Any other non-undefined value returned from the visitor method\n                // is interpreted as a replacement value.\n                this.currentPath = this.currentPath.replace(result)[0];\n                if (this.needToCallTraverse) {\n                    // If this.traverse still hasn't been called, visit the\n                    // children of the replacement node.\n                    this.traverse(this.currentPath);\n                }\n            }\n            if (this.needToCallTraverse !== false) {\n                throw new Error(\"Must either call this.traverse or return false in \" + methodName);\n            }\n            var path = this.currentPath;\n            return path && path.value;\n        };\n    sharedContextProtoMethods.traverse =\n        function traverse(path, newVisitor) {\n            if (!(this instanceof this.Context)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            if (!(this.currentPath instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            this.needToCallTraverse = false;\n            return visitChildren(path, PathVisitor.fromMethodsObject(newVisitor || this.visitor));\n        };\n    sharedContextProtoMethods.visit =\n        function visit(path, newVisitor) {\n            if (!(this instanceof this.Context)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            if (!(this.currentPath instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            this.needToCallTraverse = false;\n            return PathVisitor.fromMethodsObject(newVisitor || this.visitor).visitWithoutReset(path);\n        };\n    sharedContextProtoMethods.reportChanged = function reportChanged() {\n        this.visitor.reportChanged();\n    };\n    sharedContextProtoMethods.abort = function abort() {\n        this.needToCallTraverse = false;\n        this.visitor.abort();\n    };\n    return PathVisitor;\n}\nexports.default = pathVisitorPlugin;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = (0, tslib_1.__importDefault)(require(\"./types\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var getFieldNames = types.getFieldNames;\n    var getFieldValue = types.getFieldValue;\n    var isArray = types.builtInTypes.array;\n    var isObject = types.builtInTypes.object;\n    var isDate = types.builtInTypes.Date;\n    var isRegExp = types.builtInTypes.RegExp;\n    var hasOwn = Object.prototype.hasOwnProperty;\n    function astNodesAreEquivalent(a, b, problemPath) {\n        if (isArray.check(problemPath)) {\n            problemPath.length = 0;\n        }\n        else {\n            problemPath = null;\n        }\n        return areEquivalent(a, b, problemPath);\n    }\n    astNodesAreEquivalent.assert = function (a, b) {\n        var problemPath = [];\n        if (!astNodesAreEquivalent(a, b, problemPath)) {\n            if (problemPath.length === 0) {\n                if (a !== b) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n            }\n            else {\n                throw new Error(\"Nodes differ in the following path: \" +\n                    problemPath.map(subscriptForProperty).join(\"\"));\n            }\n        }\n    };\n    function subscriptForProperty(property) {\n        if (/[_$a-z][_$a-z0-9]*/i.test(property)) {\n            return \".\" + property;\n        }\n        return \"[\" + JSON.stringify(property) + \"]\";\n    }\n    function areEquivalent(a, b, problemPath) {\n        if (a === b) {\n            return true;\n        }\n        if (isArray.check(a)) {\n            return arraysAreEquivalent(a, b, problemPath);\n        }\n        if (isObject.check(a)) {\n            return objectsAreEquivalent(a, b, problemPath);\n        }\n        if (isDate.check(a)) {\n            return isDate.check(b) && (+a === +b);\n        }\n        if (isRegExp.check(a)) {\n            return isRegExp.check(b) && (a.source === b.source &&\n                a.global === b.global &&\n                a.multiline === b.multiline &&\n                a.ignoreCase === b.ignoreCase);\n        }\n        return a == b;\n    }\n    function arraysAreEquivalent(a, b, problemPath) {\n        isArray.assert(a);\n        var aLength = a.length;\n        if (!isArray.check(b) || b.length !== aLength) {\n            if (problemPath) {\n                problemPath.push(\"length\");\n            }\n            return false;\n        }\n        for (var i = 0; i < aLength; ++i) {\n            if (problemPath) {\n                problemPath.push(i);\n            }\n            if (i in a !== i in b) {\n                return false;\n            }\n            if (!areEquivalent(a[i], b[i], problemPath)) {\n                return false;\n            }\n            if (problemPath) {\n                var problemPathTail = problemPath.pop();\n                if (problemPathTail !== i) {\n                    throw new Error(\"\" + problemPathTail);\n                }\n            }\n        }\n        return true;\n    }\n    function objectsAreEquivalent(a, b, problemPath) {\n        isObject.assert(a);\n        if (!isObject.check(b)) {\n            return false;\n        }\n        // Fast path for a common property of AST nodes.\n        if (a.type !== b.type) {\n            if (problemPath) {\n                problemPath.push(\"type\");\n            }\n            return false;\n        }\n        var aNames = getFieldNames(a);\n        var aNameCount = aNames.length;\n        var bNames = getFieldNames(b);\n        var bNameCount = bNames.length;\n        if (aNameCount === bNameCount) {\n            for (var i = 0; i < aNameCount; ++i) {\n                var name = aNames[i];\n                var aChild = getFieldValue(a, name);\n                var bChild = getFieldValue(b, name);\n                if (problemPath) {\n                    problemPath.push(name);\n                }\n                if (!areEquivalent(aChild, bChild, problemPath)) {\n                    return false;\n                }\n                if (problemPath) {\n                    var problemPathTail = problemPath.pop();\n                    if (problemPathTail !== name) {\n                        throw new Error(\"\" + problemPathTail);\n                    }\n                }\n            }\n            return true;\n        }\n        if (!problemPath) {\n            return false;\n        }\n        // Since aNameCount !== bNameCount, we need to find some name that's\n        // missing in aNames but present in bNames, or vice-versa.\n        var seenNames = Object.create(null);\n        for (i = 0; i < aNameCount; ++i) {\n            seenNames[aNames[i]] = true;\n        }\n        for (i = 0; i < bNameCount; ++i) {\n            name = bNames[i];\n            if (!hasOwn.call(seenNames, name)) {\n                problemPath.push(name);\n                return false;\n            }\n            delete seenNames[name];\n        }\n        for (name in seenNames) {\n            problemPath.push(name);\n            break;\n        }\n        return false;\n    }\n    return astNodesAreEquivalent;\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = (0, tslib_1.__importDefault)(require(\"./lib/types\"));\nvar path_visitor_1 = (0, tslib_1.__importDefault)(require(\"./lib/path-visitor\"));\nvar equiv_1 = (0, tslib_1.__importDefault)(require(\"./lib/equiv\"));\nvar path_1 = (0, tslib_1.__importDefault)(require(\"./lib/path\"));\nvar node_path_1 = (0, tslib_1.__importDefault)(require(\"./lib/node-path\"));\nfunction default_1(plugins) {\n    var fork = createFork();\n    var types = fork.use(types_1.default);\n    plugins.forEach(fork.use);\n    types.finalize();\n    var PathVisitor = fork.use(path_visitor_1.default);\n    return {\n        Type: types.Type,\n        builtInTypes: types.builtInTypes,\n        namedTypes: types.namedTypes,\n        builders: types.builders,\n        defineMethod: types.defineMethod,\n        getFieldNames: types.getFieldNames,\n        getFieldValue: types.getFieldValue,\n        eachField: types.eachField,\n        someField: types.someField,\n        getSupertypeNames: types.getSupertypeNames,\n        getBuilderName: types.getBuilderName,\n        astNodesAreEquivalent: fork.use(equiv_1.default),\n        finalize: types.finalize,\n        Path: fork.use(path_1.default),\n        NodePath: fork.use(node_path_1.default),\n        PathVisitor: PathVisitor,\n        use: fork.use,\n        visit: PathVisitor.visit,\n    };\n}\nexports.default = default_1;\nfunction createFork() {\n    var used = [];\n    var usedResult = [];\n    function use(plugin) {\n        var idx = used.indexOf(plugin);\n        if (idx === -1) {\n            idx = used.length;\n            used.push(plugin);\n            usedResult[idx] = plugin(fork);\n        }\n        return usedResult[idx];\n    }\n    var fork = { use: use };\n    return fork;\n}\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = (0, tslib_1.__importDefault)(require(\"./types\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var Type = types.Type;\n    var builtin = types.builtInTypes;\n    var isNumber = builtin.number;\n    // An example of constructing a new type with arbitrary constraints from\n    // an existing type.\n    function geq(than) {\n        return Type.from(function (value) { return isNumber.check(value) && value >= than; }, isNumber + \" >= \" + than);\n    }\n    ;\n    // Default value-returning functions that may optionally be passed as a\n    // third argument to Def.prototype.field.\n    var defaults = {\n        // Functions were used because (among other reasons) that's the most\n        // elegant way to allow for the emptyArray one always to give a new\n        // array instance.\n        \"null\": function () { return null; },\n        \"emptyArray\": function () { return []; },\n        \"false\": function () { return false; },\n        \"true\": function () { return true; },\n        \"undefined\": function () { },\n        \"use strict\": function () { return \"use strict\"; }\n    };\n    var naiveIsPrimitive = Type.or(builtin.string, builtin.number, builtin.boolean, builtin.null, builtin.undefined);\n    var isPrimitive = Type.from(function (value) {\n        if (value === null)\n            return true;\n        var type = typeof value;\n        if (type === \"object\" ||\n            type === \"function\") {\n            return false;\n        }\n        return true;\n    }, naiveIsPrimitive.toString());\n    return {\n        geq: geq,\n        defaults: defaults,\n        isPrimitive: isPrimitive,\n    };\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction default_1() {\n    return {\n        BinaryOperators: [\n            \"==\", \"!=\", \"===\", \"!==\",\n            \"<\", \"<=\", \">\", \">=\",\n            \"<<\", \">>\", \">>>\",\n            \"+\", \"-\", \"*\", \"/\", \"%\",\n            \"&\",\n            \"|\", \"^\", \"in\",\n            \"instanceof\",\n        ],\n        AssignmentOperators: [\n            \"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\",\n            \"<<=\", \">>=\", \">>>=\",\n            \"|=\", \"^=\", \"&=\",\n        ],\n        LogicalOperators: [\n            \"||\", \"&&\",\n        ],\n    };\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = (0, tslib_1.__importDefault)(require(\"./core\"));\nfunction default_1(fork) {\n    var result = fork.use(core_1.default);\n    // Exponentiation operators. Must run before BinaryOperators or\n    // AssignmentOperators are used (hence before fork.use(es6Def)).\n    // https://github.com/tc39/proposal-exponentiation-operator\n    if (result.BinaryOperators.indexOf(\"**\") < 0) {\n        result.BinaryOperators.push(\"**\");\n    }\n    if (result.AssignmentOperators.indexOf(\"**=\") < 0) {\n        result.AssignmentOperators.push(\"**=\");\n    }\n    return result;\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2016_1 = (0, tslib_1.__importDefault)(require(\"./es2016\"));\nfunction default_1(fork) {\n    var result = fork.use(es2016_1.default);\n    // Nullish coalescing. Must run before LogicalOperators is used.\n    // https://github.com/tc39/proposal-nullish-coalescing\n    if (result.LogicalOperators.indexOf(\"??\") < 0) {\n        result.LogicalOperators.push(\"??\");\n    }\n    return result;\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2020_1 = (0, tslib_1.__importDefault)(require(\"./es2020\"));\nfunction default_1(fork) {\n    var result = fork.use(es2020_1.default);\n    // Logical assignment operators. Must run before AssignmentOperators is used.\n    // https://github.com/tc39/proposal-logical-assignment\n    result.LogicalOperators.forEach(function (op) {\n        var assignOp = op + \"=\";\n        if (result.AssignmentOperators.indexOf(assignOp) < 0) {\n            result.AssignmentOperators.push(assignOp);\n        }\n    });\n    return result;\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = (0, tslib_1.__importDefault)(require(\"./operators/core\"));\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var Type = types.Type;\n    var def = Type.def;\n    var or = Type.or;\n    var shared = fork.use(shared_1.default);\n    var defaults = shared.defaults;\n    var geq = shared.geq;\n    var _a = fork.use(core_1.default), BinaryOperators = _a.BinaryOperators, AssignmentOperators = _a.AssignmentOperators, LogicalOperators = _a.LogicalOperators;\n    // Abstract supertype of all syntactic entities that are allowed to have a\n    // .loc field.\n    def(\"Printable\")\n        .field(\"loc\", or(def(\"SourceLocation\"), null), defaults[\"null\"], true);\n    def(\"Node\")\n        .bases(\"Printable\")\n        .field(\"type\", String)\n        .field(\"comments\", or([def(\"Comment\")], null), defaults[\"null\"], true);\n    def(\"SourceLocation\")\n        .field(\"start\", def(\"Position\"))\n        .field(\"end\", def(\"Position\"))\n        .field(\"source\", or(String, null), defaults[\"null\"]);\n    def(\"Position\")\n        .field(\"line\", geq(1))\n        .field(\"column\", geq(0));\n    def(\"File\")\n        .bases(\"Node\")\n        .build(\"program\", \"name\")\n        .field(\"program\", def(\"Program\"))\n        .field(\"name\", or(String, null), defaults[\"null\"]);\n    def(\"Program\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    def(\"Function\")\n        .bases(\"Node\")\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"params\", [def(\"Pattern\")])\n        .field(\"body\", def(\"BlockStatement\"))\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"async\", Boolean, defaults[\"false\"]);\n    def(\"Statement\").bases(\"Node\");\n    // The empty .build() here means that an EmptyStatement can be constructed\n    // (i.e. it's not abstract) but that it needs no arguments.\n    def(\"EmptyStatement\").bases(\"Statement\").build();\n    def(\"BlockStatement\")\n        .bases(\"Statement\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    // TODO Figure out how to silently coerce Expressions to\n    // ExpressionStatements where a Statement was expected.\n    def(\"ExpressionStatement\")\n        .bases(\"Statement\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"IfStatement\")\n        .bases(\"Statement\")\n        .build(\"test\", \"consequent\", \"alternate\")\n        .field(\"test\", def(\"Expression\"))\n        .field(\"consequent\", def(\"Statement\"))\n        .field(\"alternate\", or(def(\"Statement\"), null), defaults[\"null\"]);\n    def(\"LabeledStatement\")\n        .bases(\"Statement\")\n        .build(\"label\", \"body\")\n        .field(\"label\", def(\"Identifier\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"BreakStatement\")\n        .bases(\"Statement\")\n        .build(\"label\")\n        .field(\"label\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n    def(\"ContinueStatement\")\n        .bases(\"Statement\")\n        .build(\"label\")\n        .field(\"label\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n    def(\"WithStatement\")\n        .bases(\"Statement\")\n        .build(\"object\", \"body\")\n        .field(\"object\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"SwitchStatement\")\n        .bases(\"Statement\")\n        .build(\"discriminant\", \"cases\", \"lexical\")\n        .field(\"discriminant\", def(\"Expression\"))\n        .field(\"cases\", [def(\"SwitchCase\")])\n        .field(\"lexical\", Boolean, defaults[\"false\"]);\n    def(\"ReturnStatement\")\n        .bases(\"Statement\")\n        .build(\"argument\")\n        .field(\"argument\", or(def(\"Expression\"), null));\n    def(\"ThrowStatement\")\n        .bases(\"Statement\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"TryStatement\")\n        .bases(\"Statement\")\n        .build(\"block\", \"handler\", \"finalizer\")\n        .field(\"block\", def(\"BlockStatement\"))\n        .field(\"handler\", or(def(\"CatchClause\"), null), function () {\n        return this.handlers && this.handlers[0] || null;\n    })\n        .field(\"handlers\", [def(\"CatchClause\")], function () {\n        return this.handler ? [this.handler] : [];\n    }, true) // Indicates this field is hidden from eachField iteration.\n        .field(\"guardedHandlers\", [def(\"CatchClause\")], defaults.emptyArray)\n        .field(\"finalizer\", or(def(\"BlockStatement\"), null), defaults[\"null\"]);\n    def(\"CatchClause\")\n        .bases(\"Node\")\n        .build(\"param\", \"guard\", \"body\")\n        .field(\"param\", def(\"Pattern\"))\n        .field(\"guard\", or(def(\"Expression\"), null), defaults[\"null\"])\n        .field(\"body\", def(\"BlockStatement\"));\n    def(\"WhileStatement\")\n        .bases(\"Statement\")\n        .build(\"test\", \"body\")\n        .field(\"test\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"DoWhileStatement\")\n        .bases(\"Statement\")\n        .build(\"body\", \"test\")\n        .field(\"body\", def(\"Statement\"))\n        .field(\"test\", def(\"Expression\"));\n    def(\"ForStatement\")\n        .bases(\"Statement\")\n        .build(\"init\", \"test\", \"update\", \"body\")\n        .field(\"init\", or(def(\"VariableDeclaration\"), def(\"Expression\"), null))\n        .field(\"test\", or(def(\"Expression\"), null))\n        .field(\"update\", or(def(\"Expression\"), null))\n        .field(\"body\", def(\"Statement\"));\n    def(\"ForInStatement\")\n        .bases(\"Statement\")\n        .build(\"left\", \"right\", \"body\")\n        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Expression\")))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"DebuggerStatement\").bases(\"Statement\").build();\n    def(\"Declaration\").bases(\"Statement\");\n    def(\"FunctionDeclaration\")\n        .bases(\"Function\", \"Declaration\")\n        .build(\"id\", \"params\", \"body\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"FunctionExpression\")\n        .bases(\"Function\", \"Expression\")\n        .build(\"id\", \"params\", \"body\");\n    def(\"VariableDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"kind\", \"declarations\")\n        .field(\"kind\", or(\"var\", \"let\", \"const\"))\n        .field(\"declarations\", [def(\"VariableDeclarator\")]);\n    def(\"VariableDeclarator\")\n        .bases(\"Node\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Pattern\"))\n        .field(\"init\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"Expression\").bases(\"Node\");\n    def(\"ThisExpression\").bases(\"Expression\").build();\n    def(\"ArrayExpression\")\n        .bases(\"Expression\")\n        .build(\"elements\")\n        .field(\"elements\", [or(def(\"Expression\"), null)]);\n    def(\"ObjectExpression\")\n        .bases(\"Expression\")\n        .build(\"properties\")\n        .field(\"properties\", [def(\"Property\")]);\n    // TODO Not in the Mozilla Parser API, but used by Esprima.\n    def(\"Property\")\n        .bases(\"Node\") // Want to be able to visit Property Nodes.\n        .build(\"kind\", \"key\", \"value\")\n        .field(\"kind\", or(\"init\", \"get\", \"set\"))\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n        .field(\"value\", def(\"Expression\"));\n    def(\"SequenceExpression\")\n        .bases(\"Expression\")\n        .build(\"expressions\")\n        .field(\"expressions\", [def(\"Expression\")]);\n    var UnaryOperator = or(\"-\", \"+\", \"!\", \"~\", \"typeof\", \"void\", \"delete\");\n    def(\"UnaryExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"argument\", \"prefix\")\n        .field(\"operator\", UnaryOperator)\n        .field(\"argument\", def(\"Expression\"))\n        // Esprima doesn't bother with this field, presumably because it's\n        // always true for unary operators.\n        .field(\"prefix\", Boolean, defaults[\"true\"]);\n    var BinaryOperator = or.apply(void 0, BinaryOperators);\n    def(\"BinaryExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"left\", \"right\")\n        .field(\"operator\", BinaryOperator)\n        .field(\"left\", def(\"Expression\"))\n        .field(\"right\", def(\"Expression\"));\n    var AssignmentOperator = or.apply(void 0, AssignmentOperators);\n    def(\"AssignmentExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"left\", \"right\")\n        .field(\"operator\", AssignmentOperator)\n        .field(\"left\", or(def(\"Pattern\"), def(\"MemberExpression\")))\n        .field(\"right\", def(\"Expression\"));\n    var UpdateOperator = or(\"++\", \"--\");\n    def(\"UpdateExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"argument\", \"prefix\")\n        .field(\"operator\", UpdateOperator)\n        .field(\"argument\", def(\"Expression\"))\n        .field(\"prefix\", Boolean);\n    var LogicalOperator = or.apply(void 0, LogicalOperators);\n    def(\"LogicalExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"left\", \"right\")\n        .field(\"operator\", LogicalOperator)\n        .field(\"left\", def(\"Expression\"))\n        .field(\"right\", def(\"Expression\"));\n    def(\"ConditionalExpression\")\n        .bases(\"Expression\")\n        .build(\"test\", \"consequent\", \"alternate\")\n        .field(\"test\", def(\"Expression\"))\n        .field(\"consequent\", def(\"Expression\"))\n        .field(\"alternate\", def(\"Expression\"));\n    def(\"NewExpression\")\n        .bases(\"Expression\")\n        .build(\"callee\", \"arguments\")\n        .field(\"callee\", def(\"Expression\"))\n        // The Mozilla Parser API gives this type as [or(def(\"Expression\"),\n        // null)], but null values don't really make sense at the call site.\n        // TODO Report this nonsense.\n        .field(\"arguments\", [def(\"Expression\")]);\n    def(\"CallExpression\")\n        .bases(\"Expression\")\n        .build(\"callee\", \"arguments\")\n        .field(\"callee\", def(\"Expression\"))\n        // See comment for NewExpression above.\n        .field(\"arguments\", [def(\"Expression\")]);\n    def(\"MemberExpression\")\n        .bases(\"Expression\")\n        .build(\"object\", \"property\", \"computed\")\n        .field(\"object\", def(\"Expression\"))\n        .field(\"property\", or(def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean, function () {\n        var type = this.property.type;\n        if (type === 'Literal' ||\n            type === 'MemberExpression' ||\n            type === 'BinaryExpression') {\n            return true;\n        }\n        return false;\n    });\n    def(\"Pattern\").bases(\"Node\");\n    def(\"SwitchCase\")\n        .bases(\"Node\")\n        .build(\"test\", \"consequent\")\n        .field(\"test\", or(def(\"Expression\"), null))\n        .field(\"consequent\", [def(\"Statement\")]);\n    def(\"Identifier\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"name\")\n        .field(\"name\", String)\n        .field(\"optional\", Boolean, defaults[\"false\"]);\n    def(\"Literal\")\n        .bases(\"Expression\")\n        .build(\"value\")\n        .field(\"value\", or(String, Boolean, null, Number, RegExp, BigInt));\n    // Abstract (non-buildable) comment supertype. Not a Node.\n    def(\"Comment\")\n        .bases(\"Printable\")\n        .field(\"value\", String)\n        // A .leading comment comes before the node, whereas a .trailing\n        // comment comes after it. These two fields should not both be true,\n        // but they might both be false when the comment falls inside a node\n        // and the node has no children for the comment to lead or trail,\n        // e.g. { /*dangling*/ }.\n        .field(\"leading\", Boolean, defaults[\"true\"])\n        .field(\"trailing\", Boolean, defaults[\"false\"]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = (0, tslib_1.__importDefault)(require(\"./core\"));\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(core_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"Function\")\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"expression\", Boolean, defaults[\"false\"])\n        .field(\"defaults\", [or(def(\"Expression\"), null)], defaults.emptyArray)\n        // Legacy\n        .field(\"rest\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n    // The ESTree way of representing a ...rest parameter.\n    def(\"RestElement\")\n        .bases(\"Pattern\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Pattern\"))\n        .field(\"typeAnnotation\", // for Babylon. Flow parser puts it on the identifier\n    or(def(\"TypeAnnotation\"), def(\"TSTypeAnnotation\"), null), defaults[\"null\"]);\n    def(\"SpreadElementPattern\")\n        .bases(\"Pattern\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Pattern\"));\n    def(\"FunctionDeclaration\")\n        .build(\"id\", \"params\", \"body\", \"generator\", \"expression\")\n        // May be `null` in the context of `export default function () {}`\n        .field(\"id\", or(def(\"Identifier\"), null));\n    def(\"FunctionExpression\")\n        .build(\"id\", \"params\", \"body\", \"generator\", \"expression\");\n    def(\"ArrowFunctionExpression\")\n        .bases(\"Function\", \"Expression\")\n        .build(\"params\", \"body\", \"expression\")\n        // The forced null value here is compatible with the overridden\n        // definition of the \"id\" field in the Function interface.\n        .field(\"id\", null, defaults[\"null\"])\n        // Arrow function bodies are allowed to be expressions.\n        .field(\"body\", or(def(\"BlockStatement\"), def(\"Expression\")))\n        // The current spec forbids arrow generators, so I have taken the\n        // liberty of enforcing that. TODO Report this.\n        .field(\"generator\", false, defaults[\"false\"]);\n    def(\"ForOfStatement\")\n        .bases(\"Statement\")\n        .build(\"left\", \"right\", \"body\")\n        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Pattern\")))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"YieldExpression\")\n        .bases(\"Expression\")\n        .build(\"argument\", \"delegate\")\n        .field(\"argument\", or(def(\"Expression\"), null))\n        .field(\"delegate\", Boolean, defaults[\"false\"]);\n    def(\"GeneratorExpression\")\n        .bases(\"Expression\")\n        .build(\"body\", \"blocks\", \"filter\")\n        .field(\"body\", def(\"Expression\"))\n        .field(\"blocks\", [def(\"ComprehensionBlock\")])\n        .field(\"filter\", or(def(\"Expression\"), null));\n    def(\"ComprehensionExpression\")\n        .bases(\"Expression\")\n        .build(\"body\", \"blocks\", \"filter\")\n        .field(\"body\", def(\"Expression\"))\n        .field(\"blocks\", [def(\"ComprehensionBlock\")])\n        .field(\"filter\", or(def(\"Expression\"), null));\n    def(\"ComprehensionBlock\")\n        .bases(\"Node\")\n        .build(\"left\", \"right\", \"each\")\n        .field(\"left\", def(\"Pattern\"))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"each\", Boolean);\n    def(\"Property\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\")))\n        .field(\"method\", Boolean, defaults[\"false\"])\n        .field(\"shorthand\", Boolean, defaults[\"false\"])\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    def(\"ObjectProperty\")\n        .field(\"shorthand\", Boolean, defaults[\"false\"]);\n    def(\"PropertyPattern\")\n        .bases(\"Pattern\")\n        .build(\"key\", \"pattern\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"pattern\", def(\"Pattern\"))\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    def(\"ObjectPattern\")\n        .bases(\"Pattern\")\n        .build(\"properties\")\n        .field(\"properties\", [or(def(\"PropertyPattern\"), def(\"Property\"))]);\n    def(\"ArrayPattern\")\n        .bases(\"Pattern\")\n        .build(\"elements\")\n        .field(\"elements\", [or(def(\"Pattern\"), null)]);\n    def(\"SpreadElement\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"ArrayExpression\")\n        .field(\"elements\", [or(def(\"Expression\"), def(\"SpreadElement\"), def(\"RestElement\"), null)]);\n    def(\"NewExpression\")\n        .field(\"arguments\", [or(def(\"Expression\"), def(\"SpreadElement\"))]);\n    def(\"CallExpression\")\n        .field(\"arguments\", [or(def(\"Expression\"), def(\"SpreadElement\"))]);\n    // Note: this node type is *not* an AssignmentExpression with a Pattern on\n    // the left-hand side! The existing AssignmentExpression type already\n    // supports destructuring assignments. AssignmentPattern nodes may appear\n    // wherever a Pattern is allowed, and the right-hand side represents a\n    // default value to be destructured against the left-hand side, if no\n    // value is otherwise provided. For example: default parameter values.\n    def(\"AssignmentPattern\")\n        .bases(\"Pattern\")\n        .build(\"left\", \"right\")\n        .field(\"left\", def(\"Pattern\"))\n        .field(\"right\", def(\"Expression\"));\n    def(\"MethodDefinition\")\n        .bases(\"Declaration\")\n        .build(\"kind\", \"key\", \"value\", \"static\")\n        .field(\"kind\", or(\"constructor\", \"method\", \"get\", \"set\"))\n        .field(\"key\", def(\"Expression\"))\n        .field(\"value\", def(\"Function\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"static\", Boolean, defaults[\"false\"]);\n    var ClassBodyElement = or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"));\n    def(\"ClassProperty\")\n        .bases(\"Declaration\")\n        .build(\"key\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    def(\"ClassPropertyDefinition\") // static property\n        .bases(\"Declaration\")\n        .build(\"definition\")\n        // Yes, Virginia, circular definitions are permitted.\n        .field(\"definition\", ClassBodyElement);\n    def(\"ClassBody\")\n        .bases(\"Declaration\")\n        .build(\"body\")\n        .field(\"body\", [ClassBodyElement]);\n    def(\"ClassDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\", \"superClass\")\n        .field(\"id\", or(def(\"Identifier\"), null))\n        .field(\"body\", def(\"ClassBody\"))\n        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"ClassExpression\")\n        .bases(\"Expression\")\n        .build(\"id\", \"body\", \"superClass\")\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"body\", def(\"ClassBody\"))\n        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"Super\")\n        .bases(\"Expression\")\n        .build();\n    // Specifier and ModuleSpecifier are abstract non-standard types\n    // introduced for definitional convenience.\n    def(\"Specifier\").bases(\"Node\");\n    // This supertype is shared/abused by both def/babel.js and\n    // def/esprima.js. In the future, it will be possible to load only one set\n    // of definitions appropriate for a given parser, but until then we must\n    // rely on default functions to reconcile the conflicting AST formats.\n    def(\"ModuleSpecifier\")\n        .bases(\"Specifier\")\n        // This local field is used by Babel/Acorn. It should not technically\n        // be optional in the Babel/Acorn AST format, but it must be optional\n        // in the Esprima AST format.\n        .field(\"local\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        // The id and name fields are used by Esprima. The id field should not\n        // technically be optional in the Esprima AST format, but it must be\n        // optional in the Babel/Acorn AST format.\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"name\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n    // import {<id [as name]>} from ...;\n    def(\"ImportSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"imported\", \"local\")\n        .field(\"imported\", def(\"Identifier\"));\n    // import <id> from ...;\n    def(\"ImportDefaultSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"local\");\n    // import <* as id> from ...;\n    def(\"ImportNamespaceSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"local\");\n    def(\"ImportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"specifiers\", \"source\", \"importKind\")\n        .field(\"specifiers\", [or(def(\"ImportSpecifier\"), def(\"ImportNamespaceSpecifier\"), def(\"ImportDefaultSpecifier\"))], defaults.emptyArray)\n        .field(\"source\", def(\"Literal\"))\n        .field(\"importKind\", or(\"value\", \"type\"), function () {\n        return \"value\";\n    });\n    def(\"ExportNamedDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"declaration\", \"specifiers\", \"source\")\n        .field(\"declaration\", or(def(\"Declaration\"), null))\n        .field(\"specifiers\", [def(\"ExportSpecifier\")], defaults.emptyArray)\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"ExportSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"local\", \"exported\")\n        .field(\"exported\", def(\"Identifier\"));\n    def(\"ExportDefaultDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"declaration\")\n        .field(\"declaration\", or(def(\"Declaration\"), def(\"Expression\")));\n    def(\"ExportAllDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"source\")\n        .field(\"source\", def(\"Literal\"));\n    def(\"TaggedTemplateExpression\")\n        .bases(\"Expression\")\n        .build(\"tag\", \"quasi\")\n        .field(\"tag\", def(\"Expression\"))\n        .field(\"quasi\", def(\"TemplateLiteral\"));\n    def(\"TemplateLiteral\")\n        .bases(\"Expression\")\n        .build(\"quasis\", \"expressions\")\n        .field(\"quasis\", [def(\"TemplateElement\")])\n        .field(\"expressions\", [def(\"Expression\")]);\n    def(\"TemplateElement\")\n        .bases(\"Node\")\n        .build(\"value\", \"tail\")\n        .field(\"value\", { \"cooked\": String, \"raw\": String })\n        .field(\"tail\", Boolean);\n    def(\"MetaProperty\")\n        .bases(\"Expression\")\n        .build(\"meta\", \"property\")\n        .field(\"meta\", def(\"Identifier\"))\n        .field(\"property\", def(\"Identifier\"));\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2016_1 = (0, tslib_1.__importDefault)(require(\"./operators/es2016\"));\nvar es6_1 = (0, tslib_1.__importDefault)(require(\"./es6\"));\nfunction default_1(fork) {\n    // The es2016OpsDef plugin comes before es6Def so BinaryOperators and\n    // AssignmentOperators will be appropriately augmented before they are first\n    // used in the core definitions for this fork.\n    fork.use(es2016_1.default);\n    fork.use(es6_1.default);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2016_1 = (0, tslib_1.__importDefault)(require(\"./es2016\"));\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es2016_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"Function\")\n        .field(\"async\", Boolean, defaults[\"false\"]);\n    def(\"AwaitExpression\")\n        .bases(\"Expression\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2017_1 = (0, tslib_1.__importDefault)(require(\"./es2017\"));\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es2017_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"ForOfStatement\")\n        .field(\"await\", Boolean, defaults[\"false\"]);\n    // Legacy\n    def(\"SpreadProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"ObjectExpression\")\n        .field(\"properties\", [or(def(\"Property\"), def(\"SpreadProperty\"), // Legacy\n        def(\"SpreadElement\"))]);\n    def(\"TemplateElement\")\n        .field(\"value\", { \"cooked\": or(String, null), \"raw\": String });\n    // Legacy\n    def(\"SpreadPropertyPattern\")\n        .bases(\"Pattern\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Pattern\"));\n    def(\"ObjectPattern\")\n        .field(\"properties\", [or(def(\"PropertyPattern\"), def(\"Property\"), def(\"RestElement\"), def(\"SpreadPropertyPattern\"))]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2018_1 = (0, tslib_1.__importDefault)(require(\"./es2018\"));\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es2018_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"CatchClause\")\n        .field(\"param\", or(def(\"Pattern\"), null), defaults[\"null\"]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2020_1 = (0, tslib_1.__importDefault)(require(\"./operators/es2020\"));\nvar es2019_1 = (0, tslib_1.__importDefault)(require(\"./es2019\"));\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    // The es2020OpsDef plugin comes before es2019Def so LogicalOperators will be\n    // appropriately augmented before first used.\n    fork.use(es2020_1.default);\n    fork.use(es2019_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var shared = fork.use(shared_1.default);\n    var defaults = shared.defaults;\n    def(\"ImportExpression\")\n        .bases(\"Expression\")\n        .build(\"source\")\n        .field(\"source\", def(\"Expression\"));\n    def(\"ExportAllDeclaration\")\n        .build(\"source\", \"exported\")\n        .field(\"source\", def(\"Literal\"))\n        .field(\"exported\", or(def(\"Identifier\"), null));\n    // Optional chaining\n    def(\"ChainElement\")\n        .bases(\"Node\")\n        .field(\"optional\", Boolean, defaults[\"false\"]);\n    def(\"CallExpression\")\n        .bases(\"Expression\", \"ChainElement\");\n    def(\"MemberExpression\")\n        .bases(\"Expression\", \"ChainElement\");\n    def(\"ChainExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"ChainElement\"));\n    def(\"OptionalCallExpression\")\n        .bases(\"CallExpression\")\n        .build(\"callee\", \"arguments\", \"optional\")\n        .field(\"optional\", Boolean, defaults[\"true\"]);\n    // Deprecated optional chaining type, doesn't work with babelParser@7.11.0 or newer\n    def(\"OptionalMemberExpression\")\n        .bases(\"MemberExpression\")\n        .build(\"object\", \"property\", \"computed\", \"optional\")\n        .field(\"optional\", Boolean, defaults[\"true\"]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2021_1 = (0, tslib_1.__importDefault)(require(\"./operators/es2021\"));\nvar es2020_1 = (0, tslib_1.__importDefault)(require(\"./es2020\"));\nfunction default_1(fork) {\n    // The es2021OpsDef plugin comes before es2020Def so AssignmentOperators will\n    // be appropriately augmented before first used.\n    fork.use(es2021_1.default);\n    fork.use(es2020_1.default);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2021_1 = (0, tslib_1.__importDefault)(require(\"./es2021\"));\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nfunction default_1(fork) {\n    fork.use(es2021_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    def(\"StaticBlock\")\n        .bases(\"Declaration\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nvar es2022_1 = (0, tslib_1.__importDefault)(require(\"./es2022\"));\nfunction default_1(fork) {\n    fork.use(es2022_1.default);\n    var types = fork.use(types_1.default);\n    var Type = types.Type;\n    var def = types.Type.def;\n    var or = Type.or;\n    var shared = fork.use(shared_1.default);\n    var defaults = shared.defaults;\n    def(\"AwaitExpression\")\n        .build(\"argument\", \"all\")\n        .field(\"argument\", or(def(\"Expression\"), null))\n        .field(\"all\", Boolean, defaults[\"false\"]);\n    // Decorators\n    def(\"Decorator\")\n        .bases(\"Node\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"Property\")\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"MethodDefinition\")\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    // Private names\n    def(\"PrivateName\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"ClassPrivateProperty\")\n        .bases(\"ClassProperty\")\n        .build(\"key\", \"value\")\n        .field(\"key\", def(\"PrivateName\"))\n        .field(\"value\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    // https://github.com/tc39/proposal-import-assertions\n    def(\"ImportAttribute\")\n        .bases(\"Node\")\n        .build(\"key\", \"value\")\n        .field(\"key\", or(def(\"Identifier\"), def(\"Literal\")))\n        .field(\"value\", def(\"Expression\"));\n    [\"ImportDeclaration\",\n        \"ExportAllDeclaration\",\n        \"ExportNamedDeclaration\",\n    ].forEach(function (decl) {\n        def(decl).field(\"assertions\", [def(\"ImportAttribute\")], defaults.emptyArray);\n    });\n    // https://github.com/tc39/proposal-record-tuple\n    // https://github.com/babel/babel/pull/10865\n    def(\"RecordExpression\")\n        .bases(\"Expression\")\n        .build(\"properties\")\n        .field(\"properties\", [or(def(\"ObjectProperty\"), def(\"ObjectMethod\"), def(\"SpreadElement\"))]);\n    def(\"TupleExpression\")\n        .bases(\"Expression\")\n        .build(\"elements\")\n        .field(\"elements\", [or(def(\"Expression\"), def(\"SpreadElement\"), null)]);\n    // https://github.com/tc39/proposal-js-module-blocks\n    // https://github.com/babel/babel/pull/12469\n    def(\"ModuleExpression\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", def(\"Program\"));\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es_proposals_1 = (0, tslib_1.__importDefault)(require(\"./es-proposals\"));\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es_proposals_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"JSXAttribute\")\n        .bases(\"Node\")\n        .build(\"name\", \"value\")\n        .field(\"name\", or(def(\"JSXIdentifier\"), def(\"JSXNamespacedName\")))\n        .field(\"value\", or(def(\"Literal\"), // attr=\"value\"\n    def(\"JSXExpressionContainer\"), // attr={value}\n    def(\"JSXElement\"), // attr=<div />\n    def(\"JSXFragment\"), // attr=<></>\n    null // attr= or just attr\n    ), defaults[\"null\"]);\n    def(\"JSXIdentifier\")\n        .bases(\"Identifier\")\n        .build(\"name\")\n        .field(\"name\", String);\n    def(\"JSXNamespacedName\")\n        .bases(\"Node\")\n        .build(\"namespace\", \"name\")\n        .field(\"namespace\", def(\"JSXIdentifier\"))\n        .field(\"name\", def(\"JSXIdentifier\"));\n    def(\"JSXMemberExpression\")\n        .bases(\"MemberExpression\")\n        .build(\"object\", \"property\")\n        .field(\"object\", or(def(\"JSXIdentifier\"), def(\"JSXMemberExpression\")))\n        .field(\"property\", def(\"JSXIdentifier\"))\n        .field(\"computed\", Boolean, defaults.false);\n    var JSXElementName = or(def(\"JSXIdentifier\"), def(\"JSXNamespacedName\"), def(\"JSXMemberExpression\"));\n    def(\"JSXSpreadAttribute\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    var JSXAttributes = [or(def(\"JSXAttribute\"), def(\"JSXSpreadAttribute\"))];\n    def(\"JSXExpressionContainer\")\n        .bases(\"Expression\")\n        .build(\"expression\")\n        .field(\"expression\", or(def(\"Expression\"), def(\"JSXEmptyExpression\")));\n    var JSXChildren = [or(def(\"JSXText\"), def(\"JSXExpressionContainer\"), def(\"JSXSpreadChild\"), def(\"JSXElement\"), def(\"JSXFragment\"), def(\"Literal\") // Legacy: Esprima should return JSXText instead.\n        )];\n    def(\"JSXElement\")\n        .bases(\"Expression\")\n        .build(\"openingElement\", \"closingElement\", \"children\")\n        .field(\"openingElement\", def(\"JSXOpeningElement\"))\n        .field(\"closingElement\", or(def(\"JSXClosingElement\"), null), defaults[\"null\"])\n        .field(\"children\", JSXChildren, defaults.emptyArray)\n        .field(\"name\", JSXElementName, function () {\n        // Little-known fact: the `this` object inside a default function\n        // is none other than the partially-built object itself, and any\n        // fields initialized directly from builder function arguments\n        // (like openingElement, closingElement, and children) are\n        // guaranteed to be available.\n        return this.openingElement.name;\n    }, true) // hidden from traversal\n        .field(\"selfClosing\", Boolean, function () {\n        return this.openingElement.selfClosing;\n    }, true) // hidden from traversal\n        .field(\"attributes\", JSXAttributes, function () {\n        return this.openingElement.attributes;\n    }, true); // hidden from traversal\n    def(\"JSXOpeningElement\")\n        .bases(\"Node\")\n        .build(\"name\", \"attributes\", \"selfClosing\")\n        .field(\"name\", JSXElementName)\n        .field(\"attributes\", JSXAttributes, defaults.emptyArray)\n        .field(\"selfClosing\", Boolean, defaults[\"false\"]);\n    def(\"JSXClosingElement\")\n        .bases(\"Node\")\n        .build(\"name\")\n        .field(\"name\", JSXElementName);\n    def(\"JSXFragment\")\n        .bases(\"Expression\")\n        .build(\"openingFragment\", \"closingFragment\", \"children\")\n        .field(\"openingFragment\", def(\"JSXOpeningFragment\"))\n        .field(\"closingFragment\", def(\"JSXClosingFragment\"))\n        .field(\"children\", JSXChildren, defaults.emptyArray);\n    def(\"JSXOpeningFragment\")\n        .bases(\"Node\")\n        .build();\n    def(\"JSXClosingFragment\")\n        .bases(\"Node\")\n        .build();\n    def(\"JSXText\")\n        .bases(\"Literal\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", String)\n        .field(\"raw\", String, function () {\n        return this.value;\n    });\n    def(\"JSXEmptyExpression\")\n        .bases(\"Node\")\n        .build();\n    def(\"JSXSpreadChild\")\n        .bases(\"Node\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\n/**\n * Type annotation defs shared between Flow and TypeScript.\n * These defs could not be defined in ./flow.ts or ./typescript.ts directly\n * because they use the same name.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    var TypeAnnotation = or(def(\"TypeAnnotation\"), def(\"TSTypeAnnotation\"), null);\n    var TypeParamDecl = or(def(\"TypeParameterDeclaration\"), def(\"TSTypeParameterDeclaration\"), null);\n    def(\"Identifier\")\n        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n    def(\"ObjectPattern\")\n        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n    def(\"Function\")\n        .field(\"returnType\", TypeAnnotation, defaults[\"null\"])\n        .field(\"typeParameters\", TypeParamDecl, defaults[\"null\"]);\n    def(\"ClassProperty\")\n        .build(\"key\", \"value\", \"typeAnnotation\", \"static\")\n        .field(\"value\", or(def(\"Expression\"), null))\n        .field(\"static\", Boolean, defaults[\"false\"])\n        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n    [\"ClassDeclaration\",\n        \"ClassExpression\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .field(\"typeParameters\", TypeParamDecl, defaults[\"null\"])\n            .field(\"superTypeParameters\", or(def(\"TypeParameterInstantiation\"), def(\"TSTypeParameterInstantiation\"), null), defaults[\"null\"])\n            .field(\"implements\", or([def(\"ClassImplements\")], [def(\"TSExpressionWithTypeArguments\")]), defaults.emptyArray);\n    });\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es_proposals_1 = (0, tslib_1.__importDefault)(require(\"./es-proposals\"));\nvar type_annotations_1 = (0, tslib_1.__importDefault)(require(\"./type-annotations\"));\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es_proposals_1.default);\n    fork.use(type_annotations_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    // Base types\n    def(\"Flow\").bases(\"Node\");\n    def(\"FlowType\").bases(\"Flow\");\n    // Type annotations\n    def(\"AnyTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"EmptyTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"MixedTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"VoidTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"SymbolTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NumberTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"BigIntTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NumberLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Number)\n        .field(\"raw\", String);\n    // Babylon 6 differs in AST from Flow\n    // same as NumberLiteralTypeAnnotation\n    def(\"NumericLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Number)\n        .field(\"raw\", String);\n    def(\"BigIntLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", null)\n        .field(\"raw\", String);\n    def(\"StringTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"StringLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", String)\n        .field(\"raw\", String);\n    def(\"BooleanTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"BooleanLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Boolean)\n        .field(\"raw\", String);\n    def(\"TypeAnnotation\")\n        .bases(\"Node\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"FlowType\"));\n    def(\"NullableTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"FlowType\"));\n    def(\"NullLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NullTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ThisTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ExistsTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ExistentialTypeParam\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"FunctionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"params\", \"returnType\", \"rest\", \"typeParameters\")\n        .field(\"params\", [def(\"FunctionTypeParam\")])\n        .field(\"returnType\", def(\"FlowType\"))\n        .field(\"rest\", or(def(\"FunctionTypeParam\"), null))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null));\n    def(\"FunctionTypeParam\")\n        .bases(\"Node\")\n        .build(\"name\", \"typeAnnotation\", \"optional\")\n        .field(\"name\", or(def(\"Identifier\"), null))\n        .field(\"typeAnnotation\", def(\"FlowType\"))\n        .field(\"optional\", Boolean);\n    def(\"ArrayTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"elementType\")\n        .field(\"elementType\", def(\"FlowType\"));\n    def(\"ObjectTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"properties\", \"indexers\", \"callProperties\")\n        .field(\"properties\", [\n        or(def(\"ObjectTypeProperty\"), def(\"ObjectTypeSpreadProperty\"))\n    ])\n        .field(\"indexers\", [def(\"ObjectTypeIndexer\")], defaults.emptyArray)\n        .field(\"callProperties\", [def(\"ObjectTypeCallProperty\")], defaults.emptyArray)\n        .field(\"inexact\", or(Boolean, void 0), defaults[\"undefined\"])\n        .field(\"exact\", Boolean, defaults[\"false\"])\n        .field(\"internalSlots\", [def(\"ObjectTypeInternalSlot\")], defaults.emptyArray);\n    def(\"Variance\")\n        .bases(\"Node\")\n        .build(\"kind\")\n        .field(\"kind\", or(\"plus\", \"minus\"));\n    var LegacyVariance = or(def(\"Variance\"), \"plus\", \"minus\", null);\n    def(\"ObjectTypeProperty\")\n        .bases(\"Node\")\n        .build(\"key\", \"value\", \"optional\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"optional\", Boolean)\n        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n    def(\"ObjectTypeIndexer\")\n        .bases(\"Node\")\n        .build(\"id\", \"key\", \"value\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"key\", def(\"FlowType\"))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"variance\", LegacyVariance, defaults[\"null\"])\n        .field(\"static\", Boolean, defaults[\"false\"]);\n    def(\"ObjectTypeCallProperty\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", def(\"FunctionTypeAnnotation\"))\n        .field(\"static\", Boolean, defaults[\"false\"]);\n    def(\"QualifiedTypeIdentifier\")\n        .bases(\"Node\")\n        .build(\"qualification\", \"id\")\n        .field(\"qualification\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n        .field(\"id\", def(\"Identifier\"));\n    def(\"GenericTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"id\", \"typeParameters\")\n        .field(\"id\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n    def(\"MemberTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"object\", \"property\")\n        .field(\"object\", def(\"Identifier\"))\n        .field(\"property\", or(def(\"MemberTypeAnnotation\"), def(\"GenericTypeAnnotation\")));\n    def(\"IndexedAccessType\")\n        .bases(\"FlowType\")\n        .build(\"objectType\", \"indexType\")\n        .field(\"objectType\", def(\"FlowType\"))\n        .field(\"indexType\", def(\"FlowType\"));\n    def(\"OptionalIndexedAccessType\")\n        .bases(\"FlowType\")\n        .build(\"objectType\", \"indexType\", \"optional\")\n        .field(\"objectType\", def(\"FlowType\"))\n        .field(\"indexType\", def(\"FlowType\"))\n        .field('optional', Boolean);\n    def(\"UnionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"IntersectionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"TypeofTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"FlowType\"));\n    def(\"ObjectTypeSpreadProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"FlowType\"));\n    def(\"ObjectTypeInternalSlot\")\n        .bases(\"Node\")\n        .build(\"id\", \"value\", \"optional\", \"static\", \"method\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"optional\", Boolean)\n        .field(\"static\", Boolean)\n        .field(\"method\", Boolean);\n    def(\"TypeParameterDeclaration\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"TypeParameter\")]);\n    def(\"TypeParameterInstantiation\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"FlowType\")]);\n    def(\"TypeParameter\")\n        .bases(\"FlowType\")\n        .build(\"name\", \"variance\", \"bound\", \"default\")\n        .field(\"name\", String)\n        .field(\"variance\", LegacyVariance, defaults[\"null\"])\n        .field(\"bound\", or(def(\"TypeAnnotation\"), null), defaults[\"null\"])\n        .field(\"default\", or(def(\"FlowType\"), null), defaults[\"null\"]);\n    def(\"ClassProperty\")\n        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n    def(\"ClassImplements\")\n        .bases(\"Node\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"])\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n    def(\"InterfaceTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"body\", \"extends\")\n        .field(\"body\", def(\"ObjectTypeAnnotation\"))\n        .field(\"extends\", or([def(\"InterfaceExtends\")], null), defaults[\"null\"]);\n    def(\"InterfaceDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\", \"extends\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null), defaults[\"null\"])\n        .field(\"body\", def(\"ObjectTypeAnnotation\"))\n        .field(\"extends\", [def(\"InterfaceExtends\")]);\n    def(\"DeclareInterface\")\n        .bases(\"InterfaceDeclaration\")\n        .build(\"id\", \"body\", \"extends\");\n    def(\"InterfaceExtends\")\n        .bases(\"Node\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n    def(\"TypeAlias\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"typeParameters\", \"right\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n        .field(\"right\", def(\"FlowType\"));\n    def(\"DeclareTypeAlias\")\n        .bases(\"TypeAlias\")\n        .build(\"id\", \"typeParameters\", \"right\");\n    def(\"OpaqueType\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"typeParameters\", \"impltype\", \"supertype\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n        .field(\"impltype\", def(\"FlowType\"))\n        .field(\"supertype\", or(def(\"FlowType\"), null));\n    def(\"DeclareOpaqueType\")\n        .bases(\"OpaqueType\")\n        .build(\"id\", \"typeParameters\", \"supertype\")\n        .field(\"impltype\", or(def(\"FlowType\"), null));\n    def(\"TypeCastExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\", \"typeAnnotation\")\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n    def(\"TupleTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"DeclareVariable\")\n        .bases(\"Statement\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"DeclareFunction\")\n        .bases(\"Statement\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"predicate\", or(def(\"FlowPredicate\"), null), defaults[\"null\"]);\n    def(\"DeclareClass\")\n        .bases(\"InterfaceDeclaration\")\n        .build(\"id\");\n    def(\"DeclareModule\")\n        .bases(\"Statement\")\n        .build(\"id\", \"body\")\n        .field(\"id\", or(def(\"Identifier\"), def(\"Literal\")))\n        .field(\"body\", def(\"BlockStatement\"));\n    def(\"DeclareModuleExports\")\n        .bases(\"Statement\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n    def(\"DeclareExportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n        .field(\"default\", Boolean)\n        .field(\"declaration\", or(def(\"DeclareVariable\"), def(\"DeclareFunction\"), def(\"DeclareClass\"), def(\"FlowType\"), // Implies default.\n    def(\"TypeAlias\"), // Implies named type\n    def(\"DeclareOpaqueType\"), // Implies named opaque type\n    def(\"InterfaceDeclaration\"), null))\n        .field(\"specifiers\", [or(def(\"ExportSpecifier\"), def(\"ExportBatchSpecifier\"))], defaults.emptyArray)\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"DeclareExportAllDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"source\")\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"ImportDeclaration\")\n        .field(\"importKind\", or(\"value\", \"type\", \"typeof\"), function () { return \"value\"; });\n    def(\"FlowPredicate\").bases(\"Flow\");\n    def(\"InferredPredicate\")\n        .bases(\"FlowPredicate\")\n        .build();\n    def(\"DeclaredPredicate\")\n        .bases(\"FlowPredicate\")\n        .build(\"value\")\n        .field(\"value\", def(\"Expression\"));\n    def(\"Function\")\n        .field(\"predicate\", or(def(\"FlowPredicate\"), null), defaults[\"null\"]);\n    def(\"CallExpression\")\n        .field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n    def(\"NewExpression\")\n        .field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n    // Enums\n    def(\"EnumDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"body\", or(def(\"EnumBooleanBody\"), def(\"EnumNumberBody\"), def(\"EnumStringBody\"), def(\"EnumSymbolBody\")));\n    def(\"EnumBooleanBody\")\n        .build(\"members\", \"explicitType\")\n        .field(\"members\", [def(\"EnumBooleanMember\")])\n        .field(\"explicitType\", Boolean);\n    def(\"EnumNumberBody\")\n        .build(\"members\", \"explicitType\")\n        .field(\"members\", [def(\"EnumNumberMember\")])\n        .field(\"explicitType\", Boolean);\n    def(\"EnumStringBody\")\n        .build(\"members\", \"explicitType\")\n        .field(\"members\", or([def(\"EnumStringMember\")], [def(\"EnumDefaultedMember\")]))\n        .field(\"explicitType\", Boolean);\n    def(\"EnumSymbolBody\")\n        .build(\"members\")\n        .field(\"members\", [def(\"EnumDefaultedMember\")]);\n    def(\"EnumBooleanMember\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"init\", or(def(\"Literal\"), Boolean));\n    def(\"EnumNumberMember\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"init\", def(\"Literal\"));\n    def(\"EnumStringMember\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"init\", def(\"Literal\"));\n    def(\"EnumDefaultedMember\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es_proposals_1 = (0, tslib_1.__importDefault)(require(\"./es-proposals\"));\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es_proposals_1.default);\n    var types = fork.use(types_1.default);\n    var defaults = fork.use(shared_1.default).defaults;\n    var def = types.Type.def;\n    var or = types.Type.or;\n    def(\"VariableDeclaration\")\n        .field(\"declarations\", [or(def(\"VariableDeclarator\"), def(\"Identifier\") // Esprima deviation.\n        )]);\n    def(\"Property\")\n        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\") // Esprima deviation.\n    ));\n    def(\"ArrayPattern\")\n        .field(\"elements\", [or(def(\"Pattern\"), def(\"SpreadElement\"), null)]);\n    def(\"ObjectPattern\")\n        .field(\"properties\", [or(def(\"Property\"), def(\"PropertyPattern\"), def(\"SpreadPropertyPattern\"), def(\"SpreadProperty\") // Used by Esprima.\n        )]);\n    // Like ModuleSpecifier, except type:\"ExportSpecifier\" and buildable.\n    // export {<id [as name]>} [from ...];\n    def(\"ExportSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"id\", \"name\");\n    // export <*> from ...;\n    def(\"ExportBatchSpecifier\")\n        .bases(\"Specifier\")\n        .build();\n    def(\"ExportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n        .field(\"default\", Boolean)\n        .field(\"declaration\", or(def(\"Declaration\"), def(\"Expression\"), // Implies default.\n    null))\n        .field(\"specifiers\", [or(def(\"ExportSpecifier\"), def(\"ExportBatchSpecifier\"))], defaults.emptyArray)\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"Block\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n    def(\"Line\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es_proposals_1 = (0, tslib_1.__importDefault)(require(\"./es-proposals\"));\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    var _a, _b, _c, _d, _e;\n    fork.use(es_proposals_1.default);\n    var types = fork.use(types_1.default);\n    var defaults = fork.use(shared_1.default).defaults;\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var isUndefined = types.builtInTypes.undefined;\n    def(\"Noop\")\n        .bases(\"Statement\")\n        .build();\n    def(\"DoExpression\")\n        .bases(\"Expression\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    def(\"BindExpression\")\n        .bases(\"Expression\")\n        .build(\"object\", \"callee\")\n        .field(\"object\", or(def(\"Expression\"), null))\n        .field(\"callee\", def(\"Expression\"));\n    def(\"ParenthesizedExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"ExportNamespaceSpecifier\")\n        .bases(\"Specifier\")\n        .build(\"exported\")\n        .field(\"exported\", def(\"Identifier\"));\n    def(\"ExportDefaultSpecifier\")\n        .bases(\"Specifier\")\n        .build(\"exported\")\n        .field(\"exported\", def(\"Identifier\"));\n    def(\"CommentBlock\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n    def(\"CommentLine\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n    def(\"Directive\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", def(\"DirectiveLiteral\"));\n    def(\"DirectiveLiteral\")\n        .bases(\"Node\", \"Expression\")\n        .build(\"value\")\n        .field(\"value\", String, defaults[\"use strict\"]);\n    def(\"InterpreterDirective\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", String);\n    def(\"BlockStatement\")\n        .bases(\"Statement\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")])\n        .field(\"directives\", [def(\"Directive\")], defaults.emptyArray);\n    def(\"Program\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")])\n        .field(\"directives\", [def(\"Directive\")], defaults.emptyArray)\n        .field(\"interpreter\", or(def(\"InterpreterDirective\"), null), defaults[\"null\"]);\n    function makeLiteralExtra(rawValueType, toRaw) {\n        if (rawValueType === void 0) { rawValueType = String; }\n        return [\n            \"extra\",\n            {\n                rawValue: rawValueType,\n                raw: String,\n            },\n            function getDefault() {\n                var value = types.getFieldValue(this, \"value\");\n                return {\n                    rawValue: value,\n                    raw: toRaw ? toRaw(value) : String(value),\n                };\n            },\n        ];\n    }\n    // Split Literal\n    (_a = def(\"StringLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", String))\n        .field.apply(_a, makeLiteralExtra(String, function (val) { return JSON.stringify(val); }));\n    (_b = def(\"NumericLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", Number)\n        .field(\"raw\", or(String, null), defaults[\"null\"]))\n        .field.apply(_b, makeLiteralExtra(Number));\n    (_c = def(\"BigIntLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        // Only String really seems appropriate here, since BigInt values\n        // often exceed the limits of JS numbers.\n        .field(\"value\", or(String, Number)))\n        .field.apply(_c, makeLiteralExtra(String, function (val) { return val + \"n\"; }));\n    // https://github.com/tc39/proposal-decimal\n    // https://github.com/babel/babel/pull/11640\n    (_d = def(\"DecimalLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", String))\n        .field.apply(_d, makeLiteralExtra(String, function (val) { return val + \"m\"; }));\n    def(\"NullLiteral\")\n        .bases(\"Literal\")\n        .build()\n        .field(\"value\", null, defaults[\"null\"]);\n    def(\"BooleanLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", Boolean);\n    (_e = def(\"RegExpLiteral\")\n        .bases(\"Literal\")\n        .build(\"pattern\", \"flags\")\n        .field(\"pattern\", String)\n        .field(\"flags\", String)\n        .field(\"value\", RegExp, function () {\n        return new RegExp(this.pattern, this.flags);\n    }))\n        .field.apply(_e, makeLiteralExtra(or(RegExp, isUndefined), function (exp) { return \"/\".concat(exp.pattern, \"/\").concat(exp.flags || \"\"); })).field(\"regex\", {\n        pattern: String,\n        flags: String\n    }, function () {\n        return {\n            pattern: this.pattern,\n            flags: this.flags,\n        };\n    });\n    var ObjectExpressionProperty = or(def(\"Property\"), def(\"ObjectMethod\"), def(\"ObjectProperty\"), def(\"SpreadProperty\"), def(\"SpreadElement\"));\n    // Split Property -> ObjectProperty and ObjectMethod\n    def(\"ObjectExpression\")\n        .bases(\"Expression\")\n        .build(\"properties\")\n        .field(\"properties\", [ObjectExpressionProperty]);\n    // ObjectMethod hoist .value properties to own properties\n    def(\"ObjectMethod\")\n        .bases(\"Node\", \"Function\")\n        .build(\"kind\", \"key\", \"params\", \"body\", \"computed\")\n        .field(\"kind\", or(\"method\", \"get\", \"set\"))\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"params\", [def(\"Pattern\")])\n        .field(\"body\", def(\"BlockStatement\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"async\", Boolean, defaults[\"false\"])\n        .field(\"accessibility\", // TypeScript\n    or(def(\"Literal\"), null), defaults[\"null\"])\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"ObjectProperty\")\n        .bases(\"Node\")\n        .build(\"key\", \"value\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\")))\n        .field(\"accessibility\", // TypeScript\n    or(def(\"Literal\"), null), defaults[\"null\"])\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    var ClassBodyElement = or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"), def(\"ClassPrivateProperty\"), def(\"ClassMethod\"), def(\"ClassPrivateMethod\"));\n    // MethodDefinition -> ClassMethod\n    def(\"ClassBody\")\n        .bases(\"Declaration\")\n        .build(\"body\")\n        .field(\"body\", [ClassBodyElement]);\n    def(\"ClassMethod\")\n        .bases(\"Declaration\", \"Function\")\n        .build(\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")));\n    def(\"ClassPrivateMethod\")\n        .bases(\"Declaration\", \"Function\")\n        .build(\"key\", \"params\", \"body\", \"kind\", \"computed\", \"static\")\n        .field(\"key\", def(\"PrivateName\"));\n    [\"ClassMethod\",\n        \"ClassPrivateMethod\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .field(\"kind\", or(\"get\", \"set\", \"method\", \"constructor\"), function () { return \"method\"; })\n            .field(\"body\", def(\"BlockStatement\"))\n            .field(\"computed\", Boolean, defaults[\"false\"])\n            .field(\"static\", or(Boolean, null), defaults[\"null\"])\n            .field(\"abstract\", or(Boolean, null), defaults[\"null\"])\n            .field(\"access\", or(\"public\", \"private\", \"protected\", null), defaults[\"null\"])\n            .field(\"accessibility\", or(\"public\", \"private\", \"protected\", null), defaults[\"null\"])\n            .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"])\n            .field(\"optional\", or(Boolean, null), defaults[\"null\"]);\n    });\n    var ObjectPatternProperty = or(def(\"Property\"), def(\"PropertyPattern\"), def(\"SpreadPropertyPattern\"), def(\"SpreadProperty\"), // Used by Esprima\n    def(\"ObjectProperty\"), // Babel 6\n    def(\"RestProperty\") // Babel 6\n    );\n    // Split into RestProperty and SpreadProperty\n    def(\"ObjectPattern\")\n        .bases(\"Pattern\")\n        .build(\"properties\")\n        .field(\"properties\", [ObjectPatternProperty])\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"SpreadProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"RestProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"ForAwaitStatement\")\n        .bases(\"Statement\")\n        .build(\"left\", \"right\", \"body\")\n        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Expression\")))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    // The callee node of a dynamic import(...) expression.\n    def(\"Import\")\n        .bases(\"Expression\")\n        .build();\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar babel_core_1 = (0, tslib_1.__importDefault)(require(\"./babel-core\"));\nvar flow_1 = (0, tslib_1.__importDefault)(require(\"./flow\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    fork.use(babel_core_1.default);\n    fork.use(flow_1.default);\n    // https://github.com/babel/babel/pull/10148\n    def(\"V8IntrinsicIdentifier\")\n        .bases(\"Expression\")\n        .build(\"name\")\n        .field(\"name\", String);\n    // https://github.com/babel/babel/pull/13191\n    // https://github.com/babel/website/pull/2541\n    def(\"TopicReference\")\n        .bases(\"Expression\")\n        .build();\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar babel_core_1 = (0, tslib_1.__importDefault)(require(\"./babel-core\"));\nvar type_annotations_1 = (0, tslib_1.__importDefault)(require(\"./type-annotations\"));\nvar types_1 = (0, tslib_1.__importDefault)(require(\"../lib/types\"));\nvar shared_1 = (0, tslib_1.__importDefault)(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    // Since TypeScript is parsed by Babylon, include the core Babylon types\n    // but omit the Flow-related types.\n    fork.use(babel_core_1.default);\n    fork.use(type_annotations_1.default);\n    var types = fork.use(types_1.default);\n    var n = types.namedTypes;\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    var StringLiteral = types.Type.from(function (value, deep) {\n        if (n.StringLiteral &&\n            n.StringLiteral.check(value, deep)) {\n            return true;\n        }\n        if (n.Literal &&\n            n.Literal.check(value, deep) &&\n            typeof value.value === \"string\") {\n            return true;\n        }\n        return false;\n    }, \"StringLiteral\");\n    def(\"TSType\")\n        .bases(\"Node\");\n    var TSEntityName = or(def(\"Identifier\"), def(\"TSQualifiedName\"));\n    def(\"TSTypeReference\")\n        .bases(\"TSType\", \"TSHasOptionalTypeParameterInstantiation\")\n        .build(\"typeName\", \"typeParameters\")\n        .field(\"typeName\", TSEntityName);\n    // An abstract (non-buildable) base type that provide a commonly-needed\n    // optional .typeParameters field.\n    def(\"TSHasOptionalTypeParameterInstantiation\")\n        .field(\"typeParameters\", or(def(\"TSTypeParameterInstantiation\"), null), defaults[\"null\"]);\n    // An abstract (non-buildable) base type that provide a commonly-needed\n    // optional .typeParameters field.\n    def(\"TSHasOptionalTypeParameters\")\n        .field(\"typeParameters\", or(def(\"TSTypeParameterDeclaration\"), null, void 0), defaults[\"null\"]);\n    // An abstract (non-buildable) base type that provide a commonly-needed\n    // optional .typeAnnotation field.\n    def(\"TSHasOptionalTypeAnnotation\")\n        .field(\"typeAnnotation\", or(def(\"TSTypeAnnotation\"), null), defaults[\"null\"]);\n    def(\"TSQualifiedName\")\n        .bases(\"Node\")\n        .build(\"left\", \"right\")\n        .field(\"left\", TSEntityName)\n        .field(\"right\", TSEntityName);\n    def(\"TSAsExpression\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"expression\", \"typeAnnotation\")\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"typeAnnotation\", def(\"TSType\"))\n        .field(\"extra\", or({ parenthesized: Boolean }, null), defaults[\"null\"]);\n    def(\"TSNonNullExpression\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    [\n        \"TSAnyKeyword\",\n        \"TSBigIntKeyword\",\n        \"TSBooleanKeyword\",\n        \"TSNeverKeyword\",\n        \"TSNullKeyword\",\n        \"TSNumberKeyword\",\n        \"TSObjectKeyword\",\n        \"TSStringKeyword\",\n        \"TSSymbolKeyword\",\n        \"TSUndefinedKeyword\",\n        \"TSUnknownKeyword\",\n        \"TSVoidKeyword\",\n        \"TSIntrinsicKeyword\",\n        \"TSThisType\",\n    ].forEach(function (keywordType) {\n        def(keywordType)\n            .bases(\"TSType\")\n            .build();\n    });\n    def(\"TSArrayType\")\n        .bases(\"TSType\")\n        .build(\"elementType\")\n        .field(\"elementType\", def(\"TSType\"));\n    def(\"TSLiteralType\")\n        .bases(\"TSType\")\n        .build(\"literal\")\n        .field(\"literal\", or(def(\"NumericLiteral\"), def(\"StringLiteral\"), def(\"BooleanLiteral\"), def(\"TemplateLiteral\"), def(\"UnaryExpression\")));\n    def(\"TemplateLiteral\")\n        // The TemplateLiteral type appears to be reused for TypeScript template\n        // literal types (instead of introducing a new TSTemplateLiteralType type),\n        // so we allow the templateLiteral.expressions array to be either all\n        // expressions or all TypeScript types.\n        .field(\"expressions\", or([def(\"Expression\")], [def(\"TSType\")]));\n    [\"TSUnionType\",\n        \"TSIntersectionType\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .bases(\"TSType\")\n            .build(\"types\")\n            .field(\"types\", [def(\"TSType\")]);\n    });\n    def(\"TSConditionalType\")\n        .bases(\"TSType\")\n        .build(\"checkType\", \"extendsType\", \"trueType\", \"falseType\")\n        .field(\"checkType\", def(\"TSType\"))\n        .field(\"extendsType\", def(\"TSType\"))\n        .field(\"trueType\", def(\"TSType\"))\n        .field(\"falseType\", def(\"TSType\"));\n    def(\"TSInferType\")\n        .bases(\"TSType\")\n        .build(\"typeParameter\")\n        .field(\"typeParameter\", def(\"TSTypeParameter\"));\n    def(\"TSParenthesizedType\")\n        .bases(\"TSType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    var ParametersType = [or(def(\"Identifier\"), def(\"RestElement\"), def(\"ArrayPattern\"), def(\"ObjectPattern\"))];\n    [\"TSFunctionType\",\n        \"TSConstructorType\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .bases(\"TSType\", \"TSHasOptionalTypeParameters\", \"TSHasOptionalTypeAnnotation\")\n            .build(\"parameters\")\n            .field(\"parameters\", ParametersType);\n    });\n    def(\"TSDeclareFunction\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n        .build(\"id\", \"params\", \"returnType\")\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"async\", Boolean, defaults[\"false\"])\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"params\", [def(\"Pattern\")])\n        // tSFunctionTypeAnnotationCommon\n        .field(\"returnType\", or(def(\"TSTypeAnnotation\"), def(\"Noop\"), // Still used?\n    null), defaults[\"null\"]);\n    def(\"TSDeclareMethod\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n        .build(\"key\", \"params\", \"returnType\")\n        .field(\"async\", Boolean, defaults[\"false\"])\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"params\", [def(\"Pattern\")])\n        // classMethodOrPropertyCommon\n        .field(\"abstract\", Boolean, defaults[\"false\"])\n        .field(\"accessibility\", or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"])\n        .field(\"static\", Boolean, defaults[\"false\"])\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"optional\", Boolean, defaults[\"false\"])\n        .field(\"key\", or(def(\"Identifier\"), def(\"StringLiteral\"), def(\"NumericLiteral\"), \n    // Only allowed if .computed is true.\n    def(\"Expression\")))\n        // classMethodOrDeclareMethodCommon\n        .field(\"kind\", or(\"get\", \"set\", \"method\", \"constructor\"), function getDefault() { return \"method\"; })\n        .field(\"access\", // Not \"accessibility\"?\n    or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"])\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"])\n        // tSFunctionTypeAnnotationCommon\n        .field(\"returnType\", or(def(\"TSTypeAnnotation\"), def(\"Noop\"), // Still used?\n    null), defaults[\"null\"]);\n    def(\"TSMappedType\")\n        .bases(\"TSType\")\n        .build(\"typeParameter\", \"typeAnnotation\")\n        .field(\"readonly\", or(Boolean, \"+\", \"-\"), defaults[\"false\"])\n        .field(\"typeParameter\", def(\"TSTypeParameter\"))\n        .field(\"optional\", or(Boolean, \"+\", \"-\"), defaults[\"false\"])\n        .field(\"typeAnnotation\", or(def(\"TSType\"), null), defaults[\"null\"]);\n    def(\"TSTupleType\")\n        .bases(\"TSType\")\n        .build(\"elementTypes\")\n        .field(\"elementTypes\", [or(def(\"TSType\"), def(\"TSNamedTupleMember\"))]);\n    def(\"TSNamedTupleMember\")\n        .bases(\"TSType\")\n        .build(\"label\", \"elementType\", \"optional\")\n        .field(\"label\", def(\"Identifier\"))\n        .field(\"optional\", Boolean, defaults[\"false\"])\n        .field(\"elementType\", def(\"TSType\"));\n    def(\"TSRestType\")\n        .bases(\"TSType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSOptionalType\")\n        .bases(\"TSType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSIndexedAccessType\")\n        .bases(\"TSType\")\n        .build(\"objectType\", \"indexType\")\n        .field(\"objectType\", def(\"TSType\"))\n        .field(\"indexType\", def(\"TSType\"));\n    def(\"TSTypeOperator\")\n        .bases(\"TSType\")\n        .build(\"operator\")\n        .field(\"operator\", String)\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSTypeAnnotation\")\n        .bases(\"Node\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", or(def(\"TSType\"), def(\"TSTypeAnnotation\")));\n    def(\"TSIndexSignature\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeAnnotation\")\n        .build(\"parameters\", \"typeAnnotation\")\n        .field(\"parameters\", [def(\"Identifier\")]) // Length === 1\n        .field(\"readonly\", Boolean, defaults[\"false\"]);\n    def(\"TSPropertySignature\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeAnnotation\")\n        .build(\"key\", \"typeAnnotation\", \"optional\")\n        .field(\"key\", def(\"Expression\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"readonly\", Boolean, defaults[\"false\"])\n        .field(\"optional\", Boolean, defaults[\"false\"])\n        .field(\"initializer\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"TSMethodSignature\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\", \"TSHasOptionalTypeAnnotation\")\n        .build(\"key\", \"parameters\", \"typeAnnotation\")\n        .field(\"key\", def(\"Expression\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"optional\", Boolean, defaults[\"false\"])\n        .field(\"parameters\", ParametersType);\n    def(\"TSTypePredicate\")\n        .bases(\"TSTypeAnnotation\", \"TSType\")\n        .build(\"parameterName\", \"typeAnnotation\", \"asserts\")\n        .field(\"parameterName\", or(def(\"Identifier\"), def(\"TSThisType\")))\n        .field(\"typeAnnotation\", or(def(\"TSTypeAnnotation\"), null), defaults[\"null\"])\n        .field(\"asserts\", Boolean, defaults[\"false\"]);\n    [\"TSCallSignatureDeclaration\",\n        \"TSConstructSignatureDeclaration\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .bases(\"Declaration\", \"TSHasOptionalTypeParameters\", \"TSHasOptionalTypeAnnotation\")\n            .build(\"parameters\", \"typeAnnotation\")\n            .field(\"parameters\", ParametersType);\n    });\n    def(\"TSEnumMember\")\n        .bases(\"Node\")\n        .build(\"id\", \"initializer\")\n        .field(\"id\", or(def(\"Identifier\"), StringLiteral))\n        .field(\"initializer\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"TSTypeQuery\")\n        .bases(\"TSType\")\n        .build(\"exprName\")\n        .field(\"exprName\", or(TSEntityName, def(\"TSImportType\")));\n    // Inferred from Babylon's tsParseTypeMember method.\n    var TSTypeMember = or(def(\"TSCallSignatureDeclaration\"), def(\"TSConstructSignatureDeclaration\"), def(\"TSIndexSignature\"), def(\"TSMethodSignature\"), def(\"TSPropertySignature\"));\n    def(\"TSTypeLiteral\")\n        .bases(\"TSType\")\n        .build(\"members\")\n        .field(\"members\", [TSTypeMember]);\n    def(\"TSTypeParameter\")\n        .bases(\"Identifier\")\n        .build(\"name\", \"constraint\", \"default\")\n        .field(\"name\", String)\n        .field(\"constraint\", or(def(\"TSType\"), void 0), defaults[\"undefined\"])\n        .field(\"default\", or(def(\"TSType\"), void 0), defaults[\"undefined\"]);\n    def(\"TSTypeAssertion\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"typeAnnotation\", \"expression\")\n        .field(\"typeAnnotation\", def(\"TSType\"))\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"extra\", or({ parenthesized: Boolean }, null), defaults[\"null\"]);\n    def(\"TSTypeParameterDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"params\")\n        .field(\"params\", [def(\"TSTypeParameter\")]);\n    def(\"TSTypeParameterInstantiation\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"TSType\")]);\n    def(\"TSEnumDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"members\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"const\", Boolean, defaults[\"false\"])\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"members\", [def(\"TSEnumMember\")])\n        .field(\"initializer\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"TSTypeAliasDeclaration\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n        .build(\"id\", \"typeAnnotation\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSModuleBlock\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    def(\"TSModuleDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\")\n        .field(\"id\", or(StringLiteral, TSEntityName))\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"global\", Boolean, defaults[\"false\"])\n        .field(\"body\", or(def(\"TSModuleBlock\"), def(\"TSModuleDeclaration\"), null), defaults[\"null\"]);\n    def(\"TSImportType\")\n        .bases(\"TSType\", \"TSHasOptionalTypeParameterInstantiation\")\n        .build(\"argument\", \"qualifier\", \"typeParameters\")\n        .field(\"argument\", StringLiteral)\n        .field(\"qualifier\", or(TSEntityName, void 0), defaults[\"undefined\"]);\n    def(\"TSImportEqualsDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"moduleReference\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"isExport\", Boolean, defaults[\"false\"])\n        .field(\"moduleReference\", or(TSEntityName, def(\"TSExternalModuleReference\")));\n    def(\"TSExternalModuleReference\")\n        .bases(\"Declaration\")\n        .build(\"expression\")\n        .field(\"expression\", StringLiteral);\n    def(\"TSExportAssignment\")\n        .bases(\"Statement\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"TSNamespaceExportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"TSInterfaceBody\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [TSTypeMember]);\n    def(\"TSExpressionWithTypeArguments\")\n        .bases(\"TSType\", \"TSHasOptionalTypeParameterInstantiation\")\n        .build(\"expression\", \"typeParameters\")\n        .field(\"expression\", TSEntityName);\n    def(\"TSInterfaceDeclaration\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n        .build(\"id\", \"body\")\n        .field(\"id\", TSEntityName)\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"extends\", or([def(\"TSExpressionWithTypeArguments\")], null), defaults[\"null\"])\n        .field(\"body\", def(\"TSInterfaceBody\"));\n    def(\"TSParameterProperty\")\n        .bases(\"Pattern\")\n        .build(\"parameter\")\n        .field(\"accessibility\", or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"])\n        .field(\"readonly\", Boolean, defaults[\"false\"])\n        .field(\"parameter\", or(def(\"Identifier\"), def(\"AssignmentPattern\")));\n    def(\"ClassProperty\")\n        .field(\"access\", // Not \"accessibility\"?\n    or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"]);\n    // Defined already in es6 and babel-core.\n    def(\"ClassBody\")\n        .field(\"body\", [or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"), def(\"ClassPrivateProperty\"), def(\"ClassMethod\"), def(\"ClassPrivateMethod\"), \n        // Just need to add these types:\n        def(\"TSDeclareMethod\"), TSTypeMember)]);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.namedTypes = void 0;\nvar namedTypes;\n(function (namedTypes) {\n})(namedTypes = exports.namedTypes || (exports.namedTypes = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.visit = exports.use = exports.Type = exports.someField = exports.PathVisitor = exports.Path = exports.NodePath = exports.namedTypes = exports.getSupertypeNames = exports.getFieldValue = exports.getFieldNames = exports.getBuilderName = exports.finalize = exports.eachField = exports.defineMethod = exports.builtInTypes = exports.builders = exports.astNodesAreEquivalent = void 0;\nvar tslib_1 = require(\"tslib\");\nvar fork_1 = (0, tslib_1.__importDefault)(require(\"./fork\"));\nvar es_proposals_1 = (0, tslib_1.__importDefault)(require(\"./def/es-proposals\"));\nvar jsx_1 = (0, tslib_1.__importDefault)(require(\"./def/jsx\"));\nvar flow_1 = (0, tslib_1.__importDefault)(require(\"./def/flow\"));\nvar esprima_1 = (0, tslib_1.__importDefault)(require(\"./def/esprima\"));\nvar babel_1 = (0, tslib_1.__importDefault)(require(\"./def/babel\"));\nvar typescript_1 = (0, tslib_1.__importDefault)(require(\"./def/typescript\"));\nvar namedTypes_1 = require(\"./gen/namedTypes\");\nObject.defineProperty(exports, \"namedTypes\", { enumerable: true, get: function () { return namedTypes_1.namedTypes; } });\nvar _a = (0, fork_1.default)([\n    // Feel free to add to or remove from this list of extension modules to\n    // configure the precise type hierarchy that you need.\n    es_proposals_1.default,\n    jsx_1.default,\n    flow_1.default,\n    esprima_1.default,\n    babel_1.default,\n    typescript_1.default,\n]), astNodesAreEquivalent = _a.astNodesAreEquivalent, builders = _a.builders, builtInTypes = _a.builtInTypes, defineMethod = _a.defineMethod, eachField = _a.eachField, finalize = _a.finalize, getBuilderName = _a.getBuilderName, getFieldNames = _a.getFieldNames, getFieldValue = _a.getFieldValue, getSupertypeNames = _a.getSupertypeNames, n = _a.namedTypes, NodePath = _a.NodePath, Path = _a.Path, PathVisitor = _a.PathVisitor, someField = _a.someField, Type = _a.Type, use = _a.use, visit = _a.visit;\nexports.astNodesAreEquivalent = astNodesAreEquivalent;\nexports.builders = builders;\nexports.builtInTypes = builtInTypes;\nexports.defineMethod = defineMethod;\nexports.eachField = eachField;\nexports.finalize = finalize;\nexports.getBuilderName = getBuilderName;\nexports.getFieldNames = getFieldNames;\nexports.getFieldValue = getFieldValue;\nexports.getSupertypeNames = getSupertypeNames;\nexports.NodePath = NodePath;\nexports.Path = Path;\nexports.PathVisitor = PathVisitor;\nexports.someField = someField;\nexports.Type = Type;\nexports.use = use;\nexports.visit = visit;\n// Populate the exported fields of the namedTypes namespace, while still\n// retaining its member types.\nObject.assign(namedTypes_1.namedTypes, n);\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\n    //   entries in the \u201Csource\u201D field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n", "import assert from \"assert\";\nimport { EOL } from \"os\";\nimport * as types from \"ast-types\";\nvar n = types.namedTypes;\nimport sourceMap from \"source-map\";\nvar SourceMapConsumer = sourceMap.SourceMapConsumer;\nvar SourceMapGenerator = sourceMap.SourceMapGenerator;\nvar hasOwn = Object.prototype.hasOwnProperty;\nexport function getLineTerminator() {\n    return isBrowser() ? \"\\n\" : EOL || \"\\n\";\n}\nexport function isBrowser() {\n    return (typeof window !== \"undefined\" && typeof window.document !== \"undefined\");\n}\nexport function getOption(options, key, defaultValue) {\n    if (options && hasOwn.call(options, key)) {\n        return options[key];\n    }\n    return defaultValue;\n}\nexport function getUnionOfKeys() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var result = {};\n    var argc = args.length;\n    for (var i = 0; i < argc; ++i) {\n        var keys = Object.keys(args[i]);\n        var keyCount = keys.length;\n        for (var j = 0; j < keyCount; ++j) {\n            result[keys[j]] = true;\n        }\n    }\n    return result;\n}\nexport function comparePos(pos1, pos2) {\n    return pos1.line - pos2.line || pos1.column - pos2.column;\n}\nexport function copyPos(pos) {\n    return {\n        line: pos.line,\n        column: pos.column,\n    };\n}\nexport function composeSourceMaps(formerMap, latterMap) {\n    if (formerMap) {\n        if (!latterMap) {\n            return formerMap;\n        }\n    }\n    else {\n        return latterMap || null;\n    }\n    var smcFormer = new SourceMapConsumer(formerMap);\n    var smcLatter = new SourceMapConsumer(latterMap);\n    var smg = new SourceMapGenerator({\n        file: latterMap.file,\n        sourceRoot: latterMap.sourceRoot,\n    });\n    var sourcesToContents = {};\n    smcLatter.eachMapping(function (mapping) {\n        var origPos = smcFormer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn,\n        });\n        var sourceName = origPos.source;\n        if (sourceName === null) {\n            return;\n        }\n        smg.addMapping({\n            source: sourceName,\n            original: copyPos(origPos),\n            generated: {\n                line: mapping.generatedLine,\n                column: mapping.generatedColumn,\n            },\n            name: mapping.name,\n        });\n        var sourceContent = smcFormer.sourceContentFor(sourceName);\n        if (sourceContent && !hasOwn.call(sourcesToContents, sourceName)) {\n            sourcesToContents[sourceName] = sourceContent;\n            smg.setSourceContent(sourceName, sourceContent);\n        }\n    });\n    return smg.toJSON();\n}\nexport function getTrueLoc(node, lines) {\n    // It's possible that node is newly-created (not parsed by Esprima),\n    // in which case it probably won't have a .loc property (or an\n    // .original property for that matter). That's fine; we'll just\n    // pretty-print it as usual.\n    if (!node.loc) {\n        return null;\n    }\n    var result = {\n        start: node.loc.start,\n        end: node.loc.end,\n    };\n    function include(node) {\n        expandLoc(result, node.loc);\n    }\n    // If the node is an export declaration and its .declaration has any\n    // decorators, their locations might contribute to the true start/end\n    // positions of the export declaration node.\n    if (node.declaration &&\n        node.declaration.decorators &&\n        isExportDeclaration(node)) {\n        node.declaration.decorators.forEach(include);\n    }\n    if (comparePos(result.start, result.end) < 0) {\n        // Trim leading whitespace.\n        result.start = copyPos(result.start);\n        lines.skipSpaces(result.start, false, true);\n        if (comparePos(result.start, result.end) < 0) {\n            // Trim trailing whitespace, if the end location is not already the\n            // same as the start location.\n            result.end = copyPos(result.end);\n            lines.skipSpaces(result.end, true, true);\n        }\n    }\n    // If the node has any comments, their locations might contribute to\n    // the true start/end positions of the node.\n    if (node.comments) {\n        node.comments.forEach(include);\n    }\n    return result;\n}\nfunction expandLoc(parentLoc, childLoc) {\n    if (parentLoc && childLoc) {\n        if (comparePos(childLoc.start, parentLoc.start) < 0) {\n            parentLoc.start = childLoc.start;\n        }\n        if (comparePos(parentLoc.end, childLoc.end) < 0) {\n            parentLoc.end = childLoc.end;\n        }\n    }\n}\nexport function fixFaultyLocations(node, lines) {\n    var loc = node.loc;\n    if (loc) {\n        if (loc.start.line < 1) {\n            loc.start.line = 1;\n        }\n        if (loc.end.line < 1) {\n            loc.end.line = 1;\n        }\n    }\n    if (node.type === \"File\") {\n        // Babylon returns File nodes whose .loc.{start,end} do not include\n        // leading or trailing whitespace.\n        loc.start = lines.firstPos();\n        loc.end = lines.lastPos();\n    }\n    fixForLoopHead(node, lines);\n    fixTemplateLiteral(node, lines);\n    if (loc && node.decorators) {\n        // Expand the .loc of the node responsible for printing the decorators\n        // (here, the decorated node) so that it includes node.decorators.\n        node.decorators.forEach(function (decorator) {\n            expandLoc(loc, decorator.loc);\n        });\n    }\n    else if (node.declaration && isExportDeclaration(node)) {\n        // Nullify .loc information for the child declaration so that we never\n        // try to reprint it without also reprinting the export declaration.\n        node.declaration.loc = null;\n        // Expand the .loc of the node responsible for printing the decorators\n        // (here, the export declaration) so that it includes node.decorators.\n        var decorators = node.declaration.decorators;\n        if (decorators) {\n            decorators.forEach(function (decorator) {\n                expandLoc(loc, decorator.loc);\n            });\n        }\n    }\n    else if ((n.MethodDefinition && n.MethodDefinition.check(node)) ||\n        (n.Property.check(node) && (node.method || node.shorthand))) {\n        // If the node is a MethodDefinition or a .method or .shorthand\n        // Property, then the location information stored in\n        // node.value.loc is very likely untrustworthy (just the {body}\n        // part of a method, or nothing in the case of shorthand\n        // properties), so we null out that information to prevent\n        // accidental reuse of bogus source code during reprinting.\n        node.value.loc = null;\n        if (n.FunctionExpression.check(node.value)) {\n            // FunctionExpression method values should be anonymous,\n            // because their .id fields are ignored anyway.\n            node.value.id = null;\n        }\n    }\n    else if (node.type === \"ObjectTypeProperty\") {\n        var loc_1 = node.loc;\n        var end = loc_1 && loc_1.end;\n        if (end) {\n            end = copyPos(end);\n            if (lines.prevPos(end) && lines.charAt(end) === \",\") {\n                // Some parsers accidentally include trailing commas in the\n                // .loc.end information for ObjectTypeProperty nodes.\n                if ((end = lines.skipSpaces(end, true, true))) {\n                    loc_1.end = end;\n                }\n            }\n        }\n    }\n}\nfunction fixForLoopHead(node, lines) {\n    if (node.type !== \"ForStatement\") {\n        return;\n    }\n    function fix(child) {\n        var loc = child && child.loc;\n        var start = loc && loc.start;\n        var end = loc && copyPos(loc.end);\n        while (start && end && comparePos(start, end) < 0) {\n            lines.prevPos(end);\n            if (lines.charAt(end) === \";\") {\n                // Update child.loc.end to *exclude* the ';' character.\n                loc.end.line = end.line;\n                loc.end.column = end.column;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    fix(node.init);\n    fix(node.test);\n    fix(node.update);\n}\nfunction fixTemplateLiteral(node, lines) {\n    if (node.type !== \"TemplateLiteral\") {\n        return;\n    }\n    if (node.quasis.length === 0) {\n        // If there are no quasi elements, then there is nothing to fix.\n        return;\n    }\n    // node.loc is not present when using export default with a template literal\n    if (node.loc) {\n        // First we need to exclude the opening ` from the .loc of the first\n        // quasi element, in case the parser accidentally decided to include it.\n        var afterLeftBackTickPos = copyPos(node.loc.start);\n        assert.strictEqual(lines.charAt(afterLeftBackTickPos), \"`\");\n        assert.ok(lines.nextPos(afterLeftBackTickPos));\n        var firstQuasi = node.quasis[0];\n        if (comparePos(firstQuasi.loc.start, afterLeftBackTickPos) < 0) {\n            firstQuasi.loc.start = afterLeftBackTickPos;\n        }\n        // Next we need to exclude the closing ` from the .loc of the last quasi\n        // element, in case the parser accidentally decided to include it.\n        var rightBackTickPos = copyPos(node.loc.end);\n        assert.ok(lines.prevPos(rightBackTickPos));\n        assert.strictEqual(lines.charAt(rightBackTickPos), \"`\");\n        var lastQuasi = node.quasis[node.quasis.length - 1];\n        if (comparePos(rightBackTickPos, lastQuasi.loc.end) < 0) {\n            lastQuasi.loc.end = rightBackTickPos;\n        }\n    }\n    // Now we need to exclude ${ and } characters from the .loc's of all\n    // quasi elements, since some parsers accidentally include them.\n    node.expressions.forEach(function (expr, i) {\n        // Rewind from expr.loc.start over any whitespace and the ${ that\n        // precedes the expression. The position of the $ should be the same\n        // as the .loc.end of the preceding quasi element, but some parsers\n        // accidentally include the ${ in the .loc of the quasi element.\n        var dollarCurlyPos = lines.skipSpaces(expr.loc.start, true, false);\n        if (lines.prevPos(dollarCurlyPos) &&\n            lines.charAt(dollarCurlyPos) === \"{\" &&\n            lines.prevPos(dollarCurlyPos) &&\n            lines.charAt(dollarCurlyPos) === \"$\") {\n            var quasiBefore = node.quasis[i];\n            if (comparePos(dollarCurlyPos, quasiBefore.loc.end) < 0) {\n                quasiBefore.loc.end = dollarCurlyPos;\n            }\n        }\n        // Likewise, some parsers accidentally include the } that follows\n        // the expression in the .loc of the following quasi element.\n        var rightCurlyPos = lines.skipSpaces(expr.loc.end, false, false);\n        if (lines.charAt(rightCurlyPos) === \"}\") {\n            assert.ok(lines.nextPos(rightCurlyPos));\n            // Now rightCurlyPos is technically the position just after the }.\n            var quasiAfter = node.quasis[i + 1];\n            if (comparePos(quasiAfter.loc.start, rightCurlyPos) < 0) {\n                quasiAfter.loc.start = rightCurlyPos;\n            }\n        }\n    });\n}\nexport function isExportDeclaration(node) {\n    if (node)\n        switch (node.type) {\n            case \"ExportDeclaration\":\n            case \"ExportDefaultDeclaration\":\n            case \"ExportDefaultSpecifier\":\n            case \"DeclareExportDeclaration\":\n            case \"ExportNamedDeclaration\":\n            case \"ExportAllDeclaration\":\n                return true;\n        }\n    return false;\n}\nexport function getParentExportDeclaration(path) {\n    var parentNode = path.getParentNode();\n    if (path.getName() === \"declaration\" && isExportDeclaration(parentNode)) {\n        return parentNode;\n    }\n    return null;\n}\nexport function isTrailingCommaEnabled(options, context) {\n    var trailingComma = options.trailingComma;\n    if (typeof trailingComma === \"object\") {\n        return !!trailingComma[context];\n    }\n    return !!trailingComma;\n}\n", "(function webpackUniversalModuleDefinition(root, factory) {\n/* istanbul ignore next */\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n/* istanbul ignore next */\n\telse if(typeof exports === 'object')\n\t\texports[\"esprima\"] = factory();\n\telse\n\t\troot[\"esprima\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/* istanbul ignore if */\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*\n\t  Copyright JS Foundation and other contributors, https://js.foundation/\n\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar comment_handler_1 = __webpack_require__(1);\n\tvar jsx_parser_1 = __webpack_require__(3);\n\tvar parser_1 = __webpack_require__(8);\n\tvar tokenizer_1 = __webpack_require__(15);\n\tfunction parse(code, options, delegate) {\n\t    var commentHandler = null;\n\t    var proxyDelegate = function (node, metadata) {\n\t        if (delegate) {\n\t            delegate(node, metadata);\n\t        }\n\t        if (commentHandler) {\n\t            commentHandler.visit(node, metadata);\n\t        }\n\t    };\n\t    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;\n\t    var collectComment = false;\n\t    if (options) {\n\t        collectComment = (typeof options.comment === 'boolean' && options.comment);\n\t        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);\n\t        if (collectComment || attachComment) {\n\t            commentHandler = new comment_handler_1.CommentHandler();\n\t            commentHandler.attach = attachComment;\n\t            options.comment = true;\n\t            parserDelegate = proxyDelegate;\n\t        }\n\t    }\n\t    var isModule = false;\n\t    if (options && typeof options.sourceType === 'string') {\n\t        isModule = (options.sourceType === 'module');\n\t    }\n\t    var parser;\n\t    if (options && typeof options.jsx === 'boolean' && options.jsx) {\n\t        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\n\t    }\n\t    else {\n\t        parser = new parser_1.Parser(code, options, parserDelegate);\n\t    }\n\t    var program = isModule ? parser.parseModule() : parser.parseScript();\n\t    var ast = program;\n\t    if (collectComment && commentHandler) {\n\t        ast.comments = commentHandler.comments;\n\t    }\n\t    if (parser.config.tokens) {\n\t        ast.tokens = parser.tokens;\n\t    }\n\t    if (parser.config.tolerant) {\n\t        ast.errors = parser.errorHandler.errors;\n\t    }\n\t    return ast;\n\t}\n\texports.parse = parse;\n\tfunction parseModule(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'module';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseModule = parseModule;\n\tfunction parseScript(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'script';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseScript = parseScript;\n\tfunction tokenize(code, options, delegate) {\n\t    var tokenizer = new tokenizer_1.Tokenizer(code, options);\n\t    var tokens;\n\t    tokens = [];\n\t    try {\n\t        while (true) {\n\t            var token = tokenizer.getNextToken();\n\t            if (!token) {\n\t                break;\n\t            }\n\t            if (delegate) {\n\t                token = delegate(token);\n\t            }\n\t            tokens.push(token);\n\t        }\n\t    }\n\t    catch (e) {\n\t        tokenizer.errorHandler.tolerate(e);\n\t    }\n\t    if (tokenizer.errorHandler.tolerant) {\n\t        tokens.errors = tokenizer.errors();\n\t    }\n\t    return tokens;\n\t}\n\texports.tokenize = tokenize;\n\tvar syntax_1 = __webpack_require__(2);\n\texports.Syntax = syntax_1.Syntax;\n\t// Sync with *.json manifests.\n\texports.version = '4.0.1';\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\tvar CommentHandler = (function () {\n\t    function CommentHandler() {\n\t        this.attach = false;\n\t        this.comments = [];\n\t        this.stack = [];\n\t        this.leading = [];\n\t        this.trailing = [];\n\t    }\n\t    CommentHandler.prototype.insertInnerComments = function (node, metadata) {\n\t        //  innnerComments for properties empty block\n\t        //  `function a() {/** comments **\\/}`\n\t        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\n\t            var innerComments = [];\n\t            for (var i = this.leading.length - 1; i >= 0; --i) {\n\t                var entry = this.leading[i];\n\t                if (metadata.end.offset >= entry.start) {\n\t                    innerComments.unshift(entry.comment);\n\t                    this.leading.splice(i, 1);\n\t                    this.trailing.splice(i, 1);\n\t                }\n\t            }\n\t            if (innerComments.length) {\n\t                node.innerComments = innerComments;\n\t            }\n\t        }\n\t    };\n\t    CommentHandler.prototype.findTrailingComments = function (metadata) {\n\t        var trailingComments = [];\n\t        if (this.trailing.length > 0) {\n\t            for (var i = this.trailing.length - 1; i >= 0; --i) {\n\t                var entry_1 = this.trailing[i];\n\t                if (entry_1.start >= metadata.end.offset) {\n\t                    trailingComments.unshift(entry_1.comment);\n\t                }\n\t            }\n\t            this.trailing.length = 0;\n\t            return trailingComments;\n\t        }\n\t        var entry = this.stack[this.stack.length - 1];\n\t        if (entry && entry.node.trailingComments) {\n\t            var firstComment = entry.node.trailingComments[0];\n\t            if (firstComment && firstComment.range[0] >= metadata.end.offset) {\n\t                trailingComments = entry.node.trailingComments;\n\t                delete entry.node.trailingComments;\n\t            }\n\t        }\n\t        return trailingComments;\n\t    };\n\t    CommentHandler.prototype.findLeadingComments = function (metadata) {\n\t        var leadingComments = [];\n\t        var target;\n\t        while (this.stack.length > 0) {\n\t            var entry = this.stack[this.stack.length - 1];\n\t            if (entry && entry.start >= metadata.start.offset) {\n\t                target = entry.node;\n\t                this.stack.pop();\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        if (target) {\n\t            var count = target.leadingComments ? target.leadingComments.length : 0;\n\t            for (var i = count - 1; i >= 0; --i) {\n\t                var comment = target.leadingComments[i];\n\t                if (comment.range[1] <= metadata.start.offset) {\n\t                    leadingComments.unshift(comment);\n\t                    target.leadingComments.splice(i, 1);\n\t                }\n\t            }\n\t            if (target.leadingComments && target.leadingComments.length === 0) {\n\t                delete target.leadingComments;\n\t            }\n\t            return leadingComments;\n\t        }\n\t        for (var i = this.leading.length - 1; i >= 0; --i) {\n\t            var entry = this.leading[i];\n\t            if (entry.start <= metadata.start.offset) {\n\t                leadingComments.unshift(entry.comment);\n\t                this.leading.splice(i, 1);\n\t            }\n\t        }\n\t        return leadingComments;\n\t    };\n\t    CommentHandler.prototype.visitNode = function (node, metadata) {\n\t        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\n\t            return;\n\t        }\n\t        this.insertInnerComments(node, metadata);\n\t        var trailingComments = this.findTrailingComments(metadata);\n\t        var leadingComments = this.findLeadingComments(metadata);\n\t        if (leadingComments.length > 0) {\n\t            node.leadingComments = leadingComments;\n\t        }\n\t        if (trailingComments.length > 0) {\n\t            node.trailingComments = trailingComments;\n\t        }\n\t        this.stack.push({\n\t            node: node,\n\t            start: metadata.start.offset\n\t        });\n\t    };\n\t    CommentHandler.prototype.visitComment = function (node, metadata) {\n\t        var type = (node.type[0] === 'L') ? 'Line' : 'Block';\n\t        var comment = {\n\t            type: type,\n\t            value: node.value\n\t        };\n\t        if (node.range) {\n\t            comment.range = node.range;\n\t        }\n\t        if (node.loc) {\n\t            comment.loc = node.loc;\n\t        }\n\t        this.comments.push(comment);\n\t        if (this.attach) {\n\t            var entry = {\n\t                comment: {\n\t                    type: type,\n\t                    value: node.value,\n\t                    range: [metadata.start.offset, metadata.end.offset]\n\t                },\n\t                start: metadata.start.offset\n\t            };\n\t            if (node.loc) {\n\t                entry.comment.loc = node.loc;\n\t            }\n\t            node.type = type;\n\t            this.leading.push(entry);\n\t            this.trailing.push(entry);\n\t        }\n\t    };\n\t    CommentHandler.prototype.visit = function (node, metadata) {\n\t        if (node.type === 'LineComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (node.type === 'BlockComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (this.attach) {\n\t            this.visitNode(node, metadata);\n\t        }\n\t    };\n\t    return CommentHandler;\n\t}());\n\texports.CommentHandler = CommentHandler;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.Syntax = {\n\t    AssignmentExpression: 'AssignmentExpression',\n\t    AssignmentPattern: 'AssignmentPattern',\n\t    ArrayExpression: 'ArrayExpression',\n\t    ArrayPattern: 'ArrayPattern',\n\t    ArrowFunctionExpression: 'ArrowFunctionExpression',\n\t    AwaitExpression: 'AwaitExpression',\n\t    BlockStatement: 'BlockStatement',\n\t    BinaryExpression: 'BinaryExpression',\n\t    BreakStatement: 'BreakStatement',\n\t    CallExpression: 'CallExpression',\n\t    CatchClause: 'CatchClause',\n\t    ClassBody: 'ClassBody',\n\t    ClassDeclaration: 'ClassDeclaration',\n\t    ClassExpression: 'ClassExpression',\n\t    ConditionalExpression: 'ConditionalExpression',\n\t    ContinueStatement: 'ContinueStatement',\n\t    DoWhileStatement: 'DoWhileStatement',\n\t    DebuggerStatement: 'DebuggerStatement',\n\t    EmptyStatement: 'EmptyStatement',\n\t    ExportAllDeclaration: 'ExportAllDeclaration',\n\t    ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n\t    ExportNamedDeclaration: 'ExportNamedDeclaration',\n\t    ExportSpecifier: 'ExportSpecifier',\n\t    ExpressionStatement: 'ExpressionStatement',\n\t    ForStatement: 'ForStatement',\n\t    ForOfStatement: 'ForOfStatement',\n\t    ForInStatement: 'ForInStatement',\n\t    FunctionDeclaration: 'FunctionDeclaration',\n\t    FunctionExpression: 'FunctionExpression',\n\t    Identifier: 'Identifier',\n\t    IfStatement: 'IfStatement',\n\t    ImportDeclaration: 'ImportDeclaration',\n\t    ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n\t    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n\t    ImportSpecifier: 'ImportSpecifier',\n\t    Literal: 'Literal',\n\t    LabeledStatement: 'LabeledStatement',\n\t    LogicalExpression: 'LogicalExpression',\n\t    MemberExpression: 'MemberExpression',\n\t    MetaProperty: 'MetaProperty',\n\t    MethodDefinition: 'MethodDefinition',\n\t    NewExpression: 'NewExpression',\n\t    ObjectExpression: 'ObjectExpression',\n\t    ObjectPattern: 'ObjectPattern',\n\t    Program: 'Program',\n\t    Property: 'Property',\n\t    RestElement: 'RestElement',\n\t    ReturnStatement: 'ReturnStatement',\n\t    SequenceExpression: 'SequenceExpression',\n\t    SpreadElement: 'SpreadElement',\n\t    Super: 'Super',\n\t    SwitchCase: 'SwitchCase',\n\t    SwitchStatement: 'SwitchStatement',\n\t    TaggedTemplateExpression: 'TaggedTemplateExpression',\n\t    TemplateElement: 'TemplateElement',\n\t    TemplateLiteral: 'TemplateLiteral',\n\t    ThisExpression: 'ThisExpression',\n\t    ThrowStatement: 'ThrowStatement',\n\t    TryStatement: 'TryStatement',\n\t    UnaryExpression: 'UnaryExpression',\n\t    UpdateExpression: 'UpdateExpression',\n\t    VariableDeclaration: 'VariableDeclaration',\n\t    VariableDeclarator: 'VariableDeclarator',\n\t    WhileStatement: 'WhileStatement',\n\t    WithStatement: 'WithStatement',\n\t    YieldExpression: 'YieldExpression'\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n/* istanbul ignore next */\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar character_1 = __webpack_require__(4);\n\tvar JSXNode = __webpack_require__(5);\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\tvar Node = __webpack_require__(7);\n\tvar parser_1 = __webpack_require__(8);\n\tvar token_1 = __webpack_require__(13);\n\tvar xhtml_entities_1 = __webpack_require__(14);\n\ttoken_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';\n\ttoken_1.TokenName[101 /* Text */] = 'JSXText';\n\t// Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\n\tfunction getQualifiedElementName(elementName) {\n\t    var qualifiedName;\n\t    switch (elementName.type) {\n\t        case jsx_syntax_1.JSXSyntax.JSXIdentifier:\n\t            var id = elementName;\n\t            qualifiedName = id.name;\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:\n\t            var ns = elementName;\n\t            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +\n\t                getQualifiedElementName(ns.name);\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:\n\t            var expr = elementName;\n\t            qualifiedName = getQualifiedElementName(expr.object) + '.' +\n\t                getQualifiedElementName(expr.property);\n\t            break;\n\t        /* istanbul ignore next */\n\t        default:\n\t            break;\n\t    }\n\t    return qualifiedName;\n\t}\n\tvar JSXParser = (function (_super) {\n\t    __extends(JSXParser, _super);\n\t    function JSXParser(code, options, delegate) {\n\t        return _super.call(this, code, options, delegate) || this;\n\t    }\n\t    JSXParser.prototype.parsePrimaryExpression = function () {\n\t        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\n\t    };\n\t    JSXParser.prototype.startJSX = function () {\n\t        // Unwind the scanner before the lookahead token.\n\t        this.scanner.index = this.startMarker.index;\n\t        this.scanner.lineNumber = this.startMarker.line;\n\t        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\n\t    };\n\t    JSXParser.prototype.finishJSX = function () {\n\t        // Prime the next lookahead.\n\t        this.nextToken();\n\t    };\n\t    JSXParser.prototype.reenterJSX = function () {\n\t        this.startJSX();\n\t        this.expectJSX('}');\n\t        // Pop the closing '}' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t    };\n\t    JSXParser.prototype.createJSXNode = function () {\n\t        this.collectComments();\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.createJSXChildNode = function () {\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.scanXHTMLEntity = function (quote) {\n\t        var result = '&';\n\t        var valid = true;\n\t        var terminated = false;\n\t        var numeric = false;\n\t        var hex = false;\n\t        while (!this.scanner.eof() && valid && !terminated) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === quote) {\n\t                break;\n\t            }\n\t            terminated = (ch === ';');\n\t            result += ch;\n\t            ++this.scanner.index;\n\t            if (!terminated) {\n\t                switch (result.length) {\n\t                    case 2:\n\t                        // e.g. '&#123;'\n\t                        numeric = (ch === '#');\n\t                        break;\n\t                    case 3:\n\t                        if (numeric) {\n\t                            // e.g. '&#x41;'\n\t                            hex = (ch === 'x');\n\t                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\n\t                            numeric = numeric && !hex;\n\t                        }\n\t                        break;\n\t                    default:\n\t                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\n\t                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t        if (valid && terminated && result.length > 2) {\n\t            // e.g. '&#x41;' becomes just '#x41'\n\t            var str = result.substr(1, result.length - 2);\n\t            if (numeric && str.length > 1) {\n\t                result = String.fromCharCode(parseInt(str.substr(1), 10));\n\t            }\n\t            else if (hex && str.length > 2) {\n\t                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));\n\t            }\n\t            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\n\t                result = xhtml_entities_1.XHTMLEntities[str];\n\t            }\n\t        }\n\t        return result;\n\t    };\n\t    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\n\t    JSXParser.prototype.lexJSX = function () {\n\t        var cp = this.scanner.source.charCodeAt(this.scanner.index);\n\t        // < > / : = { }\n\t        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\n\t            var value = this.scanner.source[this.scanner.index++];\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index - 1,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // \" '\n\t        if (cp === 34 || cp === 39) {\n\t            var start = this.scanner.index;\n\t            var quote = this.scanner.source[this.scanner.index++];\n\t            var str = '';\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source[this.scanner.index++];\n\t                if (ch === quote) {\n\t                    break;\n\t                }\n\t                else if (ch === '&') {\n\t                    str += this.scanXHTMLEntity(quote);\n\t                }\n\t                else {\n\t                    str += ch;\n\t                }\n\t            }\n\t            return {\n\t                type: 8 /* StringLiteral */,\n\t                value: str,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // ... or .\n\t        if (cp === 46) {\n\t            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\n\t            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\n\t            var value = (n1 === 46 && n2 === 46) ? '...' : '.';\n\t            var start = this.scanner.index;\n\t            this.scanner.index += value.length;\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // `\n\t        if (cp === 96) {\n\t            // Only placeholder, since it will be rescanned as a real assignment expression.\n\t            return {\n\t                type: 10 /* Template */,\n\t                value: '',\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // Identifer can not contain backslash (char code 92).\n\t        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {\n\t            var start = this.scanner.index;\n\t            ++this.scanner.index;\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source.charCodeAt(this.scanner.index);\n\t                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {\n\t                    ++this.scanner.index;\n\t                }\n\t                else if (ch === 45) {\n\t                    // Hyphen (char code 45) can be part of an identifier.\n\t                    ++this.scanner.index;\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            var id = this.scanner.source.slice(start, this.scanner.index);\n\t            return {\n\t                type: 100 /* Identifier */,\n\t                value: id,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        return this.scanner.lex();\n\t    };\n\t    JSXParser.prototype.nextJSXToken = function () {\n\t        this.collectComments();\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = this.lexJSX();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        if (this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.nextJSXText = function () {\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var start = this.scanner.index;\n\t        var text = '';\n\t        while (!this.scanner.eof()) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === '{' || ch === '<') {\n\t                break;\n\t            }\n\t            ++this.scanner.index;\n\t            text += ch;\n\t            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.scanner.lineNumber;\n\t                if (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\n\t                    ++this.scanner.index;\n\t                }\n\t                this.scanner.lineStart = this.scanner.index;\n\t            }\n\t        }\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = {\n\t            type: 101 /* Text */,\n\t            value: text,\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: this.scanner.lineStart,\n\t            start: start,\n\t            end: this.scanner.index\n\t        };\n\t        if ((text.length > 0) && this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.peekJSXToken = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.lexJSX();\n\t        this.scanner.restoreState(state);\n\t        return next;\n\t    };\n\t    // Expect the next JSX token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    JSXParser.prototype.expectJSX = function (value) {\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next JSX token matches the specified punctuator.\n\t    JSXParser.prototype.matchJSX = function (value) {\n\t        var next = this.peekJSXToken();\n\t        return next.type === 7 /* Punctuator */ && next.value === value;\n\t    };\n\t    JSXParser.prototype.parseJSXIdentifier = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 100 /* Identifier */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));\n\t    };\n\t    JSXParser.prototype.parseJSXElementName = function () {\n\t        var node = this.createJSXNode();\n\t        var elementName = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = elementName;\n\t            this.expectJSX(':');\n\t            var name_1 = this.parseJSXIdentifier();\n\t            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\n\t        }\n\t        else if (this.matchJSX('.')) {\n\t            while (this.matchJSX('.')) {\n\t                var object = elementName;\n\t                this.expectJSX('.');\n\t                var property = this.parseJSXIdentifier();\n\t                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\n\t            }\n\t        }\n\t        return elementName;\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeName = function () {\n\t        var node = this.createJSXNode();\n\t        var attributeName;\n\t        var identifier = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = identifier;\n\t            this.expectJSX(':');\n\t            var name_2 = this.parseJSXIdentifier();\n\t            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\n\t        }\n\t        else {\n\t            attributeName = identifier;\n\t        }\n\t        return attributeName;\n\t    };\n\t    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 8 /* StringLiteral */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.finishJSX();\n\t        if (this.match('}')) {\n\t            this.tolerateError('JSX attributes must only be assigned a non-empty expression');\n\t        }\n\t        var expression = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeValue = function () {\n\t        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :\n\t            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\n\t    };\n\t    JSXParser.prototype.parseJSXNameValueAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var name = this.parseJSXAttributeName();\n\t        var value = null;\n\t        if (this.matchJSX('=')) {\n\t            this.expectJSX('=');\n\t            value = this.parseJSXAttributeValue();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXAttribute(name, value));\n\t    };\n\t    JSXParser.prototype.parseJSXSpreadAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.expectJSX('...');\n\t        this.finishJSX();\n\t        var argument = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributes = function () {\n\t        var attributes = [];\n\t        while (!this.matchJSX('/') && !this.matchJSX('>')) {\n\t            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :\n\t                this.parseJSXNameValueAttribute();\n\t            attributes.push(attribute);\n\t        }\n\t        return attributes;\n\t    };\n\t    JSXParser.prototype.parseJSXOpeningElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXBoundaryElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        if (this.matchJSX('/')) {\n\t            this.expectJSX('/');\n\t            var name_3 = this.parseJSXElementName();\n\t            this.expectJSX('>');\n\t            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));\n\t        }\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXEmptyExpression = function () {\n\t        var node = this.createJSXChildNode();\n\t        this.collectComments();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        return this.finalize(node, new JSXNode.JSXEmptyExpression());\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionContainer = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        var expression;\n\t        if (this.matchJSX('}')) {\n\t            expression = this.parseJSXEmptyExpression();\n\t            this.expectJSX('}');\n\t        }\n\t        else {\n\t            this.finishJSX();\n\t            expression = this.parseAssignmentExpression();\n\t            this.reenterJSX();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXChildren = function () {\n\t        var children = [];\n\t        while (!this.scanner.eof()) {\n\t            var node = this.createJSXChildNode();\n\t            var token = this.nextJSXText();\n\t            if (token.start < token.end) {\n\t                var raw = this.getTokenRaw(token);\n\t                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\n\t                children.push(child);\n\t            }\n\t            if (this.scanner.source[this.scanner.index] === '{') {\n\t                var container = this.parseJSXExpressionContainer();\n\t                children.push(container);\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return children;\n\t    };\n\t    JSXParser.prototype.parseComplexJSXElement = function (el) {\n\t        var stack = [];\n\t        while (!this.scanner.eof()) {\n\t            el.children = el.children.concat(this.parseJSXChildren());\n\t            var node = this.createJSXChildNode();\n\t            var element = this.parseJSXBoundaryElement();\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\n\t                var opening = element;\n\t                if (opening.selfClosing) {\n\t                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\n\t                    el.children.push(child);\n\t                }\n\t                else {\n\t                    stack.push(el);\n\t                    el = { node: node, opening: opening, closing: null, children: [] };\n\t                }\n\t            }\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\n\t                el.closing = element;\n\t                var open_1 = getQualifiedElementName(el.opening.name);\n\t                var close_1 = getQualifiedElementName(el.closing.name);\n\t                if (open_1 !== close_1) {\n\t                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\n\t                }\n\t                if (stack.length > 0) {\n\t                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\n\t                    el = stack[stack.length - 1];\n\t                    el.children.push(child);\n\t                    stack.pop();\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return el;\n\t    };\n\t    JSXParser.prototype.parseJSXElement = function () {\n\t        var node = this.createJSXNode();\n\t        var opening = this.parseJSXOpeningElement();\n\t        var children = [];\n\t        var closing = null;\n\t        if (!opening.selfClosing) {\n\t            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });\n\t            children = el.children;\n\t            closing = el.closing;\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\n\t    };\n\t    JSXParser.prototype.parseJSXRoot = function () {\n\t        // Pop the opening '<' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t        this.startJSX();\n\t        var element = this.parseJSXElement();\n\t        this.finishJSX();\n\t        return element;\n\t    };\n\t    JSXParser.prototype.isStartOfExpression = function () {\n\t        return _super.prototype.isStartOfExpression.call(this) || this.match('<');\n\t    };\n\t    return JSXParser;\n\t}(parser_1.Parser));\n\texports.JSXParser = JSXParser;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// See also tools/generate-unicode-regex.js.\n\tvar Regex = {\n\t    // Unicode v8.0.0 NonAsciiIdentifierStart:\n\t    NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n\t    // Unicode v8.0.0 NonAsciiIdentifierPart:\n\t    NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n\t};\n\texports.Character = {\n\t    /* tslint:disable:no-bitwise */\n\t    fromCodePoint: function (cp) {\n\t        return (cp < 0x10000) ? String.fromCharCode(cp) :\n\t            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +\n\t                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-white-space\n\t    isWhiteSpace: function (cp) {\n\t        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||\n\t            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-line-terminators\n\t    isLineTerminator: function (cp) {\n\t        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    isIdentifierStart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    isIdentifierPart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    isDecimalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39); // 0..9\n\t    },\n\t    isHexDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp >= 0x41 && cp <= 0x46) ||\n\t            (cp >= 0x61 && cp <= 0x66); // a..f\n\t    },\n\t    isOctalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x37); // 0..7\n\t    }\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\t/* tslint:disable:max-classes-per-file */\n\tvar JSXClosingElement = (function () {\n\t    function JSXClosingElement(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\n\t        this.name = name;\n\t    }\n\t    return JSXClosingElement;\n\t}());\n\texports.JSXClosingElement = JSXClosingElement;\n\tvar JSXElement = (function () {\n\t    function JSXElement(openingElement, children, closingElement) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXElement;\n\t        this.openingElement = openingElement;\n\t        this.children = children;\n\t        this.closingElement = closingElement;\n\t    }\n\t    return JSXElement;\n\t}());\n\texports.JSXElement = JSXElement;\n\tvar JSXEmptyExpression = (function () {\n\t    function JSXEmptyExpression() {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\n\t    }\n\t    return JSXEmptyExpression;\n\t}());\n\texports.JSXEmptyExpression = JSXEmptyExpression;\n\tvar JSXExpressionContainer = (function () {\n\t    function JSXExpressionContainer(expression) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\n\t        this.expression = expression;\n\t    }\n\t    return JSXExpressionContainer;\n\t}());\n\texports.JSXExpressionContainer = JSXExpressionContainer;\n\tvar JSXIdentifier = (function () {\n\t    function JSXIdentifier(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\n\t        this.name = name;\n\t    }\n\t    return JSXIdentifier;\n\t}());\n\texports.JSXIdentifier = JSXIdentifier;\n\tvar JSXMemberExpression = (function () {\n\t    function JSXMemberExpression(object, property) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return JSXMemberExpression;\n\t}());\n\texports.JSXMemberExpression = JSXMemberExpression;\n\tvar JSXAttribute = (function () {\n\t    function JSXAttribute(name, value) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\n\t        this.name = name;\n\t        this.value = value;\n\t    }\n\t    return JSXAttribute;\n\t}());\n\texports.JSXAttribute = JSXAttribute;\n\tvar JSXNamespacedName = (function () {\n\t    function JSXNamespacedName(namespace, name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\n\t        this.namespace = namespace;\n\t        this.name = name;\n\t    }\n\t    return JSXNamespacedName;\n\t}());\n\texports.JSXNamespacedName = JSXNamespacedName;\n\tvar JSXOpeningElement = (function () {\n\t    function JSXOpeningElement(name, selfClosing, attributes) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\n\t        this.name = name;\n\t        this.selfClosing = selfClosing;\n\t        this.attributes = attributes;\n\t    }\n\t    return JSXOpeningElement;\n\t}());\n\texports.JSXOpeningElement = JSXOpeningElement;\n\tvar JSXSpreadAttribute = (function () {\n\t    function JSXSpreadAttribute(argument) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\n\t        this.argument = argument;\n\t    }\n\t    return JSXSpreadAttribute;\n\t}());\n\texports.JSXSpreadAttribute = JSXSpreadAttribute;\n\tvar JSXText = (function () {\n\t    function JSXText(value, raw) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXText;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return JSXText;\n\t}());\n\texports.JSXText = JSXText;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.JSXSyntax = {\n\t    JSXAttribute: 'JSXAttribute',\n\t    JSXClosingElement: 'JSXClosingElement',\n\t    JSXElement: 'JSXElement',\n\t    JSXEmptyExpression: 'JSXEmptyExpression',\n\t    JSXExpressionContainer: 'JSXExpressionContainer',\n\t    JSXIdentifier: 'JSXIdentifier',\n\t    JSXMemberExpression: 'JSXMemberExpression',\n\t    JSXNamespacedName: 'JSXNamespacedName',\n\t    JSXOpeningElement: 'JSXOpeningElement',\n\t    JSXSpreadAttribute: 'JSXSpreadAttribute',\n\t    JSXText: 'JSXText'\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\t/* tslint:disable:max-classes-per-file */\n\tvar ArrayExpression = (function () {\n\t    function ArrayExpression(elements) {\n\t        this.type = syntax_1.Syntax.ArrayExpression;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayExpression;\n\t}());\n\texports.ArrayExpression = ArrayExpression;\n\tvar ArrayPattern = (function () {\n\t    function ArrayPattern(elements) {\n\t        this.type = syntax_1.Syntax.ArrayPattern;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayPattern;\n\t}());\n\texports.ArrayPattern = ArrayPattern;\n\tvar ArrowFunctionExpression = (function () {\n\t    function ArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = false;\n\t    }\n\t    return ArrowFunctionExpression;\n\t}());\n\texports.ArrowFunctionExpression = ArrowFunctionExpression;\n\tvar AssignmentExpression = (function () {\n\t    function AssignmentExpression(operator, left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentExpression;\n\t}());\n\texports.AssignmentExpression = AssignmentExpression;\n\tvar AssignmentPattern = (function () {\n\t    function AssignmentPattern(left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentPattern;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentPattern;\n\t}());\n\texports.AssignmentPattern = AssignmentPattern;\n\tvar AsyncArrowFunctionExpression = (function () {\n\t    function AsyncArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = true;\n\t    }\n\t    return AsyncArrowFunctionExpression;\n\t}());\n\texports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\n\tvar AsyncFunctionDeclaration = (function () {\n\t    function AsyncFunctionDeclaration(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionDeclaration;\n\t}());\n\texports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\n\tvar AsyncFunctionExpression = (function () {\n\t    function AsyncFunctionExpression(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionExpression;\n\t}());\n\texports.AsyncFunctionExpression = AsyncFunctionExpression;\n\tvar AwaitExpression = (function () {\n\t    function AwaitExpression(argument) {\n\t        this.type = syntax_1.Syntax.AwaitExpression;\n\t        this.argument = argument;\n\t    }\n\t    return AwaitExpression;\n\t}());\n\texports.AwaitExpression = AwaitExpression;\n\tvar BinaryExpression = (function () {\n\t    function BinaryExpression(operator, left, right) {\n\t        var logical = (operator === '||' || operator === '&&');\n\t        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return BinaryExpression;\n\t}());\n\texports.BinaryExpression = BinaryExpression;\n\tvar BlockStatement = (function () {\n\t    function BlockStatement(body) {\n\t        this.type = syntax_1.Syntax.BlockStatement;\n\t        this.body = body;\n\t    }\n\t    return BlockStatement;\n\t}());\n\texports.BlockStatement = BlockStatement;\n\tvar BreakStatement = (function () {\n\t    function BreakStatement(label) {\n\t        this.type = syntax_1.Syntax.BreakStatement;\n\t        this.label = label;\n\t    }\n\t    return BreakStatement;\n\t}());\n\texports.BreakStatement = BreakStatement;\n\tvar CallExpression = (function () {\n\t    function CallExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.CallExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return CallExpression;\n\t}());\n\texports.CallExpression = CallExpression;\n\tvar CatchClause = (function () {\n\t    function CatchClause(param, body) {\n\t        this.type = syntax_1.Syntax.CatchClause;\n\t        this.param = param;\n\t        this.body = body;\n\t    }\n\t    return CatchClause;\n\t}());\n\texports.CatchClause = CatchClause;\n\tvar ClassBody = (function () {\n\t    function ClassBody(body) {\n\t        this.type = syntax_1.Syntax.ClassBody;\n\t        this.body = body;\n\t    }\n\t    return ClassBody;\n\t}());\n\texports.ClassBody = ClassBody;\n\tvar ClassDeclaration = (function () {\n\t    function ClassDeclaration(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassDeclaration;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassDeclaration;\n\t}());\n\texports.ClassDeclaration = ClassDeclaration;\n\tvar ClassExpression = (function () {\n\t    function ClassExpression(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassExpression;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassExpression;\n\t}());\n\texports.ClassExpression = ClassExpression;\n\tvar ComputedMemberExpression = (function () {\n\t    function ComputedMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = true;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return ComputedMemberExpression;\n\t}());\n\texports.ComputedMemberExpression = ComputedMemberExpression;\n\tvar ConditionalExpression = (function () {\n\t    function ConditionalExpression(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.ConditionalExpression;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return ConditionalExpression;\n\t}());\n\texports.ConditionalExpression = ConditionalExpression;\n\tvar ContinueStatement = (function () {\n\t    function ContinueStatement(label) {\n\t        this.type = syntax_1.Syntax.ContinueStatement;\n\t        this.label = label;\n\t    }\n\t    return ContinueStatement;\n\t}());\n\texports.ContinueStatement = ContinueStatement;\n\tvar DebuggerStatement = (function () {\n\t    function DebuggerStatement() {\n\t        this.type = syntax_1.Syntax.DebuggerStatement;\n\t    }\n\t    return DebuggerStatement;\n\t}());\n\texports.DebuggerStatement = DebuggerStatement;\n\tvar Directive = (function () {\n\t    function Directive(expression, directive) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t        this.directive = directive;\n\t    }\n\t    return Directive;\n\t}());\n\texports.Directive = Directive;\n\tvar DoWhileStatement = (function () {\n\t    function DoWhileStatement(body, test) {\n\t        this.type = syntax_1.Syntax.DoWhileStatement;\n\t        this.body = body;\n\t        this.test = test;\n\t    }\n\t    return DoWhileStatement;\n\t}());\n\texports.DoWhileStatement = DoWhileStatement;\n\tvar EmptyStatement = (function () {\n\t    function EmptyStatement() {\n\t        this.type = syntax_1.Syntax.EmptyStatement;\n\t    }\n\t    return EmptyStatement;\n\t}());\n\texports.EmptyStatement = EmptyStatement;\n\tvar ExportAllDeclaration = (function () {\n\t    function ExportAllDeclaration(source) {\n\t        this.type = syntax_1.Syntax.ExportAllDeclaration;\n\t        this.source = source;\n\t    }\n\t    return ExportAllDeclaration;\n\t}());\n\texports.ExportAllDeclaration = ExportAllDeclaration;\n\tvar ExportDefaultDeclaration = (function () {\n\t    function ExportDefaultDeclaration(declaration) {\n\t        this.type = syntax_1.Syntax.ExportDefaultDeclaration;\n\t        this.declaration = declaration;\n\t    }\n\t    return ExportDefaultDeclaration;\n\t}());\n\texports.ExportDefaultDeclaration = ExportDefaultDeclaration;\n\tvar ExportNamedDeclaration = (function () {\n\t    function ExportNamedDeclaration(declaration, specifiers, source) {\n\t        this.type = syntax_1.Syntax.ExportNamedDeclaration;\n\t        this.declaration = declaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ExportNamedDeclaration;\n\t}());\n\texports.ExportNamedDeclaration = ExportNamedDeclaration;\n\tvar ExportSpecifier = (function () {\n\t    function ExportSpecifier(local, exported) {\n\t        this.type = syntax_1.Syntax.ExportSpecifier;\n\t        this.exported = exported;\n\t        this.local = local;\n\t    }\n\t    return ExportSpecifier;\n\t}());\n\texports.ExportSpecifier = ExportSpecifier;\n\tvar ExpressionStatement = (function () {\n\t    function ExpressionStatement(expression) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t    }\n\t    return ExpressionStatement;\n\t}());\n\texports.ExpressionStatement = ExpressionStatement;\n\tvar ForInStatement = (function () {\n\t    function ForInStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForInStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t        this.each = false;\n\t    }\n\t    return ForInStatement;\n\t}());\n\texports.ForInStatement = ForInStatement;\n\tvar ForOfStatement = (function () {\n\t    function ForOfStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForOfStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t    }\n\t    return ForOfStatement;\n\t}());\n\texports.ForOfStatement = ForOfStatement;\n\tvar ForStatement = (function () {\n\t    function ForStatement(init, test, update, body) {\n\t        this.type = syntax_1.Syntax.ForStatement;\n\t        this.init = init;\n\t        this.test = test;\n\t        this.update = update;\n\t        this.body = body;\n\t    }\n\t    return ForStatement;\n\t}());\n\texports.ForStatement = ForStatement;\n\tvar FunctionDeclaration = (function () {\n\t    function FunctionDeclaration(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionDeclaration;\n\t}());\n\texports.FunctionDeclaration = FunctionDeclaration;\n\tvar FunctionExpression = (function () {\n\t    function FunctionExpression(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionExpression;\n\t}());\n\texports.FunctionExpression = FunctionExpression;\n\tvar Identifier = (function () {\n\t    function Identifier(name) {\n\t        this.type = syntax_1.Syntax.Identifier;\n\t        this.name = name;\n\t    }\n\t    return Identifier;\n\t}());\n\texports.Identifier = Identifier;\n\tvar IfStatement = (function () {\n\t    function IfStatement(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.IfStatement;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return IfStatement;\n\t}());\n\texports.IfStatement = IfStatement;\n\tvar ImportDeclaration = (function () {\n\t    function ImportDeclaration(specifiers, source) {\n\t        this.type = syntax_1.Syntax.ImportDeclaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ImportDeclaration;\n\t}());\n\texports.ImportDeclaration = ImportDeclaration;\n\tvar ImportDefaultSpecifier = (function () {\n\t    function ImportDefaultSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportDefaultSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportDefaultSpecifier;\n\t}());\n\texports.ImportDefaultSpecifier = ImportDefaultSpecifier;\n\tvar ImportNamespaceSpecifier = (function () {\n\t    function ImportNamespaceSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportNamespaceSpecifier;\n\t}());\n\texports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n\tvar ImportSpecifier = (function () {\n\t    function ImportSpecifier(local, imported) {\n\t        this.type = syntax_1.Syntax.ImportSpecifier;\n\t        this.local = local;\n\t        this.imported = imported;\n\t    }\n\t    return ImportSpecifier;\n\t}());\n\texports.ImportSpecifier = ImportSpecifier;\n\tvar LabeledStatement = (function () {\n\t    function LabeledStatement(label, body) {\n\t        this.type = syntax_1.Syntax.LabeledStatement;\n\t        this.label = label;\n\t        this.body = body;\n\t    }\n\t    return LabeledStatement;\n\t}());\n\texports.LabeledStatement = LabeledStatement;\n\tvar Literal = (function () {\n\t    function Literal(value, raw) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return Literal;\n\t}());\n\texports.Literal = Literal;\n\tvar MetaProperty = (function () {\n\t    function MetaProperty(meta, property) {\n\t        this.type = syntax_1.Syntax.MetaProperty;\n\t        this.meta = meta;\n\t        this.property = property;\n\t    }\n\t    return MetaProperty;\n\t}());\n\texports.MetaProperty = MetaProperty;\n\tvar MethodDefinition = (function () {\n\t    function MethodDefinition(key, computed, value, kind, isStatic) {\n\t        this.type = syntax_1.Syntax.MethodDefinition;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.static = isStatic;\n\t    }\n\t    return MethodDefinition;\n\t}());\n\texports.MethodDefinition = MethodDefinition;\n\tvar Module = (function () {\n\t    function Module(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'module';\n\t    }\n\t    return Module;\n\t}());\n\texports.Module = Module;\n\tvar NewExpression = (function () {\n\t    function NewExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.NewExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return NewExpression;\n\t}());\n\texports.NewExpression = NewExpression;\n\tvar ObjectExpression = (function () {\n\t    function ObjectExpression(properties) {\n\t        this.type = syntax_1.Syntax.ObjectExpression;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectExpression;\n\t}());\n\texports.ObjectExpression = ObjectExpression;\n\tvar ObjectPattern = (function () {\n\t    function ObjectPattern(properties) {\n\t        this.type = syntax_1.Syntax.ObjectPattern;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectPattern;\n\t}());\n\texports.ObjectPattern = ObjectPattern;\n\tvar Property = (function () {\n\t    function Property(kind, key, computed, value, method, shorthand) {\n\t        this.type = syntax_1.Syntax.Property;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.method = method;\n\t        this.shorthand = shorthand;\n\t    }\n\t    return Property;\n\t}());\n\texports.Property = Property;\n\tvar RegexLiteral = (function () {\n\t    function RegexLiteral(value, raw, pattern, flags) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t        this.regex = { pattern: pattern, flags: flags };\n\t    }\n\t    return RegexLiteral;\n\t}());\n\texports.RegexLiteral = RegexLiteral;\n\tvar RestElement = (function () {\n\t    function RestElement(argument) {\n\t        this.type = syntax_1.Syntax.RestElement;\n\t        this.argument = argument;\n\t    }\n\t    return RestElement;\n\t}());\n\texports.RestElement = RestElement;\n\tvar ReturnStatement = (function () {\n\t    function ReturnStatement(argument) {\n\t        this.type = syntax_1.Syntax.ReturnStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ReturnStatement;\n\t}());\n\texports.ReturnStatement = ReturnStatement;\n\tvar Script = (function () {\n\t    function Script(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'script';\n\t    }\n\t    return Script;\n\t}());\n\texports.Script = Script;\n\tvar SequenceExpression = (function () {\n\t    function SequenceExpression(expressions) {\n\t        this.type = syntax_1.Syntax.SequenceExpression;\n\t        this.expressions = expressions;\n\t    }\n\t    return SequenceExpression;\n\t}());\n\texports.SequenceExpression = SequenceExpression;\n\tvar SpreadElement = (function () {\n\t    function SpreadElement(argument) {\n\t        this.type = syntax_1.Syntax.SpreadElement;\n\t        this.argument = argument;\n\t    }\n\t    return SpreadElement;\n\t}());\n\texports.SpreadElement = SpreadElement;\n\tvar StaticMemberExpression = (function () {\n\t    function StaticMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = false;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return StaticMemberExpression;\n\t}());\n\texports.StaticMemberExpression = StaticMemberExpression;\n\tvar Super = (function () {\n\t    function Super() {\n\t        this.type = syntax_1.Syntax.Super;\n\t    }\n\t    return Super;\n\t}());\n\texports.Super = Super;\n\tvar SwitchCase = (function () {\n\t    function SwitchCase(test, consequent) {\n\t        this.type = syntax_1.Syntax.SwitchCase;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t    }\n\t    return SwitchCase;\n\t}());\n\texports.SwitchCase = SwitchCase;\n\tvar SwitchStatement = (function () {\n\t    function SwitchStatement(discriminant, cases) {\n\t        this.type = syntax_1.Syntax.SwitchStatement;\n\t        this.discriminant = discriminant;\n\t        this.cases = cases;\n\t    }\n\t    return SwitchStatement;\n\t}());\n\texports.SwitchStatement = SwitchStatement;\n\tvar TaggedTemplateExpression = (function () {\n\t    function TaggedTemplateExpression(tag, quasi) {\n\t        this.type = syntax_1.Syntax.TaggedTemplateExpression;\n\t        this.tag = tag;\n\t        this.quasi = quasi;\n\t    }\n\t    return TaggedTemplateExpression;\n\t}());\n\texports.TaggedTemplateExpression = TaggedTemplateExpression;\n\tvar TemplateElement = (function () {\n\t    function TemplateElement(value, tail) {\n\t        this.type = syntax_1.Syntax.TemplateElement;\n\t        this.value = value;\n\t        this.tail = tail;\n\t    }\n\t    return TemplateElement;\n\t}());\n\texports.TemplateElement = TemplateElement;\n\tvar TemplateLiteral = (function () {\n\t    function TemplateLiteral(quasis, expressions) {\n\t        this.type = syntax_1.Syntax.TemplateLiteral;\n\t        this.quasis = quasis;\n\t        this.expressions = expressions;\n\t    }\n\t    return TemplateLiteral;\n\t}());\n\texports.TemplateLiteral = TemplateLiteral;\n\tvar ThisExpression = (function () {\n\t    function ThisExpression() {\n\t        this.type = syntax_1.Syntax.ThisExpression;\n\t    }\n\t    return ThisExpression;\n\t}());\n\texports.ThisExpression = ThisExpression;\n\tvar ThrowStatement = (function () {\n\t    function ThrowStatement(argument) {\n\t        this.type = syntax_1.Syntax.ThrowStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ThrowStatement;\n\t}());\n\texports.ThrowStatement = ThrowStatement;\n\tvar TryStatement = (function () {\n\t    function TryStatement(block, handler, finalizer) {\n\t        this.type = syntax_1.Syntax.TryStatement;\n\t        this.block = block;\n\t        this.handler = handler;\n\t        this.finalizer = finalizer;\n\t    }\n\t    return TryStatement;\n\t}());\n\texports.TryStatement = TryStatement;\n\tvar UnaryExpression = (function () {\n\t    function UnaryExpression(operator, argument) {\n\t        this.type = syntax_1.Syntax.UnaryExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = true;\n\t    }\n\t    return UnaryExpression;\n\t}());\n\texports.UnaryExpression = UnaryExpression;\n\tvar UpdateExpression = (function () {\n\t    function UpdateExpression(operator, argument, prefix) {\n\t        this.type = syntax_1.Syntax.UpdateExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = prefix;\n\t    }\n\t    return UpdateExpression;\n\t}());\n\texports.UpdateExpression = UpdateExpression;\n\tvar VariableDeclaration = (function () {\n\t    function VariableDeclaration(declarations, kind) {\n\t        this.type = syntax_1.Syntax.VariableDeclaration;\n\t        this.declarations = declarations;\n\t        this.kind = kind;\n\t    }\n\t    return VariableDeclaration;\n\t}());\n\texports.VariableDeclaration = VariableDeclaration;\n\tvar VariableDeclarator = (function () {\n\t    function VariableDeclarator(id, init) {\n\t        this.type = syntax_1.Syntax.VariableDeclarator;\n\t        this.id = id;\n\t        this.init = init;\n\t    }\n\t    return VariableDeclarator;\n\t}());\n\texports.VariableDeclarator = VariableDeclarator;\n\tvar WhileStatement = (function () {\n\t    function WhileStatement(test, body) {\n\t        this.type = syntax_1.Syntax.WhileStatement;\n\t        this.test = test;\n\t        this.body = body;\n\t    }\n\t    return WhileStatement;\n\t}());\n\texports.WhileStatement = WhileStatement;\n\tvar WithStatement = (function () {\n\t    function WithStatement(object, body) {\n\t        this.type = syntax_1.Syntax.WithStatement;\n\t        this.object = object;\n\t        this.body = body;\n\t    }\n\t    return WithStatement;\n\t}());\n\texports.WithStatement = WithStatement;\n\tvar YieldExpression = (function () {\n\t    function YieldExpression(argument, delegate) {\n\t        this.type = syntax_1.Syntax.YieldExpression;\n\t        this.argument = argument;\n\t        this.delegate = delegate;\n\t    }\n\t    return YieldExpression;\n\t}());\n\texports.YieldExpression = YieldExpression;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar messages_1 = __webpack_require__(11);\n\tvar Node = __webpack_require__(7);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar syntax_1 = __webpack_require__(2);\n\tvar token_1 = __webpack_require__(13);\n\tvar ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\n\tvar Parser = (function () {\n\t    function Parser(code, options, delegate) {\n\t        if (options === void 0) { options = {}; }\n\t        this.config = {\n\t            range: (typeof options.range === 'boolean') && options.range,\n\t            loc: (typeof options.loc === 'boolean') && options.loc,\n\t            source: null,\n\t            tokens: (typeof options.tokens === 'boolean') && options.tokens,\n\t            comment: (typeof options.comment === 'boolean') && options.comment,\n\t            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant\n\t        };\n\t        if (this.config.loc && options.source && options.source !== null) {\n\t            this.config.source = String(options.source);\n\t        }\n\t        this.delegate = delegate;\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = this.config.tolerant;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = this.config.comment;\n\t        this.operatorPrecedence = {\n\t            ')': 0,\n\t            ';': 0,\n\t            ',': 0,\n\t            '=': 0,\n\t            ']': 0,\n\t            '||': 1,\n\t            '&&': 2,\n\t            '|': 3,\n\t            '^': 4,\n\t            '&': 5,\n\t            '==': 6,\n\t            '!=': 6,\n\t            '===': 6,\n\t            '!==': 6,\n\t            '<': 7,\n\t            '>': 7,\n\t            '<=': 7,\n\t            '>=': 7,\n\t            '<<': 8,\n\t            '>>': 8,\n\t            '>>>': 8,\n\t            '+': 9,\n\t            '-': 9,\n\t            '*': 11,\n\t            '/': 11,\n\t            '%': 11\n\t        };\n\t        this.lookahead = {\n\t            type: 2 /* EOF */,\n\t            value: '',\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: 0,\n\t            start: 0,\n\t            end: 0\n\t        };\n\t        this.hasLineTerminator = false;\n\t        this.context = {\n\t            isModule: false,\n\t            await: false,\n\t            allowIn: true,\n\t            allowStrictDirective: true,\n\t            allowYield: true,\n\t            firstCoverInitializedNameError: null,\n\t            isAssignmentTarget: false,\n\t            isBindingElement: false,\n\t            inFunctionBody: false,\n\t            inIteration: false,\n\t            inSwitch: false,\n\t            labelSet: {},\n\t            strict: false\n\t        };\n\t        this.tokens = [];\n\t        this.startMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.lastMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.nextToken();\n\t        this.lastMarker = {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    }\n\t    Parser.prototype.throwError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.lastMarker.line;\n\t        var column = this.lastMarker.column + 1;\n\t        throw this.errorHandler.createError(index, line, column, msg);\n\t    };\n\t    Parser.prototype.tolerateError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.scanner.lineNumber;\n\t        var column = this.lastMarker.column + 1;\n\t        this.errorHandler.tolerateError(index, line, column, msg);\n\t    };\n\t    // Throw an exception because of the token.\n\t    Parser.prototype.unexpectedTokenError = function (token, message) {\n\t        var msg = message || messages_1.Messages.UnexpectedToken;\n\t        var value;\n\t        if (token) {\n\t            if (!message) {\n\t                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :\n\t                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :\n\t                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :\n\t                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :\n\t                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :\n\t                                    messages_1.Messages.UnexpectedToken;\n\t                if (token.type === 4 /* Keyword */) {\n\t                    if (this.scanner.isFutureReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.UnexpectedReserved;\n\t                    }\n\t                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.StrictReservedWord;\n\t                    }\n\t                }\n\t            }\n\t            value = token.value;\n\t        }\n\t        else {\n\t            value = 'ILLEGAL';\n\t        }\n\t        msg = msg.replace('%0', value);\n\t        if (token && typeof token.lineNumber === 'number') {\n\t            var index = token.start;\n\t            var line = token.lineNumber;\n\t            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\n\t            var column = token.start - lastMarkerLineStart + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t        else {\n\t            var index = this.lastMarker.index;\n\t            var line = this.lastMarker.line;\n\t            var column = this.lastMarker.column + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t    };\n\t    Parser.prototype.throwUnexpectedToken = function (token, message) {\n\t        throw this.unexpectedTokenError(token, message);\n\t    };\n\t    Parser.prototype.tolerateUnexpectedToken = function (token, message) {\n\t        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\n\t    };\n\t    Parser.prototype.collectComments = function () {\n\t        if (!this.config.comment) {\n\t            this.scanner.scanComments();\n\t        }\n\t        else {\n\t            var comments = this.scanner.scanComments();\n\t            if (comments.length > 0 && this.delegate) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var node = void 0;\n\t                    node = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: this.scanner.source.slice(e.slice[0], e.slice[1])\n\t                    };\n\t                    if (this.config.range) {\n\t                        node.range = e.range;\n\t                    }\n\t                    if (this.config.loc) {\n\t                        node.loc = e.loc;\n\t                    }\n\t                    var metadata = {\n\t                        start: {\n\t                            line: e.loc.start.line,\n\t                            column: e.loc.start.column,\n\t                            offset: e.range[0]\n\t                        },\n\t                        end: {\n\t                            line: e.loc.end.line,\n\t                            column: e.loc.end.column,\n\t                            offset: e.range[1]\n\t                        }\n\t                    };\n\t                    this.delegate(node, metadata);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    // From internal representation to an external structure\n\t    Parser.prototype.getTokenRaw = function (token) {\n\t        return this.scanner.source.slice(token.start, token.end);\n\t    };\n\t    Parser.prototype.convertToken = function (token) {\n\t        var t = {\n\t            type: token_1.TokenName[token.type],\n\t            value: this.getTokenRaw(token)\n\t        };\n\t        if (this.config.range) {\n\t            t.range = [token.start, token.end];\n\t        }\n\t        if (this.config.loc) {\n\t            t.loc = {\n\t                start: {\n\t                    line: this.startMarker.line,\n\t                    column: this.startMarker.column\n\t                },\n\t                end: {\n\t                    line: this.scanner.lineNumber,\n\t                    column: this.scanner.index - this.scanner.lineStart\n\t                }\n\t            };\n\t        }\n\t        if (token.type === 9 /* RegularExpression */) {\n\t            var pattern = token.pattern;\n\t            var flags = token.flags;\n\t            t.regex = { pattern: pattern, flags: flags };\n\t        }\n\t        return t;\n\t    };\n\t    Parser.prototype.nextToken = function () {\n\t        var token = this.lookahead;\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        this.collectComments();\n\t        if (this.scanner.index !== this.startMarker.index) {\n\t            this.startMarker.index = this.scanner.index;\n\t            this.startMarker.line = this.scanner.lineNumber;\n\t            this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        }\n\t        var next = this.scanner.lex();\n\t        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);\n\t        if (next && this.context.strict && next.type === 3 /* Identifier */) {\n\t            if (this.scanner.isStrictModeReservedWord(next.value)) {\n\t                next.type = 4 /* Keyword */;\n\t            }\n\t        }\n\t        this.lookahead = next;\n\t        if (this.config.tokens && next.type !== 2 /* EOF */) {\n\t            this.tokens.push(this.convertToken(next));\n\t        }\n\t        return token;\n\t    };\n\t    Parser.prototype.nextRegexToken = function () {\n\t        this.collectComments();\n\t        var token = this.scanner.scanRegExp();\n\t        if (this.config.tokens) {\n\t            // Pop the previous token, '/' or '/='\n\t            // This is added from the lookahead token.\n\t            this.tokens.pop();\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        // Prime the next lookahead.\n\t        this.lookahead = token;\n\t        this.nextToken();\n\t        return token;\n\t    };\n\t    Parser.prototype.createNode = function () {\n\t        return {\n\t            index: this.startMarker.index,\n\t            line: this.startMarker.line,\n\t            column: this.startMarker.column\n\t        };\n\t    };\n\t    Parser.prototype.startNode = function (token, lastLineStart) {\n\t        if (lastLineStart === void 0) { lastLineStart = 0; }\n\t        var column = token.start - token.lineStart;\n\t        var line = token.lineNumber;\n\t        if (column < 0) {\n\t            column += lastLineStart;\n\t            line--;\n\t        }\n\t        return {\n\t            index: token.start,\n\t            line: line,\n\t            column: column\n\t        };\n\t    };\n\t    Parser.prototype.finalize = function (marker, node) {\n\t        if (this.config.range) {\n\t            node.range = [marker.index, this.lastMarker.index];\n\t        }\n\t        if (this.config.loc) {\n\t            node.loc = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column\n\t                }\n\t            };\n\t            if (this.config.source) {\n\t                node.loc.source = this.config.source;\n\t            }\n\t        }\n\t        if (this.delegate) {\n\t            var metadata = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                    offset: marker.index\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column,\n\t                    offset: this.lastMarker.index\n\t                }\n\t            };\n\t            this.delegate(node, metadata);\n\t        }\n\t        return node;\n\t    };\n\t    // Expect the next token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expect = function (value) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\n\t    Parser.prototype.expectCommaSeparator = function () {\n\t        if (this.config.tolerant) {\n\t            var token = this.lookahead;\n\t            if (token.type === 7 /* Punctuator */ && token.value === ',') {\n\t                this.nextToken();\n\t            }\n\t            else if (token.type === 7 /* Punctuator */ && token.value === ';') {\n\t                this.nextToken();\n\t                this.tolerateUnexpectedToken(token);\n\t            }\n\t            else {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\n\t            }\n\t        }\n\t        else {\n\t            this.expect(',');\n\t        }\n\t    };\n\t    // Expect the next token to match the specified keyword.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expectKeyword = function (keyword) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next token matches the specified punctuator.\n\t    Parser.prototype.match = function (value) {\n\t        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\n\t    };\n\t    // Return true if the next token matches the specified keyword\n\t    Parser.prototype.matchKeyword = function (keyword) {\n\t        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token matches the specified contextual keyword\n\t    // (where an identifier is sometimes a keyword depending on the context)\n\t    Parser.prototype.matchContextualKeyword = function (keyword) {\n\t        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token is an assignment operator\n\t    Parser.prototype.matchAssign = function () {\n\t        if (this.lookahead.type !== 7 /* Punctuator */) {\n\t            return false;\n\t        }\n\t        var op = this.lookahead.value;\n\t        return op === '=' ||\n\t            op === '*=' ||\n\t            op === '**=' ||\n\t            op === '/=' ||\n\t            op === '%=' ||\n\t            op === '+=' ||\n\t            op === '-=' ||\n\t            op === '<<=' ||\n\t            op === '>>=' ||\n\t            op === '>>>=' ||\n\t            op === '&=' ||\n\t            op === '^=' ||\n\t            op === '|=';\n\t    };\n\t    // Cover grammar support.\n\t    //\n\t    // When an assignment expression position starts with an left parenthesis, the determination of the type\n\t    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\n\t    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\n\t    //\n\t    // There are three productions that can be parsed in a parentheses pair that needs to be determined\n\t    // after the outermost pair is closed. They are:\n\t    //\n\t    //   1. AssignmentExpression\n\t    //   2. BindingElements\n\t    //   3. AssignmentTargets\n\t    //\n\t    // In order to avoid exponential backtracking, we use two flags to denote if the production can be\n\t    // binding element or assignment target.\n\t    //\n\t    // The three productions have the relationship:\n\t    //\n\t    //   BindingElements \u2286 AssignmentTargets \u2286 AssignmentExpression\n\t    //\n\t    // with a single exception that CoverInitializedName when used directly in an Expression, generates\n\t    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\n\t    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\n\t    //\n\t    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\n\t    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\n\t    // the CoverInitializedName check is conducted.\n\t    //\n\t    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\n\t    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\n\t    // pattern. The CoverInitializedName check is deferred.\n\t    Parser.prototype.isolateCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        if (this.context.firstCoverInitializedNameError !== null) {\n\t            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\n\t        }\n\t        this.context.isBindingElement = previousIsBindingElement;\n\t        this.context.isAssignmentTarget = previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.inheritCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\n\t        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.consumeSemicolon = function () {\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else if (!this.hasLineTerminator) {\n\t            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.lastMarker.index = this.startMarker.index;\n\t            this.lastMarker.line = this.startMarker.line;\n\t            this.lastMarker.column = this.startMarker.column;\n\t        }\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-primary-expression\n\t    Parser.prototype.parsePrimaryExpression = function () {\n\t        var node = this.createNode();\n\t        var expr;\n\t        var token, raw;\n\t        switch (this.lookahead.type) {\n\t            case 3 /* Identifier */:\n\t                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\n\t                    this.tolerateUnexpectedToken(this.lookahead);\n\t                }\n\t                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                break;\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t                if (this.context.strict && this.lookahead.octal) {\n\t                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 1 /* BooleanLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\n\t                break;\n\t            case 5 /* NullLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(null, raw));\n\t                break;\n\t            case 10 /* Template */:\n\t                expr = this.parseTemplateLiteral();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                switch (this.lookahead.value) {\n\t                    case '(':\n\t                        this.context.isBindingElement = false;\n\t                        expr = this.inheritCoverGrammar(this.parseGroupExpression);\n\t                        break;\n\t                    case '[':\n\t                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);\n\t                        break;\n\t                    case '{':\n\t                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);\n\t                        break;\n\t                    case '/':\n\t                    case '/=':\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                        this.scanner.index = this.startMarker.index;\n\t                        token = this.nextRegexToken();\n\t                        raw = this.getTokenRaw(token);\n\t                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\n\t                        break;\n\t                    default:\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                }\n\t                break;\n\t            case 4 /* Keyword */:\n\t                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\n\t                    expr = this.parseIdentifierName();\n\t                }\n\t                else if (!this.context.strict && this.matchKeyword('let')) {\n\t                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                }\n\t                else {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    if (this.matchKeyword('function')) {\n\t                        expr = this.parseFunctionExpression();\n\t                    }\n\t                    else if (this.matchKeyword('this')) {\n\t                        this.nextToken();\n\t                        expr = this.finalize(node, new Node.ThisExpression());\n\t                    }\n\t                    else if (this.matchKeyword('class')) {\n\t                        expr = this.parseClassExpression();\n\t                    }\n\t                    else {\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                    }\n\t                }\n\t                break;\n\t            default:\n\t                expr = this.throwUnexpectedToken(this.nextToken());\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-array-initializer\n\t    Parser.prototype.parseSpreadElement = function () {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t        return this.finalize(node, new Node.SpreadElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayInitializer = function () {\n\t        var node = this.createNode();\n\t        var elements = [];\n\t        this.expect('[');\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else if (this.match('...')) {\n\t                var element = this.parseSpreadElement();\n\t                if (!this.match(']')) {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    this.expect(',');\n\t                }\n\t                elements.push(element);\n\t            }\n\t            else {\n\t                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayExpression(elements));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-object-initializer\n\t    Parser.prototype.parsePropertyMethod = function (params) {\n\t        this.context.isAssignmentTarget = false;\n\t        this.context.isBindingElement = false;\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = params.simple;\n\t        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\n\t        if (this.context.strict && params.firstRestricted) {\n\t            this.tolerateUnexpectedToken(params.firstRestricted, params.message);\n\t        }\n\t        if (this.context.strict && params.stricted) {\n\t            this.tolerateUnexpectedToken(params.stricted, params.message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        return body;\n\t    };\n\t    Parser.prototype.parsePropertyMethodFunction = function () {\n\t        var isGenerator = false;\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parsePropertyMethodAsyncFunction = function () {\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        var previousAwait = this.context.await;\n\t        this.context.allowYield = false;\n\t        this.context.await = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        this.context.await = previousAwait;\n\t        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\n\t    };\n\t    Parser.prototype.parseObjectPropertyKey = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var key;\n\t        switch (token.type) {\n\t            case 8 /* StringLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t                if (this.context.strict && token.octal) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                var raw = this.getTokenRaw(token);\n\t                key = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 3 /* Identifier */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 4 /* Keyword */:\n\t                key = this.finalize(node, new Node.Identifier(token.value));\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                if (token.value === '[') {\n\t                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    this.expect(']');\n\t                }\n\t                else {\n\t                    key = this.throwUnexpectedToken(token);\n\t                }\n\t                break;\n\t            default:\n\t                key = this.throwUnexpectedToken(token);\n\t        }\n\t        return key;\n\t    };\n\t    Parser.prototype.isPropertyKey = function (key, value) {\n\t        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||\n\t            (key.type === syntax_1.Syntax.Literal && key.value === value);\n\t    };\n\t    Parser.prototype.parseObjectProperty = function (hasProto) {\n\t        var node = this.createNode();\n\t        var token = this.lookahead;\n\t        var kind;\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var shorthand = false;\n\t        var isAsync = false;\n\t        if (token.type === 3 /* Identifier */) {\n\t            var id = token.value;\n\t            this.nextToken();\n\t            computed = this.match('[');\n\t            isAsync = !this.hasLineTerminator && (id === 'async') &&\n\t                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');\n\t            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\n\t        }\n\t        else if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\n\t            kind = 'get';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.context.allowYield = false;\n\t            value = this.parseGetterMethod();\n\t        }\n\t        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\n\t            kind = 'set';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseSetterMethod();\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        else {\n\t            if (!key) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            kind = 'init';\n\t            if (this.match(':') && !isAsync) {\n\t                if (!computed && this.isPropertyKey(key, '__proto__')) {\n\t                    if (hasProto.value) {\n\t                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);\n\t                    }\n\t                    hasProto.value = true;\n\t                }\n\t                this.nextToken();\n\t                value = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t            }\n\t            else if (this.match('(')) {\n\t                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t                method = true;\n\t            }\n\t            else if (token.type === 3 /* Identifier */) {\n\t                var id = this.finalize(node, new Node.Identifier(token.value));\n\t                if (this.match('=')) {\n\t                    this.context.firstCoverInitializedNameError = this.lookahead;\n\t                    this.nextToken();\n\t                    shorthand = true;\n\t                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    value = this.finalize(node, new Node.AssignmentPattern(id, init));\n\t                }\n\t                else {\n\t                    shorthand = true;\n\t                    value = id;\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectInitializer = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var properties = [];\n\t        var hasProto = { value: false };\n\t        while (!this.match('}')) {\n\t            properties.push(this.parseObjectProperty(hasProto));\n\t            if (!this.match('}')) {\n\t                this.expectCommaSeparator();\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectExpression(properties));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literals\n\t    Parser.prototype.parseTemplateHead = function () {\n\t        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateElement = function () {\n\t        if (this.lookahead.type !== 10 /* Template */) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateLiteral = function () {\n\t        var node = this.createNode();\n\t        var expressions = [];\n\t        var quasis = [];\n\t        var quasi = this.parseTemplateHead();\n\t        quasis.push(quasi);\n\t        while (!quasi.tail) {\n\t            expressions.push(this.parseExpression());\n\t            quasi = this.parseTemplateElement();\n\t            quasis.push(quasi);\n\t        }\n\t        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-grouping-operator\n\t    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t            case syntax_1.Syntax.MemberExpression:\n\t            case syntax_1.Syntax.RestElement:\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                break;\n\t            case syntax_1.Syntax.SpreadElement:\n\t                expr.type = syntax_1.Syntax.RestElement;\n\t                this.reinterpretExpressionAsPattern(expr.argument);\n\t                break;\n\t            case syntax_1.Syntax.ArrayExpression:\n\t                expr.type = syntax_1.Syntax.ArrayPattern;\n\t                for (var i = 0; i < expr.elements.length; i++) {\n\t                    if (expr.elements[i] !== null) {\n\t                        this.reinterpretExpressionAsPattern(expr.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectExpression:\n\t                expr.type = syntax_1.Syntax.ObjectPattern;\n\t                for (var i = 0; i < expr.properties.length; i++) {\n\t                    this.reinterpretExpressionAsPattern(expr.properties[i].value);\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.AssignmentExpression:\n\t                expr.type = syntax_1.Syntax.AssignmentPattern;\n\t                delete expr.operator;\n\t                this.reinterpretExpressionAsPattern(expr.left);\n\t                break;\n\t            default:\n\t                // Allow other node type for tolerant parsing.\n\t                break;\n\t        }\n\t    };\n\t    Parser.prototype.parseGroupExpression = function () {\n\t        var expr;\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.nextToken();\n\t            if (!this.match('=>')) {\n\t                this.expect('=>');\n\t            }\n\t            expr = {\n\t                type: ArrowParameterPlaceHolder,\n\t                params: [],\n\t                async: false\n\t            };\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var params = [];\n\t            if (this.match('...')) {\n\t                expr = this.parseRestElement(params);\n\t                this.expect(')');\n\t                if (!this.match('=>')) {\n\t                    this.expect('=>');\n\t                }\n\t                expr = {\n\t                    type: ArrowParameterPlaceHolder,\n\t                    params: [expr],\n\t                    async: false\n\t                };\n\t            }\n\t            else {\n\t                var arrow = false;\n\t                this.context.isBindingElement = true;\n\t                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                if (this.match(',')) {\n\t                    var expressions = [];\n\t                    this.context.isAssignmentTarget = false;\n\t                    expressions.push(expr);\n\t                    while (this.lookahead.type !== 2 /* EOF */) {\n\t                        if (!this.match(',')) {\n\t                            break;\n\t                        }\n\t                        this.nextToken();\n\t                        if (this.match(')')) {\n\t                            this.nextToken();\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else if (this.match('...')) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            expressions.push(this.parseRestElement(params));\n\t                            this.expect(')');\n\t                            if (!this.match('=>')) {\n\t                                this.expect('=>');\n\t                            }\n\t                            this.context.isBindingElement = false;\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else {\n\t                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        if (arrow) {\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!arrow) {\n\t                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t                    }\n\t                }\n\t                if (!arrow) {\n\t                    this.expect(')');\n\t                    if (this.match('=>')) {\n\t                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: [expr],\n\t                                async: false\n\t                            };\n\t                        }\n\t                        if (!arrow) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            if (expr.type === syntax_1.Syntax.SequenceExpression) {\n\t                                for (var i = 0; i < expr.expressions.length; i++) {\n\t                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);\n\t                                }\n\t                            }\n\t                            else {\n\t                                this.reinterpretExpressionAsPattern(expr);\n\t                            }\n\t                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: parameters,\n\t                                async: false\n\t                            };\n\t                        }\n\t                    }\n\t                    this.context.isBindingElement = false;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\n\t    Parser.prototype.parseArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.isIdentifierName = function (token) {\n\t        return token.type === 3 /* Identifier */ ||\n\t            token.type === 4 /* Keyword */ ||\n\t            token.type === 1 /* BooleanLiteral */ ||\n\t            token.type === 5 /* NullLiteral */;\n\t    };\n\t    Parser.prototype.parseIdentifierName = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (!this.isIdentifierName(token)) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseNewExpression = function () {\n\t        var node = this.createNode();\n\t        var id = this.parseIdentifierName();\n\t        assert_1.assert(id.name === 'new', 'New expression must start with `new`');\n\t        var expr;\n\t        if (this.match('.')) {\n\t            this.nextToken();\n\t            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {\n\t                var property = this.parseIdentifierName();\n\t                expr = new Node.MetaProperty(id, property);\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\n\t            var args = this.match('(') ? this.parseArguments() : [];\n\t            expr = new Node.NewExpression(callee, args);\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return this.finalize(node, expr);\n\t    };\n\t    Parser.prototype.parseAsyncArgument = function () {\n\t        var arg = this.parseAssignmentExpression();\n\t        this.context.firstCoverInitializedNameError = null;\n\t        return arg;\n\t    };\n\t    Parser.prototype.parseAsyncArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAsyncArgument);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {\n\t        var startToken = this.lookahead;\n\t        var maybeAsync = this.matchContextualKeyword('async');\n\t        var previousAllowIn = this.context.allowIn;\n\t        this.context.allowIn = true;\n\t        var expr;\n\t        if (this.matchKeyword('super') && this.context.inFunctionBody) {\n\t            expr = this.createNode();\n\t            this.nextToken();\n\t            expr = this.finalize(expr, new Node.Super());\n\t            if (!this.match('(') && !this.match('.') && !this.match('[')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        }\n\t        while (true) {\n\t            if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('(')) {\n\t                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = false;\n\t                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\n\t                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\n\t                if (asyncArrow && this.match('=>')) {\n\t                    for (var i = 0; i < args.length; ++i) {\n\t                        this.reinterpretExpressionAsPattern(args[i]);\n\t                    }\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: args,\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            else if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        this.context.allowIn = previousAllowIn;\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseSuper = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('super');\n\t        if (!this.match('[') && !this.match('.')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return this.finalize(node, new Node.Super());\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpression = function () {\n\t        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\n\t        var node = this.startNode(this.lookahead);\n\t        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :\n\t            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        while (true) {\n\t            if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-update-expressions\n\t    Parser.prototype.parseUpdateExpression = function () {\n\t        var expr;\n\t        var startToken = this.lookahead;\n\t        if (this.match('++') || this.match('--')) {\n\t            var node = this.startNode(startToken);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictLHSPrefix);\n\t            }\n\t            if (!this.context.isAssignmentTarget) {\n\t                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t            }\n\t            var prefix = true;\n\t            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\n\t                if (this.match('++') || this.match('--')) {\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);\n\t                    }\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    var operator = this.nextToken().value;\n\t                    var prefix = false;\n\t                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-unary-operators\n\t    Parser.prototype.parseAwaitExpression = function () {\n\t        var node = this.createNode();\n\t        this.nextToken();\n\t        var argument = this.parseUnaryExpression();\n\t        return this.finalize(node, new Node.AwaitExpression(argument));\n\t    };\n\t    Parser.prototype.parseUnaryExpression = function () {\n\t        var expr;\n\t        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||\n\t            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\n\t            var node = this.startNode(this.lookahead);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\n\t            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\n\t                this.tolerateError(messages_1.Messages.StrictDelete);\n\t            }\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else if (this.context.await && this.matchContextualKeyword('await')) {\n\t            expr = this.parseAwaitExpression();\n\t        }\n\t        else {\n\t            expr = this.parseUpdateExpression();\n\t        }\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseExponentiationExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exp-operator\n\t    // https://tc39.github.io/ecma262/#sec-multiplicative-operators\n\t    // https://tc39.github.io/ecma262/#sec-additive-operators\n\t    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\n\t    // https://tc39.github.io/ecma262/#sec-relational-operators\n\t    // https://tc39.github.io/ecma262/#sec-equality-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-logical-operators\n\t    Parser.prototype.binaryPrecedence = function (token) {\n\t        var op = token.value;\n\t        var precedence;\n\t        if (token.type === 7 /* Punctuator */) {\n\t            precedence = this.operatorPrecedence[op] || 0;\n\t        }\n\t        else if (token.type === 4 /* Keyword */) {\n\t            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;\n\t        }\n\t        else {\n\t            precedence = 0;\n\t        }\n\t        return precedence;\n\t    };\n\t    Parser.prototype.parseBinaryExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\n\t        var token = this.lookahead;\n\t        var prec = this.binaryPrecedence(token);\n\t        if (prec > 0) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var markers = [startToken, this.lookahead];\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            var stack = [left, token.value, right];\n\t            var precedences = [prec];\n\t            while (true) {\n\t                prec = this.binaryPrecedence(this.lookahead);\n\t                if (prec <= 0) {\n\t                    break;\n\t                }\n\t                // Reduce: make a binary expression from the three topmost entries.\n\t                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {\n\t                    right = stack.pop();\n\t                    var operator = stack.pop();\n\t                    precedences.pop();\n\t                    left = stack.pop();\n\t                    markers.pop();\n\t                    var node = this.startNode(markers[markers.length - 1]);\n\t                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\n\t                }\n\t                // Shift.\n\t                stack.push(this.nextToken().value);\n\t                precedences.push(prec);\n\t                markers.push(this.lookahead);\n\t                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\n\t            }\n\t            // Final reduce to clean-up the stack.\n\t            var i = stack.length - 1;\n\t            expr = stack[i];\n\t            var lastMarker = markers.pop();\n\t            while (i > 1) {\n\t                var marker = markers.pop();\n\t                var lastLineStart = lastMarker && lastMarker.lineStart;\n\t                var node = this.startNode(marker, lastLineStart);\n\t                var operator = stack[i - 1];\n\t                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\n\t                i -= 2;\n\t                lastMarker = marker;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-conditional-operator\n\t    Parser.prototype.parseConditionalExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);\n\t        if (this.match('?')) {\n\t            this.nextToken();\n\t            var previousAllowIn = this.context.allowIn;\n\t            this.context.allowIn = true;\n\t            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowIn = previousAllowIn;\n\t            this.expect(':');\n\t            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-assignment-operators\n\t    Parser.prototype.checkPatternParam = function (options, param) {\n\t        switch (param.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                this.validateParam(options, param, param.name);\n\t                break;\n\t            case syntax_1.Syntax.RestElement:\n\t                this.checkPatternParam(options, param.argument);\n\t                break;\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                this.checkPatternParam(options, param.left);\n\t                break;\n\t            case syntax_1.Syntax.ArrayPattern:\n\t                for (var i = 0; i < param.elements.length; i++) {\n\t                    if (param.elements[i] !== null) {\n\t                        this.checkPatternParam(options, param.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectPattern:\n\t                for (var i = 0; i < param.properties.length; i++) {\n\t                    this.checkPatternParam(options, param.properties[i].value);\n\t                }\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t    };\n\t    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {\n\t        var params = [expr];\n\t        var options;\n\t        var asyncArrow = false;\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                break;\n\t            case ArrowParameterPlaceHolder:\n\t                params = expr.params;\n\t                asyncArrow = expr.async;\n\t                break;\n\t            default:\n\t                return null;\n\t        }\n\t        options = {\n\t            simple: true,\n\t            paramSet: {}\n\t        };\n\t        for (var i = 0; i < params.length; ++i) {\n\t            var param = params[i];\n\t            if (param.type === syntax_1.Syntax.AssignmentPattern) {\n\t                if (param.right.type === syntax_1.Syntax.YieldExpression) {\n\t                    if (param.right.argument) {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                    param.right.type = syntax_1.Syntax.Identifier;\n\t                    param.right.name = 'yield';\n\t                    delete param.right.argument;\n\t                    delete param.right.delegate;\n\t                }\n\t            }\n\t            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.checkPatternParam(options, param);\n\t            params[i] = param;\n\t        }\n\t        if (this.context.strict || !this.context.allowYield) {\n\t            for (var i = 0; i < params.length; ++i) {\n\t                var param = params[i];\n\t                if (param.type === syntax_1.Syntax.YieldExpression) {\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t                }\n\t            }\n\t        }\n\t        if (options.message === messages_1.Messages.StrictParamDupe) {\n\t            var token = this.context.strict ? options.stricted : options.firstRestricted;\n\t            this.throwUnexpectedToken(token, options.message);\n\t        }\n\t        return {\n\t            simple: options.simple,\n\t            params: params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.parseAssignmentExpression = function () {\n\t        var expr;\n\t        if (!this.context.allowYield && this.matchKeyword('yield')) {\n\t            expr = this.parseYieldExpression();\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var token = startToken;\n\t            expr = this.parseConditionalExpression();\n\t            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {\n\t                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {\n\t                    var arg = this.parsePrimaryExpression();\n\t                    this.reinterpretExpressionAsPattern(arg);\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: [arg],\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\n\t                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                var isAsync = expr.async;\n\t                var list = this.reinterpretAsCoverFormalsList(expr);\n\t                if (list) {\n\t                    if (this.hasLineTerminator) {\n\t                        this.tolerateUnexpectedToken(this.lookahead);\n\t                    }\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                    var previousStrict = this.context.strict;\n\t                    var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t                    this.context.allowStrictDirective = list.simple;\n\t                    var previousAllowYield = this.context.allowYield;\n\t                    var previousAwait = this.context.await;\n\t                    this.context.allowYield = true;\n\t                    this.context.await = isAsync;\n\t                    var node = this.startNode(startToken);\n\t                    this.expect('=>');\n\t                    var body = void 0;\n\t                    if (this.match('{')) {\n\t                        var previousAllowIn = this.context.allowIn;\n\t                        this.context.allowIn = true;\n\t                        body = this.parseFunctionSourceElements();\n\t                        this.context.allowIn = previousAllowIn;\n\t                    }\n\t                    else {\n\t                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    }\n\t                    var expression = body.type !== syntax_1.Syntax.BlockStatement;\n\t                    if (this.context.strict && list.firstRestricted) {\n\t                        this.throwUnexpectedToken(list.firstRestricted, list.message);\n\t                    }\n\t                    if (this.context.strict && list.stricted) {\n\t                        this.tolerateUnexpectedToken(list.stricted, list.message);\n\t                    }\n\t                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :\n\t                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\n\t                    this.context.strict = previousStrict;\n\t                    this.context.allowStrictDirective = previousAllowStrictDirective;\n\t                    this.context.allowYield = previousAllowYield;\n\t                    this.context.await = previousAwait;\n\t                }\n\t            }\n\t            else {\n\t                if (this.matchAssign()) {\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\n\t                        var id = expr;\n\t                        if (this.scanner.isRestrictedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\n\t                        }\n\t                        if (this.scanner.isStrictModeReservedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t                        }\n\t                    }\n\t                    if (!this.match('=')) {\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                    }\n\t                    else {\n\t                        this.reinterpretExpressionAsPattern(expr);\n\t                    }\n\t                    token = this.nextToken();\n\t                    var operator = token.value;\n\t                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comma-operator\n\t    Parser.prototype.parseExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        if (this.match(',')) {\n\t            var expressions = [];\n\t            expressions.push(expr);\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                if (!this.match(',')) {\n\t                    break;\n\t                }\n\t                this.nextToken();\n\t                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t            }\n\t            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-block\n\t    Parser.prototype.parseStatementListItem = function () {\n\t        var statement;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.isBindingElement = true;\n\t        if (this.lookahead.type === 4 /* Keyword */) {\n\t            switch (this.lookahead.value) {\n\t                case 'export':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\n\t                    }\n\t                    statement = this.parseExportDeclaration();\n\t                    break;\n\t                case 'import':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\n\t                    }\n\t                    statement = this.parseImportDeclaration();\n\t                    break;\n\t                case 'const':\n\t                    statement = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'function':\n\t                    statement = this.parseFunctionDeclaration();\n\t                    break;\n\t                case 'class':\n\t                    statement = this.parseClassDeclaration();\n\t                    break;\n\t                case 'let':\n\t                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\n\t                    break;\n\t                default:\n\t                    statement = this.parseStatement();\n\t                    break;\n\t            }\n\t        }\n\t        else {\n\t            statement = this.parseStatement();\n\t        }\n\t        return statement;\n\t    };\n\t    Parser.prototype.parseBlock = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var block = [];\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            block.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.BlockStatement(block));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\n\t    Parser.prototype.parseLexicalBinding = function (kind, options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, kind);\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (kind === 'const') {\n\t            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\n\t                if (this.match('=')) {\n\t                    this.nextToken();\n\t                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                }\n\t                else {\n\t                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\n\t                }\n\t            }\n\t        }\n\t        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {\n\t            this.expect('=');\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseBindingList = function (kind, options) {\n\t        var list = [this.parseLexicalBinding(kind, options)];\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseLexicalBinding(kind, options));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.isLexicalDeclaration = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.scanner.lex();\n\t        this.scanner.restoreState(state);\n\t        return (next.type === 3 /* Identifier */) ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '[') ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '{') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'let') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'yield');\n\t    };\n\t    Parser.prototype.parseLexicalDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var kind = this.nextToken().value;\n\t        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\n\t        var declarations = this.parseBindingList(kind, options);\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\n\t    Parser.prototype.parseBindingRestElement = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params, kind);\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('[');\n\t        var elements = [];\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else {\n\t                if (this.match('...')) {\n\t                    elements.push(this.parseBindingRestElement(params, kind));\n\t                    break;\n\t                }\n\t                else {\n\t                    elements.push(this.parsePatternWithDefault(params, kind));\n\t                }\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayPattern(elements));\n\t    };\n\t    Parser.prototype.parsePropertyPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var computed = false;\n\t        var shorthand = false;\n\t        var method = false;\n\t        var key;\n\t        var value;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            var keyToken = this.lookahead;\n\t            key = this.parseVariableIdentifier();\n\t            var init = this.finalize(node, new Node.Identifier(keyToken.value));\n\t            if (this.match('=')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                this.nextToken();\n\t                var expr = this.parseAssignmentExpression();\n\t                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\n\t            }\n\t            else if (!this.match(':')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                value = init;\n\t            }\n\t            else {\n\t                this.expect(':');\n\t                value = this.parsePatternWithDefault(params, kind);\n\t            }\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.expect(':');\n\t            value = this.parsePatternWithDefault(params, kind);\n\t        }\n\t        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var properties = [];\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            properties.push(this.parsePropertyPattern(params, kind));\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectPattern(properties));\n\t    };\n\t    Parser.prototype.parsePattern = function (params, kind) {\n\t        var pattern;\n\t        if (this.match('[')) {\n\t            pattern = this.parseArrayPattern(params, kind);\n\t        }\n\t        else if (this.match('{')) {\n\t            pattern = this.parseObjectPattern(params, kind);\n\t        }\n\t        else {\n\t            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\n\t                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\n\t            }\n\t            params.push(this.lookahead);\n\t            pattern = this.parseVariableIdentifier(kind);\n\t        }\n\t        return pattern;\n\t    };\n\t    Parser.prototype.parsePatternWithDefault = function (params, kind) {\n\t        var startToken = this.lookahead;\n\t        var pattern = this.parsePattern(params, kind);\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = true;\n\t            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowYield = previousAllowYield;\n\t            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\n\t        }\n\t        return pattern;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-variable-statement\n\t    Parser.prototype.parseVariableIdentifier = function (kind) {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (token.type === 4 /* Keyword */ && token.value === 'yield') {\n\t            if (this.context.strict) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else if (!this.context.allowYield) {\n\t                this.throwUnexpectedToken(token);\n\t            }\n\t        }\n\t        else if (token.type !== 3 /* Identifier */) {\n\t            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else {\n\t                if (this.context.strict || token.value !== 'let' || kind !== 'var') {\n\t                    this.throwUnexpectedToken(token);\n\t                }\n\t            }\n\t        }\n\t        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {\n\t            this.tolerateUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseVariableDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, 'var');\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\n\t            this.expect('=');\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseVariableDeclarationList = function (options) {\n\t        var opt = { inFor: options.inFor };\n\t        var list = [];\n\t        list.push(this.parseVariableDeclaration(opt));\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseVariableDeclaration(opt));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.parseVariableStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('var');\n\t        var declarations = this.parseVariableDeclarationList({ inFor: false });\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-empty-statement\n\t    Parser.prototype.parseEmptyStatement = function () {\n\t        var node = this.createNode();\n\t        this.expect(';');\n\t        return this.finalize(node, new Node.EmptyStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-expression-statement\n\t    Parser.prototype.parseExpressionStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ExpressionStatement(expr));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-if-statement\n\t    Parser.prototype.parseIfClause = function () {\n\t        if (this.context.strict && this.matchKeyword('function')) {\n\t            this.tolerateError(messages_1.Messages.StrictFunction);\n\t        }\n\t        return this.parseStatement();\n\t    };\n\t    Parser.prototype.parseIfStatement = function () {\n\t        var node = this.createNode();\n\t        var consequent;\n\t        var alternate = null;\n\t        this.expectKeyword('if');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            consequent = this.parseIfClause();\n\t            if (this.matchKeyword('else')) {\n\t                this.nextToken();\n\t                alternate = this.parseIfClause();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-do-while-statement\n\t    Parser.prototype.parseDoWhileStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('do');\n\t        var previousInIteration = this.context.inIteration;\n\t        this.context.inIteration = true;\n\t        var body = this.parseStatement();\n\t        this.context.inIteration = previousInIteration;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.DoWhileStatement(body, test));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-while-statement\n\t    Parser.prototype.parseWhileStatement = function () {\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.parseStatement();\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return this.finalize(node, new Node.WhileStatement(test, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-for-statement\n\t    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\n\t    Parser.prototype.parseForStatement = function () {\n\t        var init = null;\n\t        var test = null;\n\t        var update = null;\n\t        var forIn = true;\n\t        var left, right;\n\t        var node = this.createNode();\n\t        this.expectKeyword('for');\n\t        this.expect('(');\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            if (this.matchKeyword('var')) {\n\t                init = this.createNode();\n\t                this.nextToken();\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                var declarations = this.parseVariableDeclarationList({ inFor: true });\n\t                this.context.allowIn = previousAllowIn;\n\t                if (declarations.length === 1 && this.matchKeyword('in')) {\n\t                    var decl = declarations[0];\n\t                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\n\t                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\n\t                    }\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.expect(';');\n\t                }\n\t            }\n\t            else if (this.matchKeyword('const') || this.matchKeyword('let')) {\n\t                init = this.createNode();\n\t                var kind = this.nextToken().value;\n\t                if (!this.context.strict && this.lookahead.value === 'in') {\n\t                    init = this.finalize(init, new Node.Identifier(kind));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else {\n\t                    var previousAllowIn = this.context.allowIn;\n\t                    this.context.allowIn = false;\n\t                    var declarations = this.parseBindingList(kind, { inFor: true });\n\t                    this.context.allowIn = previousAllowIn;\n\t                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseExpression();\n\t                        init = null;\n\t                    }\n\t                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseAssignmentExpression();\n\t                        init = null;\n\t                        forIn = false;\n\t                    }\n\t                    else {\n\t                        this.consumeSemicolon();\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                var initStartToken = this.lookahead;\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                init = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                this.context.allowIn = previousAllowIn;\n\t                if (this.matchKeyword('in')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (this.matchContextualKeyword('of')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    if (this.match(',')) {\n\t                        var initSeq = [init];\n\t                        while (this.match(',')) {\n\t                            this.nextToken();\n\t                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\n\t                    }\n\t                    this.expect(';');\n\t                }\n\t            }\n\t        }\n\t        if (typeof left === 'undefined') {\n\t            if (!this.match(';')) {\n\t                test = this.parseExpression();\n\t            }\n\t            this.expect(';');\n\t            if (!this.match(')')) {\n\t                update = this.parseExpression();\n\t            }\n\t        }\n\t        var body;\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.isolateCoverGrammar(this.parseStatement);\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return (typeof left === 'undefined') ?\n\t            this.finalize(node, new Node.ForStatement(init, test, update, body)) :\n\t            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :\n\t                this.finalize(node, new Node.ForOfStatement(left, right, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-continue-statement\n\t    Parser.prototype.parseContinueStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('continue');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            label = id;\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration) {\n\t            this.throwError(messages_1.Messages.IllegalContinue);\n\t        }\n\t        return this.finalize(node, new Node.ContinueStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-break-statement\n\t    Parser.prototype.parseBreakStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('break');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t            label = id;\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration && !this.context.inSwitch) {\n\t            this.throwError(messages_1.Messages.IllegalBreak);\n\t        }\n\t        return this.finalize(node, new Node.BreakStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-return-statement\n\t    Parser.prototype.parseReturnStatement = function () {\n\t        if (!this.context.inFunctionBody) {\n\t            this.tolerateError(messages_1.Messages.IllegalReturn);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('return');\n\t        var hasArgument = (!this.match(';') && !this.match('}') &&\n\t            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||\n\t            this.lookahead.type === 8 /* StringLiteral */ ||\n\t            this.lookahead.type === 10 /* Template */;\n\t        var argument = hasArgument ? this.parseExpression() : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ReturnStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-with-statement\n\t    Parser.prototype.parseWithStatement = function () {\n\t        if (this.context.strict) {\n\t            this.tolerateError(messages_1.Messages.StrictModeWith);\n\t        }\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('with');\n\t        this.expect('(');\n\t        var object = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            body = this.parseStatement();\n\t        }\n\t        return this.finalize(node, new Node.WithStatement(object, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-switch-statement\n\t    Parser.prototype.parseSwitchCase = function () {\n\t        var node = this.createNode();\n\t        var test;\n\t        if (this.matchKeyword('default')) {\n\t            this.nextToken();\n\t            test = null;\n\t        }\n\t        else {\n\t            this.expectKeyword('case');\n\t            test = this.parseExpression();\n\t        }\n\t        this.expect(':');\n\t        var consequent = [];\n\t        while (true) {\n\t            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\n\t                break;\n\t            }\n\t            consequent.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.SwitchCase(test, consequent));\n\t    };\n\t    Parser.prototype.parseSwitchStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('switch');\n\t        this.expect('(');\n\t        var discriminant = this.parseExpression();\n\t        this.expect(')');\n\t        var previousInSwitch = this.context.inSwitch;\n\t        this.context.inSwitch = true;\n\t        var cases = [];\n\t        var defaultFound = false;\n\t        this.expect('{');\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            var clause = this.parseSwitchCase();\n\t            if (clause.test === null) {\n\t                if (defaultFound) {\n\t                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\n\t                }\n\t                defaultFound = true;\n\t            }\n\t            cases.push(clause);\n\t        }\n\t        this.expect('}');\n\t        this.context.inSwitch = previousInSwitch;\n\t        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-labelled-statements\n\t    Parser.prototype.parseLabelledStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var statement;\n\t        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {\n\t            this.nextToken();\n\t            var id = expr;\n\t            var key = '$' + id.name;\n\t            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\n\t            }\n\t            this.context.labelSet[key] = true;\n\t            var body = void 0;\n\t            if (this.matchKeyword('class')) {\n\t                this.tolerateUnexpectedToken(this.lookahead);\n\t                body = this.parseClassDeclaration();\n\t            }\n\t            else if (this.matchKeyword('function')) {\n\t                var token = this.lookahead;\n\t                var declaration = this.parseFunctionDeclaration();\n\t                if (this.context.strict) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\n\t                }\n\t                else if (declaration.generator) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\n\t                }\n\t                body = declaration;\n\t            }\n\t            else {\n\t                body = this.parseStatement();\n\t            }\n\t            delete this.context.labelSet[key];\n\t            statement = new Node.LabeledStatement(id, body);\n\t        }\n\t        else {\n\t            this.consumeSemicolon();\n\t            statement = new Node.ExpressionStatement(expr);\n\t        }\n\t        return this.finalize(node, statement);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-throw-statement\n\t    Parser.prototype.parseThrowStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('throw');\n\t        if (this.hasLineTerminator) {\n\t            this.throwError(messages_1.Messages.NewlineAfterThrow);\n\t        }\n\t        var argument = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ThrowStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-try-statement\n\t    Parser.prototype.parseCatchClause = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('catch');\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        var params = [];\n\t        var param = this.parsePattern(params);\n\t        var paramMap = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var key = '$' + params[i].value;\n\t            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\n\t                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\n\t            }\n\t            paramMap[key] = true;\n\t        }\n\t        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(param.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictCatchVariable);\n\t            }\n\t        }\n\t        this.expect(')');\n\t        var body = this.parseBlock();\n\t        return this.finalize(node, new Node.CatchClause(param, body));\n\t    };\n\t    Parser.prototype.parseFinallyClause = function () {\n\t        this.expectKeyword('finally');\n\t        return this.parseBlock();\n\t    };\n\t    Parser.prototype.parseTryStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('try');\n\t        var block = this.parseBlock();\n\t        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\n\t        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\n\t        if (!handler && !finalizer) {\n\t            this.throwError(messages_1.Messages.NoCatchOrFinally);\n\t        }\n\t        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-debugger-statement\n\t    Parser.prototype.parseDebuggerStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('debugger');\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.DebuggerStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\n\t    Parser.prototype.parseStatement = function () {\n\t        var statement;\n\t        switch (this.lookahead.type) {\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t            case 10 /* Template */:\n\t            case 9 /* RegularExpression */:\n\t                statement = this.parseExpressionStatement();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                var value = this.lookahead.value;\n\t                if (value === '{') {\n\t                    statement = this.parseBlock();\n\t                }\n\t                else if (value === '(') {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                else if (value === ';') {\n\t                    statement = this.parseEmptyStatement();\n\t                }\n\t                else {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                break;\n\t            case 3 /* Identifier */:\n\t                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\n\t                break;\n\t            case 4 /* Keyword */:\n\t                switch (this.lookahead.value) {\n\t                    case 'break':\n\t                        statement = this.parseBreakStatement();\n\t                        break;\n\t                    case 'continue':\n\t                        statement = this.parseContinueStatement();\n\t                        break;\n\t                    case 'debugger':\n\t                        statement = this.parseDebuggerStatement();\n\t                        break;\n\t                    case 'do':\n\t                        statement = this.parseDoWhileStatement();\n\t                        break;\n\t                    case 'for':\n\t                        statement = this.parseForStatement();\n\t                        break;\n\t                    case 'function':\n\t                        statement = this.parseFunctionDeclaration();\n\t                        break;\n\t                    case 'if':\n\t                        statement = this.parseIfStatement();\n\t                        break;\n\t                    case 'return':\n\t                        statement = this.parseReturnStatement();\n\t                        break;\n\t                    case 'switch':\n\t                        statement = this.parseSwitchStatement();\n\t                        break;\n\t                    case 'throw':\n\t                        statement = this.parseThrowStatement();\n\t                        break;\n\t                    case 'try':\n\t                        statement = this.parseTryStatement();\n\t                        break;\n\t                    case 'var':\n\t                        statement = this.parseVariableStatement();\n\t                        break;\n\t                    case 'while':\n\t                        statement = this.parseWhileStatement();\n\t                        break;\n\t                    case 'with':\n\t                        statement = this.parseWithStatement();\n\t                        break;\n\t                    default:\n\t                        statement = this.parseExpressionStatement();\n\t                        break;\n\t                }\n\t                break;\n\t            default:\n\t                statement = this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return statement;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-function-definitions\n\t    Parser.prototype.parseFunctionSourceElements = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var body = this.parseDirectivePrologues();\n\t        var previousLabelSet = this.context.labelSet;\n\t        var previousInIteration = this.context.inIteration;\n\t        var previousInSwitch = this.context.inSwitch;\n\t        var previousInFunctionBody = this.context.inFunctionBody;\n\t        this.context.labelSet = {};\n\t        this.context.inIteration = false;\n\t        this.context.inSwitch = false;\n\t        this.context.inFunctionBody = true;\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        this.context.labelSet = previousLabelSet;\n\t        this.context.inIteration = previousInIteration;\n\t        this.context.inSwitch = previousInSwitch;\n\t        this.context.inFunctionBody = previousInFunctionBody;\n\t        return this.finalize(node, new Node.BlockStatement(body));\n\t    };\n\t    Parser.prototype.validateParam = function (options, param, name) {\n\t        var key = '$' + name;\n\t        if (this.context.strict) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        else if (!options.firstRestricted) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            else if (this.scanner.isStrictModeReservedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictReservedWord;\n\t            }\n\t            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        if (typeof Object.defineProperty === 'function') {\n\t            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\n\t        }\n\t        else {\n\t            options.paramSet[key] = true;\n\t        }\n\t    };\n\t    Parser.prototype.parseRestElement = function (params) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params);\n\t        if (this.match('=')) {\n\t            this.throwError(messages_1.Messages.DefaultRestParameter);\n\t        }\n\t        if (!this.match(')')) {\n\t            this.throwError(messages_1.Messages.ParameterAfterRestParameter);\n\t        }\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseFormalParameter = function (options) {\n\t        var params = [];\n\t        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\n\t        for (var i = 0; i < params.length; i++) {\n\t            this.validateParam(options, params[i], params[i].value);\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t        options.params.push(param);\n\t    };\n\t    Parser.prototype.parseFormalParameters = function (firstRestricted) {\n\t        var options;\n\t        options = {\n\t            simple: true,\n\t            params: [],\n\t            firstRestricted: firstRestricted\n\t        };\n\t        this.expect('(');\n\t        if (!this.match(')')) {\n\t            options.paramSet = {};\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                this.parseFormalParameter(options);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expect(',');\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return {\n\t            simple: options.simple,\n\t            params: options.params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.matchAsyncFunction = function () {\n\t        var match = this.matchContextualKeyword('async');\n\t        if (match) {\n\t            var state = this.scanner.saveState();\n\t            this.scanner.scanComments();\n\t            var next = this.scanner.lex();\n\t            this.scanner.restoreState(state);\n\t            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');\n\t        }\n\t        return match;\n\t    };\n\t    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted = null;\n\t        if (!identifierIsOptional || !this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\n\t    };\n\t    Parser.prototype.parseFunctionExpression = function () {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted;\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        if (!this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\n\t    Parser.prototype.parseDirective = function () {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\n\t    };\n\t    Parser.prototype.parseDirectivePrologues = function () {\n\t        var firstRestricted = null;\n\t        var body = [];\n\t        while (true) {\n\t            var token = this.lookahead;\n\t            if (token.type !== 8 /* StringLiteral */) {\n\t                break;\n\t            }\n\t            var statement = this.parseDirective();\n\t            body.push(statement);\n\t            var directive = statement.directive;\n\t            if (typeof directive !== 'string') {\n\t                break;\n\t            }\n\t            if (directive === 'use strict') {\n\t                this.context.strict = true;\n\t                if (firstRestricted) {\n\t                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                if (!this.context.allowStrictDirective) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\n\t                }\n\t            }\n\t            else {\n\t                if (!firstRestricted && token.octal) {\n\t                    firstRestricted = token;\n\t                }\n\t            }\n\t        }\n\t        return body;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-method-definitions\n\t    Parser.prototype.qualifiedPropertyName = function (token) {\n\t        switch (token.type) {\n\t            case 3 /* Identifier */:\n\t            case 8 /* StringLiteral */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 4 /* Keyword */:\n\t                return true;\n\t            case 7 /* Punctuator */:\n\t                return token.value === '[';\n\t            default:\n\t                break;\n\t        }\n\t        return false;\n\t    };\n\t    Parser.prototype.parseGetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length > 0) {\n\t            this.tolerateError(messages_1.Messages.BadGetterArity);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseSetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length !== 1) {\n\t            this.tolerateError(messages_1.Messages.BadSetterArity);\n\t        }\n\t        else if (formalParameters.params[0] instanceof Node.RestElement) {\n\t            this.tolerateError(messages_1.Messages.BadSetterRestParameter);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseGeneratorMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = true;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        this.context.allowYield = false;\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-generator-function-definitions\n\t    Parser.prototype.isStartOfExpression = function () {\n\t        var start = true;\n\t        var value = this.lookahead.value;\n\t        switch (this.lookahead.type) {\n\t            case 7 /* Punctuator */:\n\t                start = (value === '[') || (value === '(') || (value === '{') ||\n\t                    (value === '+') || (value === '-') ||\n\t                    (value === '!') || (value === '~') ||\n\t                    (value === '++') || (value === '--') ||\n\t                    (value === '/') || (value === '/='); // regular expression literal\n\t                break;\n\t            case 4 /* Keyword */:\n\t                start = (value === 'class') || (value === 'delete') ||\n\t                    (value === 'function') || (value === 'let') || (value === 'new') ||\n\t                    (value === 'super') || (value === 'this') || (value === 'typeof') ||\n\t                    (value === 'void') || (value === 'yield');\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        return start;\n\t    };\n\t    Parser.prototype.parseYieldExpression = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('yield');\n\t        var argument = null;\n\t        var delegate = false;\n\t        if (!this.hasLineTerminator) {\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = false;\n\t            delegate = this.match('*');\n\t            if (delegate) {\n\t                this.nextToken();\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            else if (this.isStartOfExpression()) {\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            this.context.allowYield = previousAllowYield;\n\t        }\n\t        return this.finalize(node, new Node.YieldExpression(argument, delegate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-class-definitions\n\t    Parser.prototype.parseClassElement = function (hasConstructor) {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var kind = '';\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var isStatic = false;\n\t        var isAsync = false;\n\t        if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            var id = key;\n\t            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\n\t                token = this.lookahead;\n\t                isStatic = true;\n\t                computed = this.match('[');\n\t                if (this.match('*')) {\n\t                    this.nextToken();\n\t                }\n\t                else {\n\t                    key = this.parseObjectPropertyKey();\n\t                }\n\t            }\n\t            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {\n\t                var punctuator = this.lookahead.value;\n\t                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\n\t                    isAsync = true;\n\t                    token = this.lookahead;\n\t                    key = this.parseObjectPropertyKey();\n\t                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {\n\t                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */) {\n\t            if (token.value === 'get' && lookaheadPropertyKey) {\n\t                kind = 'get';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                this.context.allowYield = false;\n\t                value = this.parseGetterMethod();\n\t            }\n\t            else if (token.value === 'set' && lookaheadPropertyKey) {\n\t                kind = 'set';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                value = this.parseSetterMethod();\n\t            }\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        if (!kind && key && this.match('(')) {\n\t            kind = 'init';\n\t            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t            method = true;\n\t        }\n\t        if (!kind) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        if (kind === 'init') {\n\t            kind = 'method';\n\t        }\n\t        if (!computed) {\n\t            if (isStatic && this.isPropertyKey(key, 'prototype')) {\n\t                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\n\t            }\n\t            if (!isStatic && this.isPropertyKey(key, 'constructor')) {\n\t                if (kind !== 'method' || !method || (value && value.generator)) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\n\t                }\n\t                if (hasConstructor.value) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\n\t                }\n\t                else {\n\t                    hasConstructor.value = true;\n\t                }\n\t                kind = 'constructor';\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\n\t    };\n\t    Parser.prototype.parseClassElementList = function () {\n\t        var body = [];\n\t        var hasConstructor = { value: false };\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t            else {\n\t                body.push(this.parseClassElement(hasConstructor));\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return body;\n\t    };\n\t    Parser.prototype.parseClassBody = function () {\n\t        var node = this.createNode();\n\t        var elementList = this.parseClassElementList();\n\t        return this.finalize(node, new Node.ClassBody(elementList));\n\t    };\n\t    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\n\t    };\n\t    Parser.prototype.parseClassExpression = function () {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-scripts\n\t    // https://tc39.github.io/ecma262/#sec-modules\n\t    Parser.prototype.parseModule = function () {\n\t        this.context.strict = true;\n\t        this.context.isModule = true;\n\t        this.scanner.isModule = true;\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Module(body));\n\t    };\n\t    Parser.prototype.parseScript = function () {\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Script(body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-imports\n\t    Parser.prototype.parseModuleSpecifier = function () {\n\t        var node = this.createNode();\n\t        if (this.lookahead.type !== 8 /* StringLiteral */) {\n\t            this.throwError(messages_1.Messages.InvalidModuleSpecifier);\n\t        }\n\t        var token = this.nextToken();\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    // import {<foo as bar>} ...;\n\t    Parser.prototype.parseImportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var imported;\n\t        var local;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            imported = this.parseVariableIdentifier();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t        }\n\t        else {\n\t            imported = this.parseIdentifierName();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.ImportSpecifier(local, imported));\n\t    };\n\t    // {foo, bar as bas}\n\t    Parser.prototype.parseNamedImports = function () {\n\t        this.expect('{');\n\t        var specifiers = [];\n\t        while (!this.match('}')) {\n\t            specifiers.push(this.parseImportSpecifier());\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return specifiers;\n\t    };\n\t    // import <foo> ...;\n\t    Parser.prototype.parseImportDefaultSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportDefaultSpecifier(local));\n\t    };\n\t    // import <* as foo> ...;\n\t    Parser.prototype.parseImportNamespaceSpecifier = function () {\n\t        var node = this.createNode();\n\t        this.expect('*');\n\t        if (!this.matchContextualKeyword('as')) {\n\t            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);\n\t        }\n\t        this.nextToken();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));\n\t    };\n\t    Parser.prototype.parseImportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalImportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('import');\n\t        var src;\n\t        var specifiers = [];\n\t        if (this.lookahead.type === 8 /* StringLiteral */) {\n\t            // import 'foo';\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        else {\n\t            if (this.match('{')) {\n\t                // import {bar}\n\t                specifiers = specifiers.concat(this.parseNamedImports());\n\t            }\n\t            else if (this.match('*')) {\n\t                // import * as foo\n\t                specifiers.push(this.parseImportNamespaceSpecifier());\n\t            }\n\t            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\n\t                // import foo\n\t                specifiers.push(this.parseImportDefaultSpecifier());\n\t                if (this.match(',')) {\n\t                    this.nextToken();\n\t                    if (this.match('*')) {\n\t                        // import foo, * as foo\n\t                        specifiers.push(this.parseImportNamespaceSpecifier());\n\t                    }\n\t                    else if (this.match('{')) {\n\t                        // import foo, {bar}\n\t                        specifiers = specifiers.concat(this.parseNamedImports());\n\t                    }\n\t                    else {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exports\n\t    Parser.prototype.parseExportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        var exported = local;\n\t        if (this.matchContextualKeyword('as')) {\n\t            this.nextToken();\n\t            exported = this.parseIdentifierName();\n\t        }\n\t        return this.finalize(node, new Node.ExportSpecifier(local, exported));\n\t    };\n\t    Parser.prototype.parseExportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalExportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('export');\n\t        var exportDeclaration;\n\t        if (this.matchKeyword('default')) {\n\t            // export default ...\n\t            this.nextToken();\n\t            if (this.matchKeyword('function')) {\n\t                // export default function foo () {}\n\t                // export default function () {}\n\t                var declaration = this.parseFunctionDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchKeyword('class')) {\n\t                // export default class foo {}\n\t                var declaration = this.parseClassDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchContextualKeyword('async')) {\n\t                // export default async function f () {}\n\t                // export default async function () {}\n\t                // export default async x => x\n\t                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else {\n\t                if (this.matchContextualKeyword('from')) {\n\t                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\n\t                }\n\t                // export default {};\n\t                // export default [];\n\t                // export default (1 + 2);\n\t                var declaration = this.match('{') ? this.parseObjectInitializer() :\n\t                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\n\t                this.consumeSemicolon();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t        }\n\t        else if (this.match('*')) {\n\t            // export * from 'foo';\n\t            this.nextToken();\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            var src = this.parseModuleSpecifier();\n\t            this.consumeSemicolon();\n\t            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\n\t        }\n\t        else if (this.lookahead.type === 4 /* Keyword */) {\n\t            // export var f = 1;\n\t            var declaration = void 0;\n\t            switch (this.lookahead.value) {\n\t                case 'let':\n\t                case 'const':\n\t                    declaration = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'var':\n\t                case 'class':\n\t                case 'function':\n\t                    declaration = this.parseStatementListItem();\n\t                    break;\n\t                default:\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else if (this.matchAsyncFunction()) {\n\t            var declaration = this.parseFunctionDeclaration();\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else {\n\t            var specifiers = [];\n\t            var source = null;\n\t            var isExportFromIdentifier = false;\n\t            this.expect('{');\n\t            while (!this.match('}')) {\n\t                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\n\t                specifiers.push(this.parseExportSpecifier());\n\t                if (!this.match('}')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t            this.expect('}');\n\t            if (this.matchContextualKeyword('from')) {\n\t                // export {default} from 'foo';\n\t                // export {foo} from 'foo';\n\t                this.nextToken();\n\t                source = this.parseModuleSpecifier();\n\t                this.consumeSemicolon();\n\t            }\n\t            else if (isExportFromIdentifier) {\n\t                // export {default}; // missing fromClause\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            else {\n\t                // export {foo};\n\t                this.consumeSemicolon();\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\n\t        }\n\t        return exportDeclaration;\n\t    };\n\t    return Parser;\n\t}());\n\texports.Parser = Parser;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// Ensure the condition is true, otherwise throw an error.\n\t// This is only to have a better contract semantic, i.e. another safety net\n\t// to catch a logic error. The condition shall be fulfilled in normal case.\n\t// Do NOT use this to enforce a certain condition on any user input.\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tfunction assert(condition, message) {\n\t    /* istanbul ignore if */\n\t    if (!condition) {\n\t        throw new Error('ASSERT: ' + message);\n\t    }\n\t}\n\texports.assert = assert;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/* tslint:disable:max-classes-per-file */\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar ErrorHandler = (function () {\n\t    function ErrorHandler() {\n\t        this.errors = [];\n\t        this.tolerant = false;\n\t    }\n\t    ErrorHandler.prototype.recordError = function (error) {\n\t        this.errors.push(error);\n\t    };\n\t    ErrorHandler.prototype.tolerate = function (error) {\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    ErrorHandler.prototype.constructError = function (msg, column) {\n\t        var error = new Error(msg);\n\t        try {\n\t            throw error;\n\t        }\n\t        catch (base) {\n\t            /* istanbul ignore else */\n\t            if (Object.create && Object.defineProperty) {\n\t                error = Object.create(base);\n\t                Object.defineProperty(error, 'column', { value: column });\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.createError = function (index, line, col, description) {\n\t        var msg = 'Line ' + line + ': ' + description;\n\t        var error = this.constructError(msg, col);\n\t        error.index = index;\n\t        error.lineNumber = line;\n\t        error.description = description;\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.throwError = function (index, line, col, description) {\n\t        throw this.createError(index, line, col, description);\n\t    };\n\t    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {\n\t        var error = this.createError(index, line, col, description);\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    return ErrorHandler;\n\t}());\n\texports.ErrorHandler = ErrorHandler;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// Error messages should be identical to V8.\n\texports.Messages = {\n\t    BadGetterArity: 'Getter must not have any formal parameters',\n\t    BadSetterArity: 'Setter must have exactly one formal parameter',\n\t    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',\n\t    ConstructorIsAsync: 'Class constructor may not be an async method',\n\t    ConstructorSpecialMethod: 'Class constructor may not be an accessor',\n\t    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',\n\t    DefaultRestParameter: 'Unexpected token =',\n\t    DuplicateBinding: 'Duplicate binding %0',\n\t    DuplicateConstructor: 'A class may only have one constructor',\n\t    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\n\t    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\n\t    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\n\t    IllegalBreak: 'Illegal break statement',\n\t    IllegalContinue: 'Illegal continue statement',\n\t    IllegalExportDeclaration: 'Unexpected token',\n\t    IllegalImportDeclaration: 'Unexpected token',\n\t    IllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\n\t    IllegalReturn: 'Illegal return statement',\n\t    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\n\t    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\n\t    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\n\t    InvalidLHSInForIn: 'Invalid left-hand side in for-in',\n\t    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\n\t    InvalidModuleSpecifier: 'Unexpected token',\n\t    InvalidRegExp: 'Invalid regular expression',\n\t    LetInLexicalBinding: 'let is disallowed as a lexically bound name',\n\t    MissingFromClause: 'Unexpected token',\n\t    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n\t    NewlineAfterThrow: 'Illegal newline after throw',\n\t    NoAsAfterImportNamespace: 'Unexpected token',\n\t    NoCatchOrFinally: 'Missing catch or finally after try',\n\t    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\n\t    Redeclaration: '%0 \\'%1\\' has already been declared',\n\t    StaticPrototype: 'Classes may not have static property named prototype',\n\t    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\n\t    StrictDelete: 'Delete of an unqualified identifier in strict mode.',\n\t    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\n\t    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\n\t    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\n\t    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictModeWith: 'Strict mode code may not include a with statement',\n\t    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\n\t    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n\t    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\n\t    StrictReservedWord: 'Use of future reserved word in strict mode',\n\t    StrictVarName: 'Variable name may not be eval or arguments in strict mode',\n\t    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\n\t    UnexpectedEOS: 'Unexpected end of input',\n\t    UnexpectedIdentifier: 'Unexpected identifier',\n\t    UnexpectedNumber: 'Unexpected number',\n\t    UnexpectedReserved: 'Unexpected reserved word',\n\t    UnexpectedString: 'Unexpected string',\n\t    UnexpectedTemplate: 'Unexpected quasi %0',\n\t    UnexpectedToken: 'Unexpected token %0',\n\t    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\n\t    UnknownLabel: 'Undefined label \\'%0\\'',\n\t    UnterminatedRegExp: 'Invalid regular expression: missing /'\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar character_1 = __webpack_require__(4);\n\tvar messages_1 = __webpack_require__(11);\n\tfunction hexValue(ch) {\n\t    return '0123456789abcdef'.indexOf(ch.toLowerCase());\n\t}\n\tfunction octalValue(ch) {\n\t    return '01234567'.indexOf(ch);\n\t}\n\tvar Scanner = (function () {\n\t    function Scanner(code, handler) {\n\t        this.source = code;\n\t        this.errorHandler = handler;\n\t        this.trackComment = false;\n\t        this.isModule = false;\n\t        this.length = code.length;\n\t        this.index = 0;\n\t        this.lineNumber = (code.length > 0) ? 1 : 0;\n\t        this.lineStart = 0;\n\t        this.curlyStack = [];\n\t    }\n\t    Scanner.prototype.saveState = function () {\n\t        return {\n\t            index: this.index,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart\n\t        };\n\t    };\n\t    Scanner.prototype.restoreState = function (state) {\n\t        this.index = state.index;\n\t        this.lineNumber = state.lineNumber;\n\t        this.lineStart = state.lineStart;\n\t    };\n\t    Scanner.prototype.eof = function () {\n\t        return this.index >= this.length;\n\t    };\n\t    Scanner.prototype.throwUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    Scanner.prototype.tolerateUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comments\n\t    Scanner.prototype.skipSingleLineComment = function (offset) {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - offset;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - offset\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            ++this.index;\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (this.trackComment) {\n\t                    loc.end = {\n\t                        line: this.lineNumber,\n\t                        column: this.index - this.lineStart - 1\n\t                    };\n\t                    var entry = {\n\t                        multiLine: false,\n\t                        slice: [start + offset, this.index - 1],\n\t                        range: [start, this.index - 1],\n\t                        loc: loc\n\t                    };\n\t                    comments.push(entry);\n\t                }\n\t                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                return comments;\n\t            }\n\t        }\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: false,\n\t                slice: [start + offset, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        return comments;\n\t    };\n\t    Scanner.prototype.skipMultiLineComment = function () {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - 2;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - 2\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                ++this.index;\n\t                this.lineStart = this.index;\n\t            }\n\t            else if (ch === 0x2A) {\n\t                // Block comment ends with '*/'.\n\t                if (this.source.charCodeAt(this.index + 1) === 0x2F) {\n\t                    this.index += 2;\n\t                    if (this.trackComment) {\n\t                        loc.end = {\n\t                            line: this.lineNumber,\n\t                            column: this.index - this.lineStart\n\t                        };\n\t                        var entry = {\n\t                            multiLine: true,\n\t                            slice: [start + 2, this.index - 2],\n\t                            range: [start, this.index],\n\t                            loc: loc\n\t                        };\n\t                        comments.push(entry);\n\t                    }\n\t                    return comments;\n\t                }\n\t                ++this.index;\n\t            }\n\t            else {\n\t                ++this.index;\n\t            }\n\t        }\n\t        // Ran off the end of the file - the whole thing is a comment\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: true,\n\t                slice: [start + 2, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        this.tolerateUnexpectedToken();\n\t        return comments;\n\t    };\n\t    Scanner.prototype.scanComments = function () {\n\t        var comments;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t        }\n\t        var start = (this.index === 0);\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isWhiteSpace(ch)) {\n\t                ++this.index;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch)) {\n\t                ++this.index;\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                start = true;\n\t            }\n\t            else if (ch === 0x2F) {\n\t                ch = this.source.charCodeAt(this.index + 1);\n\t                if (ch === 0x2F) {\n\t                    this.index += 2;\n\t                    var comment = this.skipSingleLineComment(2);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                    start = true;\n\t                }\n\t                else if (ch === 0x2A) {\n\t                    this.index += 2;\n\t                    var comment = this.skipMultiLineComment();\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (start && ch === 0x2D) {\n\t                // U+003E is '>'\n\t                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {\n\t                    // '-->' is a single-line comment\n\t                    this.index += 3;\n\t                    var comment = this.skipSingleLineComment(3);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (ch === 0x3C && !this.isModule) {\n\t                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {\n\t                    this.index += 4; // `<!--`\n\t                    var comment = this.skipSingleLineComment(4);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return comments;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-future-reserved-words\n\t    Scanner.prototype.isFutureReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'enum':\n\t            case 'export':\n\t            case 'import':\n\t            case 'super':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isStrictModeReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'implements':\n\t            case 'interface':\n\t            case 'package':\n\t            case 'private':\n\t            case 'protected':\n\t            case 'public':\n\t            case 'static':\n\t            case 'yield':\n\t            case 'let':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isRestrictedWord = function (id) {\n\t        return id === 'eval' || id === 'arguments';\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-keywords\n\t    Scanner.prototype.isKeyword = function (id) {\n\t        switch (id.length) {\n\t            case 2:\n\t                return (id === 'if') || (id === 'in') || (id === 'do');\n\t            case 3:\n\t                return (id === 'var') || (id === 'for') || (id === 'new') ||\n\t                    (id === 'try') || (id === 'let');\n\t            case 4:\n\t                return (id === 'this') || (id === 'else') || (id === 'case') ||\n\t                    (id === 'void') || (id === 'with') || (id === 'enum');\n\t            case 5:\n\t                return (id === 'while') || (id === 'break') || (id === 'catch') ||\n\t                    (id === 'throw') || (id === 'const') || (id === 'yield') ||\n\t                    (id === 'class') || (id === 'super');\n\t            case 6:\n\t                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n\t                    (id === 'switch') || (id === 'export') || (id === 'import');\n\t            case 7:\n\t                return (id === 'default') || (id === 'finally') || (id === 'extends');\n\t            case 8:\n\t                return (id === 'function') || (id === 'continue') || (id === 'debugger');\n\t            case 10:\n\t                return (id === 'instanceof');\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.codePointAt = function (i) {\n\t        var cp = this.source.charCodeAt(i);\n\t        if (cp >= 0xD800 && cp <= 0xDBFF) {\n\t            var second = this.source.charCodeAt(i + 1);\n\t            if (second >= 0xDC00 && second <= 0xDFFF) {\n\t                var first = cp;\n\t                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t            }\n\t        }\n\t        return cp;\n\t    };\n\t    Scanner.prototype.scanHexEscape = function (prefix) {\n\t        var len = (prefix === 'u') ? 4 : 2;\n\t        var code = 0;\n\t        for (var i = 0; i < len; ++i) {\n\t            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 16 + hexValue(this.source[this.index++]);\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        }\n\t        return String.fromCharCode(code);\n\t    };\n\t    Scanner.prototype.scanUnicodeCodePointEscape = function () {\n\t        var ch = this.source[this.index];\n\t        var code = 0;\n\t        // At least, one hex digit is required.\n\t        if (ch === '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            code = code * 16 + hexValue(ch);\n\t        }\n\t        if (code > 0x10FFFF || ch !== '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return character_1.Character.fromCodePoint(code);\n\t    };\n\t    Scanner.prototype.getIdentifier = function () {\n\t        var start = this.index++;\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (ch === 0x5C) {\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            else if (ch >= 0xD800 && ch < 0xDFFF) {\n\t                // Need to handle surrogate pairs.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            if (character_1.Character.isIdentifierPart(ch)) {\n\t                ++this.index;\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return this.source.slice(start, this.index);\n\t    };\n\t    Scanner.prototype.getComplexIdentifier = function () {\n\t        var cp = this.codePointAt(this.index);\n\t        var id = character_1.Character.fromCodePoint(cp);\n\t        this.index += id.length;\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t        var ch;\n\t        if (cp === 0x5C) {\n\t            if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t            ++this.index;\n\t            if (this.source[this.index] === '{') {\n\t                ++this.index;\n\t                ch = this.scanUnicodeCodePointEscape();\n\t            }\n\t            else {\n\t                ch = this.scanHexEscape('u');\n\t                if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t            }\n\t            id = ch;\n\t        }\n\t        while (!this.eof()) {\n\t            cp = this.codePointAt(this.index);\n\t            if (!character_1.Character.isIdentifierPart(cp)) {\n\t                break;\n\t            }\n\t            ch = character_1.Character.fromCodePoint(cp);\n\t            id += ch;\n\t            this.index += ch.length;\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t            if (cp === 0x5C) {\n\t                id = id.substr(0, id.length - 1);\n\t                if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t                ++this.index;\n\t                if (this.source[this.index] === '{') {\n\t                    ++this.index;\n\t                    ch = this.scanUnicodeCodePointEscape();\n\t                }\n\t                else {\n\t                    ch = this.scanHexEscape('u');\n\t                    if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                        this.throwUnexpectedToken();\n\t                    }\n\t                }\n\t                id += ch;\n\t            }\n\t        }\n\t        return id;\n\t    };\n\t    Scanner.prototype.octalToDecimal = function (ch) {\n\t        // \\0 is not octal escape sequence\n\t        var octal = (ch !== '0');\n\t        var code = octalValue(ch);\n\t        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t            octal = true;\n\t            code = code * 8 + octalValue(this.source[this.index++]);\n\t            // 3 digits are only allowed when string starts\n\t            // with 0, 1, 2, 3\n\t            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 8 + octalValue(this.source[this.index++]);\n\t            }\n\t        }\n\t        return {\n\t            code: code,\n\t            octal: octal\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    Scanner.prototype.scanIdentifier = function () {\n\t        var type;\n\t        var start = this.index;\n\t        // Backslash (U+005C) starts an escaped character.\n\t        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();\n\t        // There is no keyword or literal with only one character.\n\t        // Thus, it must be an identifier.\n\t        if (id.length === 1) {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        else if (this.isKeyword(id)) {\n\t            type = 4 /* Keyword */;\n\t        }\n\t        else if (id === 'null') {\n\t            type = 5 /* NullLiteral */;\n\t        }\n\t        else if (id === 'true' || id === 'false') {\n\t            type = 1 /* BooleanLiteral */;\n\t        }\n\t        else {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {\n\t            var restore = this.index;\n\t            this.index = start;\n\t            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\n\t            this.index = restore;\n\t        }\n\t        return {\n\t            type: type,\n\t            value: id,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-punctuators\n\t    Scanner.prototype.scanPunctuator = function () {\n\t        var start = this.index;\n\t        // Check for most common single-character punctuators.\n\t        var str = this.source[this.index];\n\t        switch (str) {\n\t            case '(':\n\t            case '{':\n\t                if (str === '{') {\n\t                    this.curlyStack.push('{');\n\t                }\n\t                ++this.index;\n\t                break;\n\t            case '.':\n\t                ++this.index;\n\t                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\n\t                    // Spread operator: ...\n\t                    this.index += 2;\n\t                    str = '...';\n\t                }\n\t                break;\n\t            case '}':\n\t                ++this.index;\n\t                this.curlyStack.pop();\n\t                break;\n\t            case ')':\n\t            case ';':\n\t            case ',':\n\t            case '[':\n\t            case ']':\n\t            case ':':\n\t            case '?':\n\t            case '~':\n\t                ++this.index;\n\t                break;\n\t            default:\n\t                // 4-character punctuator.\n\t                str = this.source.substr(this.index, 4);\n\t                if (str === '>>>=') {\n\t                    this.index += 4;\n\t                }\n\t                else {\n\t                    // 3-character punctuators.\n\t                    str = str.substr(0, 3);\n\t                    if (str === '===' || str === '!==' || str === '>>>' ||\n\t                        str === '<<=' || str === '>>=' || str === '**=') {\n\t                        this.index += 3;\n\t                    }\n\t                    else {\n\t                        // 2-character punctuators.\n\t                        str = str.substr(0, 2);\n\t                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||\n\t                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||\n\t                            str === '++' || str === '--' || str === '<<' || str === '>>' ||\n\t                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||\n\t                            str === '<=' || str === '>=' || str === '=>' || str === '**') {\n\t                            this.index += 2;\n\t                        }\n\t                        else {\n\t                            // 1-character punctuators.\n\t                            str = this.source[this.index];\n\t                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\n\t                                ++this.index;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t        }\n\t        if (this.index === start) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 7 /* Punctuator */,\n\t            value: str,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    Scanner.prototype.scanHexLiteral = function (start) {\n\t        var num = '';\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt('0x' + num, 16),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanBinaryLiteral = function (start) {\n\t        var num = '';\n\t        var ch;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index];\n\t            if (ch !== '0' && ch !== '1') {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            // only 0b or 0B\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!this.eof()) {\n\t            ch = this.source.charCodeAt(this.index);\n\t            /* istanbul ignore else */\n\t            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 2),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanOctalLiteral = function (prefix, start) {\n\t        var num = '';\n\t        var octal = false;\n\t        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\n\t            octal = true;\n\t            num = '0' + this.source[this.index++];\n\t        }\n\t        else {\n\t            ++this.index;\n\t        }\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (!octal && num.length === 0) {\n\t            // only 0o or 0O\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 8),\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.isImplicitOctalLiteral = function () {\n\t        // Implicit octal, unless there is a non-octal digit.\n\t        // (Annex B.1.1 on Numeric Literals)\n\t        for (var i = this.index + 1; i < this.length; ++i) {\n\t            var ch = this.source[i];\n\t            if (ch === '8' || ch === '9') {\n\t                return false;\n\t            }\n\t            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                return true;\n\t            }\n\t        }\n\t        return true;\n\t    };\n\t    Scanner.prototype.scanNumericLiteral = function () {\n\t        var start = this.index;\n\t        var ch = this.source[start];\n\t        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');\n\t        var num = '';\n\t        if (ch !== '.') {\n\t            num = this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            // Hex number starts with '0x'.\n\t            // Octal number starts with '0'.\n\t            // Octal number in ES6 starts with '0o'.\n\t            // Binary number in ES6 starts with '0b'.\n\t            if (num === '0') {\n\t                if (ch === 'x' || ch === 'X') {\n\t                    ++this.index;\n\t                    return this.scanHexLiteral(start);\n\t                }\n\t                if (ch === 'b' || ch === 'B') {\n\t                    ++this.index;\n\t                    return this.scanBinaryLiteral(start);\n\t                }\n\t                if (ch === 'o' || ch === 'O') {\n\t                    return this.scanOctalLiteral(ch, start);\n\t                }\n\t                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                    if (this.isImplicitOctalLiteral()) {\n\t                        return this.scanOctalLiteral(ch, start);\n\t                    }\n\t                }\n\t            }\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === '.') {\n\t            num += this.source[this.index++];\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === 'e' || ch === 'E') {\n\t            num += this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            if (ch === '+' || ch === '-') {\n\t                num += this.source[this.index++];\n\t            }\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                    num += this.source[this.index++];\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseFloat(num),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-string-literals\n\t    Scanner.prototype.scanStringLiteral = function () {\n\t        var start = this.index;\n\t        var quote = this.source[start];\n\t        assert_1.assert((quote === '\\'' || quote === '\"'), 'String literal must starts with a quote');\n\t        ++this.index;\n\t        var octal = false;\n\t        var str = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === quote) {\n\t                quote = '';\n\t                break;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                str += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var unescaped_1 = this.scanHexEscape(ch);\n\t                                if (unescaped_1 === null) {\n\t                                    this.throwUnexpectedToken();\n\t                                }\n\t                                str += unescaped_1;\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            str += unescaped;\n\t                            break;\n\t                        case 'n':\n\t                            str += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            str += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            str += '\\t';\n\t                            break;\n\t                        case 'b':\n\t                            str += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            str += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            str += '\\x0B';\n\t                            break;\n\t                        case '8':\n\t                        case '9':\n\t                            str += ch;\n\t                            this.tolerateUnexpectedToken();\n\t                            break;\n\t                        default:\n\t                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                var octToDec = this.octalToDecimal(ch);\n\t                                octal = octToDec.octal || octal;\n\t                                str += String.fromCharCode(octToDec.code);\n\t                            }\n\t                            else {\n\t                                str += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            else {\n\t                str += ch;\n\t            }\n\t        }\n\t        if (quote !== '') {\n\t            this.index = start;\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 8 /* StringLiteral */,\n\t            value: str,\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\n\t    Scanner.prototype.scanTemplate = function () {\n\t        var cooked = '';\n\t        var terminated = false;\n\t        var start = this.index;\n\t        var head = (this.source[start] === '`');\n\t        var tail = false;\n\t        var rawOffset = 2;\n\t        ++this.index;\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === '`') {\n\t                rawOffset = 1;\n\t                tail = true;\n\t                terminated = true;\n\t                break;\n\t            }\n\t            else if (ch === '$') {\n\t                if (this.source[this.index] === '{') {\n\t                    this.curlyStack.push('${');\n\t                    ++this.index;\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                cooked += ch;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'n':\n\t                            cooked += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            cooked += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            cooked += '\\t';\n\t                            break;\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                cooked += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var restore = this.index;\n\t                                var unescaped_2 = this.scanHexEscape(ch);\n\t                                if (unescaped_2 !== null) {\n\t                                    cooked += unescaped_2;\n\t                                }\n\t                                else {\n\t                                    this.index = restore;\n\t                                    cooked += ch;\n\t                                }\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            cooked += unescaped;\n\t                            break;\n\t                        case 'b':\n\t                            cooked += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            cooked += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            cooked += '\\v';\n\t                            break;\n\t                        default:\n\t                            if (ch === '0') {\n\t                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                                    // Illegal: \\01 \\02 and so on\n\t                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                                }\n\t                                cooked += '\\0';\n\t                            }\n\t                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                // Illegal: \\1 \\2\n\t                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                            }\n\t                            else {\n\t                                cooked += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.lineNumber;\n\t                if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                    ++this.index;\n\t                }\n\t                this.lineStart = this.index;\n\t                cooked += '\\n';\n\t            }\n\t            else {\n\t                cooked += ch;\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!head) {\n\t            this.curlyStack.pop();\n\t        }\n\t        return {\n\t            type: 10 /* Template */,\n\t            value: this.source.slice(start + 1, this.index - rawOffset),\n\t            cooked: cooked,\n\t            head: head,\n\t            tail: tail,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t    Scanner.prototype.testRegExp = function (pattern, flags) {\n\t        // The BMP character to use as a replacement for astral symbols when\n\t        // translating an ES6 \"u\"-flagged pattern to an ES5-compatible\n\t        // approximation.\n\t        // Note: replacing with '\\uFFFF' enables false positives in unlikely\n\t        // scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\n\t        // pattern that would not be detected by this substitution.\n\t        var astralSubstitute = '\\uFFFF';\n\t        var tmp = pattern;\n\t        var self = this;\n\t        if (flags.indexOf('u') >= 0) {\n\t            tmp = tmp\n\t                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\n\t                var codePoint = parseInt($1 || $2, 16);\n\t                if (codePoint > 0x10FFFF) {\n\t                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t                }\n\t                if (codePoint <= 0xFFFF) {\n\t                    return String.fromCharCode(codePoint);\n\t                }\n\t                return astralSubstitute;\n\t            })\n\t                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\n\t        }\n\t        // First, detect invalid regular expressions.\n\t        try {\n\t            RegExp(tmp);\n\t        }\n\t        catch (e) {\n\t            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t        }\n\t        // Return a regular expression object for this pattern-flag pair, or\n\t        // `null` in case the current environment doesn't support the flags it\n\t        // uses.\n\t        try {\n\t            return new RegExp(pattern, flags);\n\t        }\n\t        catch (exception) {\n\t            /* istanbul ignore next */\n\t            return null;\n\t        }\n\t    };\n\t    Scanner.prototype.scanRegExpBody = function () {\n\t        var ch = this.source[this.index];\n\t        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\n\t        var str = this.source[this.index++];\n\t        var classMarker = false;\n\t        var terminated = false;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            str += ch;\n\t            if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t                }\n\t                str += ch;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t            }\n\t            else if (classMarker) {\n\t                if (ch === ']') {\n\t                    classMarker = false;\n\t                }\n\t            }\n\t            else {\n\t                if (ch === '/') {\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                else if (ch === '[') {\n\t                    classMarker = true;\n\t                }\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t        }\n\t        // Exclude leading and trailing slash.\n\t        return str.substr(1, str.length - 2);\n\t    };\n\t    Scanner.prototype.scanRegExpFlags = function () {\n\t        var str = '';\n\t        var flags = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index];\n\t            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            ++this.index;\n\t            if (ch === '\\\\' && !this.eof()) {\n\t                ch = this.source[this.index];\n\t                if (ch === 'u') {\n\t                    ++this.index;\n\t                    var restore = this.index;\n\t                    var char = this.scanHexEscape('u');\n\t                    if (char !== null) {\n\t                        flags += char;\n\t                        for (str += '\\\\u'; restore < this.index; ++restore) {\n\t                            str += this.source[restore];\n\t                        }\n\t                    }\n\t                    else {\n\t                        this.index = restore;\n\t                        flags += 'u';\n\t                        str += '\\\\u';\n\t                    }\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t                else {\n\t                    str += '\\\\';\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t            }\n\t            else {\n\t                flags += ch;\n\t                str += ch;\n\t            }\n\t        }\n\t        return flags;\n\t    };\n\t    Scanner.prototype.scanRegExp = function () {\n\t        var start = this.index;\n\t        var pattern = this.scanRegExpBody();\n\t        var flags = this.scanRegExpFlags();\n\t        var value = this.testRegExp(pattern, flags);\n\t        return {\n\t            type: 9 /* RegularExpression */,\n\t            value: '',\n\t            pattern: pattern,\n\t            flags: flags,\n\t            regex: value,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.lex = function () {\n\t        if (this.eof()) {\n\t            return {\n\t                type: 2 /* EOF */,\n\t                value: '',\n\t                lineNumber: this.lineNumber,\n\t                lineStart: this.lineStart,\n\t                start: this.index,\n\t                end: this.index\n\t            };\n\t        }\n\t        var cp = this.source.charCodeAt(this.index);\n\t        if (character_1.Character.isIdentifierStart(cp)) {\n\t            return this.scanIdentifier();\n\t        }\n\t        // Very common: ( and ) and ;\n\t        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\n\t            return this.scanPunctuator();\n\t        }\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\n\t        if (cp === 0x27 || cp === 0x22) {\n\t            return this.scanStringLiteral();\n\t        }\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\n\t        // to check the next character.\n\t        if (cp === 0x2E) {\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\n\t                return this.scanNumericLiteral();\n\t            }\n\t            return this.scanPunctuator();\n\t        }\n\t        if (character_1.Character.isDecimalDigit(cp)) {\n\t            return this.scanNumericLiteral();\n\t        }\n\t        // Template literals start with ` (U+0060) for template head\n\t        // or } (U+007D) for template middle or template tail.\n\t        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {\n\t            return this.scanTemplate();\n\t        }\n\t        // Possible identifier start in a surrogate pair.\n\t        if (cp >= 0xD800 && cp < 0xDFFF) {\n\t            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\n\t                return this.scanIdentifier();\n\t            }\n\t        }\n\t        return this.scanPunctuator();\n\t    };\n\t    return Scanner;\n\t}());\n\texports.Scanner = Scanner;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.TokenName = {};\n\texports.TokenName[1 /* BooleanLiteral */] = 'Boolean';\n\texports.TokenName[2 /* EOF */] = '<end>';\n\texports.TokenName[3 /* Identifier */] = 'Identifier';\n\texports.TokenName[4 /* Keyword */] = 'Keyword';\n\texports.TokenName[5 /* NullLiteral */] = 'Null';\n\texports.TokenName[6 /* NumericLiteral */] = 'Numeric';\n\texports.TokenName[7 /* Punctuator */] = 'Punctuator';\n\texports.TokenName[8 /* StringLiteral */] = 'String';\n\texports.TokenName[9 /* RegularExpression */] = 'RegularExpression';\n\texports.TokenName[10 /* Template */] = 'Template';\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// Generated by generate-xhtml-entities.js. DO NOT MODIFY!\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.XHTMLEntities = {\n\t    quot: '\\u0022',\n\t    amp: '\\u0026',\n\t    apos: '\\u0027',\n\t    gt: '\\u003E',\n\t    nbsp: '\\u00A0',\n\t    iexcl: '\\u00A1',\n\t    cent: '\\u00A2',\n\t    pound: '\\u00A3',\n\t    curren: '\\u00A4',\n\t    yen: '\\u00A5',\n\t    brvbar: '\\u00A6',\n\t    sect: '\\u00A7',\n\t    uml: '\\u00A8',\n\t    copy: '\\u00A9',\n\t    ordf: '\\u00AA',\n\t    laquo: '\\u00AB',\n\t    not: '\\u00AC',\n\t    shy: '\\u00AD',\n\t    reg: '\\u00AE',\n\t    macr: '\\u00AF',\n\t    deg: '\\u00B0',\n\t    plusmn: '\\u00B1',\n\t    sup2: '\\u00B2',\n\t    sup3: '\\u00B3',\n\t    acute: '\\u00B4',\n\t    micro: '\\u00B5',\n\t    para: '\\u00B6',\n\t    middot: '\\u00B7',\n\t    cedil: '\\u00B8',\n\t    sup1: '\\u00B9',\n\t    ordm: '\\u00BA',\n\t    raquo: '\\u00BB',\n\t    frac14: '\\u00BC',\n\t    frac12: '\\u00BD',\n\t    frac34: '\\u00BE',\n\t    iquest: '\\u00BF',\n\t    Agrave: '\\u00C0',\n\t    Aacute: '\\u00C1',\n\t    Acirc: '\\u00C2',\n\t    Atilde: '\\u00C3',\n\t    Auml: '\\u00C4',\n\t    Aring: '\\u00C5',\n\t    AElig: '\\u00C6',\n\t    Ccedil: '\\u00C7',\n\t    Egrave: '\\u00C8',\n\t    Eacute: '\\u00C9',\n\t    Ecirc: '\\u00CA',\n\t    Euml: '\\u00CB',\n\t    Igrave: '\\u00CC',\n\t    Iacute: '\\u00CD',\n\t    Icirc: '\\u00CE',\n\t    Iuml: '\\u00CF',\n\t    ETH: '\\u00D0',\n\t    Ntilde: '\\u00D1',\n\t    Ograve: '\\u00D2',\n\t    Oacute: '\\u00D3',\n\t    Ocirc: '\\u00D4',\n\t    Otilde: '\\u00D5',\n\t    Ouml: '\\u00D6',\n\t    times: '\\u00D7',\n\t    Oslash: '\\u00D8',\n\t    Ugrave: '\\u00D9',\n\t    Uacute: '\\u00DA',\n\t    Ucirc: '\\u00DB',\n\t    Uuml: '\\u00DC',\n\t    Yacute: '\\u00DD',\n\t    THORN: '\\u00DE',\n\t    szlig: '\\u00DF',\n\t    agrave: '\\u00E0',\n\t    aacute: '\\u00E1',\n\t    acirc: '\\u00E2',\n\t    atilde: '\\u00E3',\n\t    auml: '\\u00E4',\n\t    aring: '\\u00E5',\n\t    aelig: '\\u00E6',\n\t    ccedil: '\\u00E7',\n\t    egrave: '\\u00E8',\n\t    eacute: '\\u00E9',\n\t    ecirc: '\\u00EA',\n\t    euml: '\\u00EB',\n\t    igrave: '\\u00EC',\n\t    iacute: '\\u00ED',\n\t    icirc: '\\u00EE',\n\t    iuml: '\\u00EF',\n\t    eth: '\\u00F0',\n\t    ntilde: '\\u00F1',\n\t    ograve: '\\u00F2',\n\t    oacute: '\\u00F3',\n\t    ocirc: '\\u00F4',\n\t    otilde: '\\u00F5',\n\t    ouml: '\\u00F6',\n\t    divide: '\\u00F7',\n\t    oslash: '\\u00F8',\n\t    ugrave: '\\u00F9',\n\t    uacute: '\\u00FA',\n\t    ucirc: '\\u00FB',\n\t    uuml: '\\u00FC',\n\t    yacute: '\\u00FD',\n\t    thorn: '\\u00FE',\n\t    yuml: '\\u00FF',\n\t    OElig: '\\u0152',\n\t    oelig: '\\u0153',\n\t    Scaron: '\\u0160',\n\t    scaron: '\\u0161',\n\t    Yuml: '\\u0178',\n\t    fnof: '\\u0192',\n\t    circ: '\\u02C6',\n\t    tilde: '\\u02DC',\n\t    Alpha: '\\u0391',\n\t    Beta: '\\u0392',\n\t    Gamma: '\\u0393',\n\t    Delta: '\\u0394',\n\t    Epsilon: '\\u0395',\n\t    Zeta: '\\u0396',\n\t    Eta: '\\u0397',\n\t    Theta: '\\u0398',\n\t    Iota: '\\u0399',\n\t    Kappa: '\\u039A',\n\t    Lambda: '\\u039B',\n\t    Mu: '\\u039C',\n\t    Nu: '\\u039D',\n\t    Xi: '\\u039E',\n\t    Omicron: '\\u039F',\n\t    Pi: '\\u03A0',\n\t    Rho: '\\u03A1',\n\t    Sigma: '\\u03A3',\n\t    Tau: '\\u03A4',\n\t    Upsilon: '\\u03A5',\n\t    Phi: '\\u03A6',\n\t    Chi: '\\u03A7',\n\t    Psi: '\\u03A8',\n\t    Omega: '\\u03A9',\n\t    alpha: '\\u03B1',\n\t    beta: '\\u03B2',\n\t    gamma: '\\u03B3',\n\t    delta: '\\u03B4',\n\t    epsilon: '\\u03B5',\n\t    zeta: '\\u03B6',\n\t    eta: '\\u03B7',\n\t    theta: '\\u03B8',\n\t    iota: '\\u03B9',\n\t    kappa: '\\u03BA',\n\t    lambda: '\\u03BB',\n\t    mu: '\\u03BC',\n\t    nu: '\\u03BD',\n\t    xi: '\\u03BE',\n\t    omicron: '\\u03BF',\n\t    pi: '\\u03C0',\n\t    rho: '\\u03C1',\n\t    sigmaf: '\\u03C2',\n\t    sigma: '\\u03C3',\n\t    tau: '\\u03C4',\n\t    upsilon: '\\u03C5',\n\t    phi: '\\u03C6',\n\t    chi: '\\u03C7',\n\t    psi: '\\u03C8',\n\t    omega: '\\u03C9',\n\t    thetasym: '\\u03D1',\n\t    upsih: '\\u03D2',\n\t    piv: '\\u03D6',\n\t    ensp: '\\u2002',\n\t    emsp: '\\u2003',\n\t    thinsp: '\\u2009',\n\t    zwnj: '\\u200C',\n\t    zwj: '\\u200D',\n\t    lrm: '\\u200E',\n\t    rlm: '\\u200F',\n\t    ndash: '\\u2013',\n\t    mdash: '\\u2014',\n\t    lsquo: '\\u2018',\n\t    rsquo: '\\u2019',\n\t    sbquo: '\\u201A',\n\t    ldquo: '\\u201C',\n\t    rdquo: '\\u201D',\n\t    bdquo: '\\u201E',\n\t    dagger: '\\u2020',\n\t    Dagger: '\\u2021',\n\t    bull: '\\u2022',\n\t    hellip: '\\u2026',\n\t    permil: '\\u2030',\n\t    prime: '\\u2032',\n\t    Prime: '\\u2033',\n\t    lsaquo: '\\u2039',\n\t    rsaquo: '\\u203A',\n\t    oline: '\\u203E',\n\t    frasl: '\\u2044',\n\t    euro: '\\u20AC',\n\t    image: '\\u2111',\n\t    weierp: '\\u2118',\n\t    real: '\\u211C',\n\t    trade: '\\u2122',\n\t    alefsym: '\\u2135',\n\t    larr: '\\u2190',\n\t    uarr: '\\u2191',\n\t    rarr: '\\u2192',\n\t    darr: '\\u2193',\n\t    harr: '\\u2194',\n\t    crarr: '\\u21B5',\n\t    lArr: '\\u21D0',\n\t    uArr: '\\u21D1',\n\t    rArr: '\\u21D2',\n\t    dArr: '\\u21D3',\n\t    hArr: '\\u21D4',\n\t    forall: '\\u2200',\n\t    part: '\\u2202',\n\t    exist: '\\u2203',\n\t    empty: '\\u2205',\n\t    nabla: '\\u2207',\n\t    isin: '\\u2208',\n\t    notin: '\\u2209',\n\t    ni: '\\u220B',\n\t    prod: '\\u220F',\n\t    sum: '\\u2211',\n\t    minus: '\\u2212',\n\t    lowast: '\\u2217',\n\t    radic: '\\u221A',\n\t    prop: '\\u221D',\n\t    infin: '\\u221E',\n\t    ang: '\\u2220',\n\t    and: '\\u2227',\n\t    or: '\\u2228',\n\t    cap: '\\u2229',\n\t    cup: '\\u222A',\n\t    int: '\\u222B',\n\t    there4: '\\u2234',\n\t    sim: '\\u223C',\n\t    cong: '\\u2245',\n\t    asymp: '\\u2248',\n\t    ne: '\\u2260',\n\t    equiv: '\\u2261',\n\t    le: '\\u2264',\n\t    ge: '\\u2265',\n\t    sub: '\\u2282',\n\t    sup: '\\u2283',\n\t    nsub: '\\u2284',\n\t    sube: '\\u2286',\n\t    supe: '\\u2287',\n\t    oplus: '\\u2295',\n\t    otimes: '\\u2297',\n\t    perp: '\\u22A5',\n\t    sdot: '\\u22C5',\n\t    lceil: '\\u2308',\n\t    rceil: '\\u2309',\n\t    lfloor: '\\u230A',\n\t    rfloor: '\\u230B',\n\t    loz: '\\u25CA',\n\t    spades: '\\u2660',\n\t    clubs: '\\u2663',\n\t    hearts: '\\u2665',\n\t    diams: '\\u2666',\n\t    lang: '\\u27E8',\n\t    rang: '\\u27E9'\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar token_1 = __webpack_require__(13);\n\tvar Reader = (function () {\n\t    function Reader() {\n\t        this.values = [];\n\t        this.curly = this.paren = -1;\n\t    }\n\t    // A function following one of those tokens is an expression.\n\t    Reader.prototype.beforeFunctionExpression = function (t) {\n\t        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n\t            'return', 'case', 'delete', 'throw', 'void',\n\t            // assignment operators\n\t            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\n\t            '&=', '|=', '^=', ',',\n\t            // binary/unary operators\n\t            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n\t            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n\t            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\n\t    };\n\t    // Determine if forward slash (/) is an operator or part of a regular expression\n\t    // https://github.com/mozilla/sweet.js/wiki/design\n\t    Reader.prototype.isRegexStart = function () {\n\t        var previous = this.values[this.values.length - 1];\n\t        var regex = (previous !== null);\n\t        switch (previous) {\n\t            case 'this':\n\t            case ']':\n\t                regex = false;\n\t                break;\n\t            case ')':\n\t                var keyword = this.values[this.paren - 1];\n\t                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');\n\t                break;\n\t            case '}':\n\t                // Dividing a function by anything makes little sense,\n\t                // but we have to check for that.\n\t                regex = false;\n\t                if (this.values[this.curly - 3] === 'function') {\n\t                    // Anonymous function, e.g. function(){} /42\n\t                    var check = this.values[this.curly - 4];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : false;\n\t                }\n\t                else if (this.values[this.curly - 4] === 'function') {\n\t                    // Named function, e.g. function f(){} /42/\n\t                    var check = this.values[this.curly - 5];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : true;\n\t                }\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        return regex;\n\t    };\n\t    Reader.prototype.push = function (token) {\n\t        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\n\t            if (token.value === '{') {\n\t                this.curly = this.values.length;\n\t            }\n\t            else if (token.value === '(') {\n\t                this.paren = this.values.length;\n\t            }\n\t            this.values.push(token.value);\n\t        }\n\t        else {\n\t            this.values.push(null);\n\t        }\n\t    };\n\t    return Reader;\n\t}());\n\tvar Tokenizer = (function () {\n\t    function Tokenizer(code, config) {\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;\n\t        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;\n\t        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;\n\t        this.buffer = [];\n\t        this.reader = new Reader();\n\t    }\n\t    Tokenizer.prototype.errors = function () {\n\t        return this.errorHandler.errors;\n\t    };\n\t    Tokenizer.prototype.getNextToken = function () {\n\t        if (this.buffer.length === 0) {\n\t            var comments = this.scanner.scanComments();\n\t            if (this.scanner.trackComment) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);\n\t                    var comment = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: value\n\t                    };\n\t                    if (this.trackRange) {\n\t                        comment.range = e.range;\n\t                    }\n\t                    if (this.trackLoc) {\n\t                        comment.loc = e.loc;\n\t                    }\n\t                    this.buffer.push(comment);\n\t                }\n\t            }\n\t            if (!this.scanner.eof()) {\n\t                var loc = void 0;\n\t                if (this.trackLoc) {\n\t                    loc = {\n\t                        start: {\n\t                            line: this.scanner.lineNumber,\n\t                            column: this.scanner.index - this.scanner.lineStart\n\t                        },\n\t                        end: {}\n\t                    };\n\t                }\n\t                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();\n\t                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();\n\t                this.reader.push(token);\n\t                var entry = {\n\t                    type: token_1.TokenName[token.type],\n\t                    value: this.scanner.source.slice(token.start, token.end)\n\t                };\n\t                if (this.trackRange) {\n\t                    entry.range = [token.start, token.end];\n\t                }\n\t                if (this.trackLoc) {\n\t                    loc.end = {\n\t                        line: this.scanner.lineNumber,\n\t                        column: this.scanner.index - this.scanner.lineStart\n\t                    };\n\t                    entry.loc = loc;\n\t                }\n\t                if (token.type === 9 /* RegularExpression */) {\n\t                    var pattern = token.pattern;\n\t                    var flags = token.flags;\n\t                    entry.regex = { pattern: pattern, flags: flags };\n\t                }\n\t                this.buffer.push(entry);\n\t            }\n\t        }\n\t        return this.buffer.shift();\n\t    };\n\t    return Tokenizer;\n\t}());\n\texports.Tokenizer = Tokenizer;\n\n\n/***/ }\n/******/ ])\n});\n;", "\"use strict\";\n// This module is suitable for passing as options.parser when calling\n// recast.parse to process ECMAScript code with Esprima:\n//\n//   const ast = recast.parse(source, {\n//     parser: require(\"recast/parsers/esprima\")\n//   });\n//\nimport { getOption } from \"../lib/util.js\";\nexport function parse(source, options) {\n    var comments = [];\n    var ast = require(\"esprima\").parse(source, {\n        loc: true,\n        locations: true,\n        comment: true,\n        onComment: comments,\n        range: getOption(options, \"range\", false),\n        tolerant: getOption(options, \"tolerant\", true),\n        tokens: true,\n        jsx: getOption(options, \"jsx\", false),\n        sourceType: getOption(options, \"sourceType\", \"module\"),\n    });\n    if (!Array.isArray(ast.comments)) {\n        ast.comments = comments;\n    }\n    return ast;\n}\n", "import type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType;\n  sourceFilename?: string;\n  startColumn: number;\n  startLine: number;\n  allowAwaitOutsideFunction: boolean;\n  allowReturnOutsideFunction: boolean;\n  allowNewTargetOutsideFunction: boolean;\n  allowImportExportEverywhere: boolean;\n  allowSuperOutsideMethod: boolean;\n  allowUndeclaredExports: boolean;\n  plugins: PluginList;\n  strictMode: boolean | undefined | null;\n  ranges: boolean;\n  tokens: boolean;\n  createParenthesizedExpressions: boolean;\n  errorRecovery: boolean;\n  attachComment: boolean;\n  annexB: boolean;\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, new.target outside a function or class is not\n  // considered an error.\n  allowNewTargetOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n  // When enabled, the parser will support Annex B syntax.\n  // https://tc39.es/ecma262/#sec-additional-ecmascript-features-for-web-browsers\n  annexB: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts?: Options | null): Options {\n  if (opts && opts.annexB != null && opts.annexB !== false) {\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\n  }\n\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    // @ts-expect-error key may not exist in opts\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n", "// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext;\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n", "import { types as tc, type TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = typeof tt;\n\nexport const tt = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _using: createKeywordLike(\"using\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  _satisfies: createKeywordLike(\"satisfies\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n} as const;\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n", "export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n", "export const enum ParseErrorCode {\n  SyntaxError = \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n}\n\nexport type SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\nexport type ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\nexport type ParseErrorCredentials<ErrorDetails> = {\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  toMessage: ToMessage<ErrorDetails>;\n};\n\nconst reflect = (keys: string[], last = keys.length - 1) => ({\n  get(this: unknown): unknown {\n    return keys.reduce(\n      (object, key) =>\n        // @ts-expect-error key should index object\n        object[key],\n      this,\n    );\n  },\n  set(this: unknown, value: unknown) {\n    keys.reduce(\n      // @ts-expect-error key should index item\n      (item, key, i) => (i === last ? (item[key] = value) : item[key]),\n      this,\n    );\n  },\n});\n\nconst instantiate = <T>(\n  constructor: new () => T,\n  properties: any,\n  descriptors: any,\n) =>\n  Object.keys(descriptors)\n    .map(key => [key, descriptors[key]])\n    .filter(([, descriptor]) => !!descriptor)\n    .map(([key, descriptor]) => [\n      key,\n      typeof descriptor === \"function\"\n        ? { value: descriptor, enumerable: false }\n        : typeof descriptor.reflect === \"string\"\n        ? { ...descriptor, ...reflect(descriptor.reflect.split(\".\")) }\n        : descriptor,\n    ])\n    .reduce(\n      (instance, [key, descriptor]) =>\n        Object.defineProperty(instance, key, {\n          configurable: true,\n          ...descriptor,\n        }),\n      Object.assign(new constructor(), properties),\n    );\n\nexport { instantiate };\n", "import { ParseErrorCode } from \"../parse-error\";\n\nexport default {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n};\n", "const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = keyof Omit<\n  typeof NodeDescriptions,\n  \"UpdateExpression\"\n>;\n\ntype NodeWithDescription =\n  | {\n      type: \"UpdateExpression\";\n      prefix: boolean;\n    }\n  | {\n      type: NodeTypesWithDescriptions;\n    };\n\n// @ts-expect-error prefix is specified only when type is UpdateExpression\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = ({ type, prefix }: NodeWithDescription) =>\n  type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[String(prefix) as \"true\" | \"false\"]\n    : NodeDescriptions[type];\n\nexport default toNodeDescription;\n", "import toNodeDescription from \"./to-node-description\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\"; prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"ImportSpecifier\"\n        | \"ImportNamespaceSpecifier\"\n        | \"ImportDefaultSpecifier\"\n        | \"ParenthesizedExpression\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\";\n    };\n\nexport default {\n  AccessorIsGenerator: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter:\n    \"'await' is not allowed in async function parameters.\",\n  AwaitInUsingBinding:\n    \"'await' is not allowed to be used as a name in 'using' declarations.\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter:\n    \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind,\n  }: {\n    kind: \"const\" | \"destructuring\";\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses:\n    \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\n  DecoratorsBeforeAfterExport:\n    \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({ exportName }: { exportName: string }) =>\n    `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName,\n  }: {\n    localName: string;\n    exportName: string;\n  }) =>\n    `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'.\",\n\n  ForInOfLoopInitializer: ({\n    type,\n  }: {\n    type: \"ForInStatement\" | \"ForOfStatement\";\n  }) =>\n    `'${\n      type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n    }' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block.\",\n\n  IllegalBreakContinue: ({\n    type,\n  }: {\n    type: \"BreakStatement\" | \"ContinueStatement\";\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: ({ importName }: { importName: string }) =>\n    `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({ maxArgumentCount }: { maxArgumentCount: 1 | 2 }) =>\n    `\\`import()\\` requires exactly ${\n      maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n    }.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault:\n    \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding:\n    'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags:\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({ radix }: { radix: number }) =>\n    `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({ identifierName }: { identifierName: string }) =>\n    `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({ unexpected }: { unexpected: string }) =>\n    `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName,\n  }: {\n    identifierName: string;\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({ labelName }: { labelName: string }) =>\n    `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({ missingPlugin }: { missingPlugin: [string] }) =>\n    `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also, seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: ({ missingPlugin }: { missingPlugin: string[] }) =>\n    `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({ key }: { key: string }) =>\n    `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode,\n  }: {\n    surrogateCharCode: number;\n  }) =>\n    `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n      16,\n    )}'.`,\n  ModuleExportUndefined: ({ localName }: { localName: string }) =>\n    `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar:\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor:\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({ identifierName }: { identifierName: string }) =>\n    `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\n  SloppyFunctionAnnexB:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed:\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({ keyword }: { keyword: string }) =>\n    `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget:\n    \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected,\n  }: {\n    expected?: string | null;\n    unexpected?: string | null;\n  }) =>\n    `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n      expected ? `, expected \"${expected}\"` : \"\"\n    }`,\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration:\n    \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport:\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName,\n  }: {\n    target: string;\n    onlyValidPropertyName: string;\n  }) =>\n    `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper:\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationHasBindingPattern:\n    \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0.\",\n};\n", "export default {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: ({ referenceName }: { referenceName: string }) =>\n    `Assigning to '${referenceName}' in strict mode.`,\n\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: ({ bindingName }: { bindingName: string }) =>\n    `Binding '${bindingName}' in strict mode.`,\n\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n\n  StrictWith: \"'with' in strict mode.\",\n};\n", "import toNodeDescription from \"./to-node-description\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n] as const);\n\ntype GetSetMemberType<T extends Set<any>> = T extends Set<infer M>\n  ? M\n  : unknown;\n\ntype UnparenthesizedPipeBodyTypes = GetSetMemberType<\n  typeof UnparenthesizedPipeBodyDescriptions\n>;\n\nexport default {\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter:\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound:\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({ token }: { token: string }) =>\n    `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused:\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({ type }: { type: UnparenthesizedPipeBodyTypes }) =>\n    `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n      type,\n    })}; please wrap it in parentheses.`,\n\n  // Messages whose codes start with “Pipeline” or “PrimaryTopic”\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n};\n", "import { Position } from \"./util/location\";\nimport {\n  instantiate,\n  ParseErrorCode,\n  type ParseErrorCredentials,\n  type ToMessage,\n  type SyntaxPlugin,\n} from \"./parse-error/credentials\";\nimport type { Undone } from \"./parser/node\";\nimport type { Node } from \"./types\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  missingPlugin?: string | string[];\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  // pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = (a: {\n  loc: Position;\n  details: ErrorDetails;\n}) => ParseError<ErrorDetails>;\n\nfunction toParseErrorConstructor<ErrorDetails extends object>({\n  toMessage,\n  ...properties\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  type ConstructorArgument = {\n    loc: Position;\n    details: ErrorDetails;\n  };\n\n  return function constructor({ loc, details }: ConstructorArgument) {\n    return instantiate(\n      SyntaxError,\n      { ...properties, loc },\n      {\n        clone(\n          overrides: {\n            loc?: Position;\n            details?: ErrorDetails;\n          } = {},\n        ) {\n          const loc = (overrides.loc || {}) as Partial<Position>;\n          return constructor({\n            loc: new Position(\n              \"line\" in loc ? loc.line : this.loc.line,\n              \"column\" in loc ? loc.column : this.loc.column,\n              \"index\" in loc ? loc.index : this.loc.index,\n            ),\n            details: { ...this.details, ...overrides.details },\n          });\n        },\n        details: { value: details, enumerable: false },\n        message: {\n          get(this: ConstructorArgument): string {\n            return `${toMessage(this.details)} (${this.loc.line}:${\n              this.loc.column\n            })`;\n          },\n          set(value: string) {\n            Object.defineProperty(this, \"message\", { value });\n          },\n        },\n        pos: { reflect: \"loc.index\", enumerable: true },\n        missingPlugin: \"missingPlugin\" in details && {\n          reflect: \"details.missingPlugin\",\n          enumerable: true,\n        },\n      },\n    ) as ParseError<ErrorDetails>;\n  };\n}\n\ntype ParseErrorTemplate =\n  | string\n  | ToMessage<any>\n  | { message: string | ToMessage<any> };\n\ntype ParseErrorTemplates = { [reasonCode: string]: ParseErrorTemplate };\n\n// This is the templated form of `ParseErrorEnum`.\n//\n// Note: We could factor out the return type calculation into something like\n// `ParseErrorConstructor<T extends ParseErrorTemplates>`, and then we could\n// reuse it in the non-templated form of `ParseErrorEnum`, but TypeScript\n// doesn't seem to drill down that far when showing you the computed type of\n// an object in an editor, so we'll leave it inlined for now.\nexport function ParseErrorEnum(a: TemplateStringsArray): <\n  T extends ParseErrorTemplates,\n>(\n  parseErrorTemplates: T,\n) => {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\nexport function ParseErrorEnum<T extends ParseErrorTemplates>(\n  parseErrorTemplates: T,\n  syntaxPlugin?: SyntaxPlugin,\n): {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either:\n//\n// 1. a static error message,\n// 2. `toMessage` functions that define additional necessary `details` needed by\n//    the `ParseError`, or\n// 3. Objects that contain a `message` of one of the above and overridden `code`\n//    and/or `reasonCode`:\n//\n// ParseErrorEnum `optionalSyntaxPlugin` ({\n//   ErrorWithStaticMessage: \"message\",\n//   ErrorWithDynamicMessage: ({ type } : { type: string }) => `${type}`),\n//   ErrorWithOverriddenCodeAndOrReasonCode: {\n//     message: ({ type }: { type: string }) => `${type}`),\n//     code: ParseErrorCode.SourceTypeModuleError,\n//     ...(BABEL_8_BREAKING ? { } : { reasonCode: \"CustomErrorReasonCode\" })\n//   }\n// });\n//\nexport function ParseErrorEnum(\n  argument: TemplateStringsArray | ParseErrorTemplates,\n  syntaxPlugin?: SyntaxPlugin,\n) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return (parseErrorTemplates: ParseErrorTemplates) =>\n      ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {} as Record<\n    string,\n    ParseErrorConstructor<unknown>\n  >;\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = (argument as ParseErrorTemplates)[reasonCode];\n    const { message, ...rest } =\n      typeof template === \"string\"\n        ? { message: () => template }\n        : typeof template === \"function\"\n        ? { message: template }\n        : template;\n    const toMessage = typeof message === \"string\" ? () => message : message;\n\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: ParseErrorCode.SyntaxError,\n      reasonCode,\n      toMessage,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...rest,\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nexport type RaiseProperties<ErrorDetails> = {\n  at: Position | Undone<Node>;\n} & ErrorDetails;\n\nimport ModuleErrors from \"./parse-error/module-errors\";\nimport StandardErrors from \"./parse-error/standard-errors\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors\";\n\nexport * from \"./parse-error/credentials\";\n", "import { type TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport type * as N from \"../types\";\nimport type { Node as NodeType, NodeBase, File } from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { BindingTypes } from \"../util/scopeflags\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object: any, key: string) =>\n  defineProperty(object, key, { enumerable: false, value: object[key] });\n\nfunction toESTreeLocation(node: any) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: typeof Parser) =>\n  class ESTreeParserMixin extends superClass implements Parser {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseRegExpLiteral({ pattern, flags }): N.EstreeRegExpLiteral {\n      let regex: RegExp | null = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt: BigInt | null;\n      try {\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal: null = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T extends N.Node>(value: any) {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    // Cast a Directive to an ExpressionStatement. Mutates the input Directive.\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const expression = directive.value as any as N.EstreeLiteral;\n      delete directive.value;\n\n      expression.type = \"Literal\";\n      // @ts-expect-error N.EstreeLiteral.raw is not defined.\n      expression.raw = expression.extra.raw;\n      expression.value = expression.extra.expressionValue;\n\n      const stmt = directive as any as N.ExpressionStatement;\n      stmt.type = \"ExpressionStatement\";\n      stmt.expression = expression;\n      // @ts-expect-error N.ExpressionStatement.directive is not defined\n      stmt.directive = expression.extra.rawValue;\n\n      delete expression.extra;\n\n      return stmt;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        // @ts-expect-error plugin typings\n        this.checkDeclaration((node as unknown as N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return (method as any as N.EstreeProperty | N.EstreeMethodDefinition)\n        .value.params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: boolean | undefined | null,\n      topLevel: boolean,\n      end: TokenType,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): void {\n      super.parseBlockBody(\n        node,\n        allowDirectives,\n        topLevel,\n        end,\n        afterBlockParse,\n      );\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      // @ts-expect-error estree plugin typings\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // @ts-expect-error mutate AST types\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = node as any;\n      delete node.id;\n      // @ts-expect-error mutate AST types\n      node.name = name;\n      // @ts-expect-error mutate AST types\n      node.type = \"PrivateIdentifier\";\n      return node as unknown as N.EstreePrivateIdentifier;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseLiteral<T extends N.Literal>(value: any, type: T[\"type\"]): T {\n      const node = super.parseLiteral<T>(value, type);\n      // @ts-expect-error mutating AST types\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseMethod<\n      T extends N.ClassPrivateMethod | N.ObjectMethod | N.ClassMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope: boolean = false,\n    ): N.EstreeMethodDefinition {\n      let funcNode = this.startNode<N.MethodLike>();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        // @ts-expect-error todo(flow->ts)\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error mutate AST types\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // @ts-expect-error mutate AST types\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        node.computed = false;\n      }\n      return this.finishNode(\n        // @ts-expect-error cast methods to estree types\n        node as Undone<N.EstreeMethodDefinition>,\n        \"MethodDefinition\",\n      );\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = super.parseClassProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = super.parseClassPrivateProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): N.ObjectMethod | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) as any;\n\n      if (node) {\n        node.type = \"Property\";\n        if ((node as any as N.ClassMethod).kind === \"method\") {\n          node.kind = \"init\";\n        }\n        node.shorthand = false;\n      }\n\n      return node as any;\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startLoc: Position | undefined | null,\n      isPattern: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectProperty | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectProperty(\n        prop,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ) as any;\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node as any;\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return type === \"Property\"\n        ? \"value\"\n        : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(\n      prop: N.Node,\n      isLast: boolean,\n      isLHS: boolean,\n    ) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(Errors.PatternHasAccessor, { at: prop.key });\n      } else if (prop.method) {\n        this.raise(Errors.PatternHasMethod, { at: prop.key });\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n      }\n    }\n\n    finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n      unfinished: Undone<T>,\n      optional: boolean,\n    ): T {\n      const node = super.finishCallExpression(unfinished, optional);\n\n      if (node.callee.type === \"Import\") {\n        (node as N.Node as N.EstreeImportExpression).type = \"ImportExpression\";\n        (node as N.Node as N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          (node as N.Node as N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // arguments isn't optional in the type definition\n        delete node.arguments;\n        // callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(\n      unfinished: Undone<N.AnyExport>,\n      decorators: N.Decorator[] | null,\n    ) {\n      const exportStartLoc = this.state.lastTokStartLoc;\n      const node = super.parseExport(unfinished, decorators);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          // @ts-expect-error mutating AST types\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            // @ts-expect-error mutating AST types\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            // @ts-expect-error mutating AST types\n            node.type = \"ExportAllDeclaration\";\n            // @ts-expect-error mutating AST types\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n        // fallthrough\n        case \"ExportDefaultDeclaration\":\n          {\n            const { declaration } = node;\n            if (\n              declaration?.type === \"ClassDeclaration\" &&\n              declaration.decorators?.length > 0 &&\n              // decorator comes before export\n              declaration.start === node.start\n            ) {\n              this.resetStartLocation(\n                node,\n                // For compatibility with ESLint's keyword-spacing rule, which assumes that an\n                // export declaration must start with export.\n                // https://github.com/babel/babel/issues/15085\n                // Here we reset export declaration's start to be the start of the export token\n                exportStartLoc,\n              );\n            }\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(base, startLoc, noCalls, state);\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    // @ts-expect-error override interfaces\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n\n    finishNodeAt<T extends NodeType>(\n      node: Undone<T>,\n      type: T[\"type\"],\n      endLoc: Position,\n    ): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, startLoc: Position) {\n      super.resetStartLocation(node, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n", "import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,3104,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n", "const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n", "/* eslint max-len: 0 */\n\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n", "// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_STATIC_BLOCK | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b0000000_0000_01,\n             BIND_KIND_TYPE             = 0b0000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b0000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b0000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b0000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b0000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b00000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b00000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b00000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b00001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b00010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b00100000_0000_00,\n             BIND_FLAGS_TS_IMPORT       = 0b01000000_0000_00,\n             // Whether \"let\" should be allowed in bound names in sloppy mode\n             BIND_FLAGS_NO_LET_IN_LEXICAL = 0b10000000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS|BIND_FLAGS_NO_LET_IN_LEXICAL,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | BIND_FLAGS_NO_LET_IN_LEXICAL,\n             BIND_CATCH_PARAM   = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM|BIND_FLAGS_NO_LET_IN_LEXICAL,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE          ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE          ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM    | BIND_FLAGS_TS_CONST_ENUM                                        ,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0                   | BIND_FLAGS_TS_EXPORT_ONLY,\n             BIND_TS_TYPE_IMPORT= 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_TS_IMPORT     ,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n", "import {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport type { Position } from \"./location\";\nimport type * as N from \"../types\";\nimport { Errors } from \"../parse-error\";\nimport type Tokenizer from \"../tokenizer\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope extends Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inTopLevel() {\n    return (this.currentScope().flags & SCOPE_PROGRAM) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n\n  enter(flags: ScopeFlags) {\n    /*:: +createScope: (flags: ScopeFlags) => IScope; */\n    // @ts-expect-error This method will be overwritten by subclasses\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit(): ScopeFlags {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        // Annex B.3.4\n        // https://tc39.es/ecma262/#sec-variablestatements-in-catch-blocks\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n", "import type { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport type * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n", "import type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"../typings\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<any>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: string | undefined | null;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin’s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(\n        pluginOptions,\n      ) as (keyof typeof pluginOptions)[]) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption<\n    PluginName extends ParserPluginWithOptions[0],\n    OptionName extends keyof PluginOptions<PluginName>,\n  >(plugin: PluginName, name: OptionName) {\n    return (this.plugins.get(plugin) as null | PluginOptions<PluginName>)?.[\n      name\n    ];\n  }\n}\n", "/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport type { Undone } from \"./node\";\n\n/**\n * A whitespace token containing comments\n */\nexport type CommentWhitespace = {\n  /**\n   * the start of the whitespace token.\n   */\n  start: number;\n  /**\n   * the end of the whitespace token.\n   */\n  end: number;\n  /**\n   * the containing comments\n   */\n  comments: Array<Comment>;\n  /**\n   * the immediately preceding AST node of the whitespace token\n   */\n  leadingNode: Node | null;\n  /**\n   * the immediately following AST node of the whitespace token\n   */\n  trailingNode: Node | null;\n  /**\n   * the innermost AST node containing the whitespace with minimal size (|end - start|)\n   */\n  containingNode: Node | null;\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setTrailingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setLeadingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nexport function setInnerComments(\n  node: Undone<Node>,\n  comments?: Array<Comment>,\n) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n */\nfunction adjustInnerComments(\n  node: Undone<Node>,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /* eslint-disable no-irregular-whitespace */\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing\n   * ```\n   * async /* 1 *​/ function f() {}\n   * ```\n   * the comment whitespace `/* 1 *​/` has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark `/* 1 *​/` as\n   * inner comments. So `/* 1 *​/` should be detached from the Identifier node.\n   *\n   * @param node the last finished AST node _before_ current token\n   */\n  /* eslint-enable no-irregular-whitespace */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n", "import * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/g;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n", "import type { Options } from \"../options\";\nimport type * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { tt, type TokenType } from \"./types\";\nimport type { Errors } from \"../parse-error\";\nimport { type ParseError } from \"../parse-error\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: \"loop\" | \"switch\" | undefined | null;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // Used to track invalid escape sequences in template literals,\n  // that must be reported if the template is not tagged.\n  firstInvalidTemplateEscapePos: null | Position = null;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this) as (keyof State)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // @ts-expect-error val must conform to S[key]\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: () => Position;\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n  // These boolean properties are not initialized in createLookaheadState()\n  // instead they will only be set by the tokenizer\n  containsEsc?: boolean;\n};\n", "import * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      );\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = { pos, lineStart, curLine };\n      } else {\n        out += res.ch;\n      }\n      ({ pos, lineStart, curLine } = res);\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return process.env.BABEL_8_BREAKING\n    ? { pos, str: out, firstInvalidLoc, lineStart, curLine }\n    : {\n        pos,\n        str: out,\n        firstInvalidLoc,\n        lineStart,\n        curLine,\n        containsInvalid: !!firstInvalidLoc,\n      };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/)!;\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n    /* bailOnError */ !throwOnInvalid,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n  bailOnError: boolean,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n      ? isAllowedNumericSeparatorSibling.dec\n      : radix === 8\n      ? isAllowedNumericSeparatorSibling.oct\n      : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        if (bailOnError) return { n: null, pos };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        if (bailOnError) return { n: null, pos };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && bailOnError) {\n        return { n: null, pos };\n      } else if (\n        val <= 9 &&\n        errors.invalidDigit(pos, lineStart, curLine, radix)\n      ) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n", "/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location\";\nimport CommentsParser, { type CommentWhitespace } from \"../parser/comments\";\nimport type * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types\";\nimport { type TokContext } from \"./context\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n  type RaiseProperties,\n} from \"../parse-error\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n  skipWhiteSpaceInLine,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState, DeferredStrictError } from \"./state\";\n\nimport {\n  readInt,\n  readCodePoint,\n  readStringContents,\n  type IntErrorHandlers,\n  type CodePointErrorHandlers,\n  type StringContentsErrorHandlers,\n} from \"@babel/helper-string-parser\";\n\nimport type { Plugin } from \"../typings\";\n\nfunction buildPosition(pos: number, lineStart: number, curLine: number) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  // This is only valid when using the regexpUnicodeSets plugin\n  charCodes.lowercaseV,\n]);\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default abstract class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // @ts-expect-error For performance we use a simplified tokenizer state structure\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  /**\n   * Similar to nextToken, but it will stop at line break when it is seen before the next token\n   *\n   * @returns {number} position of the next token start or line break, whichever is seen first.\n   * @memberof Tokenizer\n   */\n  nextTokenInLineStart(): number {\n    return this.nextTokenInLineStartSince(this.state.pos);\n  }\n\n  nextTokenInLineStartSince(pos: number): number {\n    skipWhiteSpaceInLine.lastIndex = pos;\n    return skipWhiteSpaceInLine.test(this.input)\n      ? skipWhiteSpaceInLine.lastIndex\n      : pos;\n  }\n\n  /**\n   * Similar to lookaheadCharCode, but it will return the char code of line break if it is\n   * seen before the next token\n   *\n   * @returns {number} char code of the next token start or line break, whichever is seen first.\n   * @memberof Tokenizer\n   */\n  lookaheadInLineCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenInLineStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, { at }),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related properties.\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  // Skips a block comment, whose end is marked by commentEnd.\n  // *-/ is used by the Flow plugin, when parsing block comments nested\n  // inside Flow comments.\n  skipBlockComment(commentEnd: \"*/\" | \"*-/\"): N.CommentBlock | undefined {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment: N.CommentBlock = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + commentEnd.length,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | undefined {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment: N.CommentLine = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment(\"*/\");\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (\n            ch === charCodes.dash &&\n            !this.inModule &&\n            this.options.annexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (\n            ch === charCodes.lessThan &&\n            !this.inModule &&\n            this.options.annexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace: CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val?: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // @ts-expect-error the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          { at: this.state.curPosition() },\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code),\n    });\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      // @ts-expect-error VALID_REGEX_FLAGS.has should accept expanded type: number\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, { at: nextPos() });\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, { at: nextPos() });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen: boolean = false,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const { n, pos } = readInt(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      radix,\n      len,\n      forceLen,\n      allowNumSeparator,\n      this.errorHandlers_readInt,\n      /* bailOnError */ false,\n    );\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        // Numeric literals can't have newlines, so this is safe to do.\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix,\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, { at: startLoc });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, { at: this.state.curPosition() });\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, { at: startLoc });\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos),\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, { at: startLoc });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, { at: startLoc });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, { at: startLoc });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const { code, pos } = readCodePoint(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      throwOnInvalid,\n      this.errorHandlers_readCodePoint,\n    );\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote: number): void {\n    const { str, pos, curLine, lineStart } = readStringContents(\n      quote === charCodes.quotationMark ? \"double\" : \"single\",\n      this.input,\n      this.state.pos + 1, // skip the quote\n      this.state.lineStart,\n      this.state.curLine,\n      this.errorHandlers_readStringContents_string,\n    );\n    this.state.pos = pos + 1; // skip the quote\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(tt.string, str);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    const opening = this.input[this.state.pos];\n    const { str, firstInvalidLoc, pos, curLine, lineStart } =\n      readStringContents(\n        \"template\",\n        this.input,\n        this.state.pos + 1, // skip '`' or `}`\n        this.state.lineStart,\n        this.state.curLine,\n        this.errorHandlers_readStringContents_template,\n      );\n    this.state.pos = pos + 1; // skip '`' or `$`\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(\n        firstInvalidLoc.curLine,\n        firstInvalidLoc.pos - firstInvalidLoc.lineStart,\n        firstInvalidLoc.pos,\n      );\n    }\n\n    if (this.input.codePointAt(pos) === charCodes.graveAccent) {\n      this.finishToken(\n        tt.templateTail,\n        firstInvalidLoc ? null : opening + str + \"`\",\n      );\n    } else {\n      this.state.pos++; // skip '{'\n      this.finishToken(\n        tt.templateNonTail,\n        firstInvalidLoc ? null : opening + str + \"${\",\n      );\n    }\n  }\n\n  recordStrictModeErrors(\n    toParseError: DeferredStrictError,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, { at });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode?: number): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition(),\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, { at: escStart });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode?: number): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   */\n  raise<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    // @ts-expect-error: refine details typing\n    const error = toParseError({ loc, details });\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> | never {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        // @ts-expect-error: refine details typing\n        return (errors[i] = toParseError({ loc, details }));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc,\n    });\n  }\n\n  expectPlugin(pluginName: Plugin, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName],\n    });\n  }\n\n  expectOnePlugin(pluginNames: Plugin[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n\n  errorBuilder(error: ParseErrorConstructor<{}>) {\n    return (pos: number, lineStart: number, curLine: number) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    };\n  }\n\n  errorHandlers_readInt: IntErrorHandlers = {\n    invalidDigit: (pos, lineStart, curLine, radix) => {\n      if (!this.options.errorRecovery) return false;\n\n      this.raise(Errors.InvalidDigit, {\n        at: buildPosition(pos, lineStart, curLine),\n        radix,\n      });\n      // Continue parsing the number as if there was no invalid digit.\n      return true;\n    },\n    numericSeparatorInEscapeSequence: this.errorBuilder(\n      Errors.NumericSeparatorInEscapeSequence,\n    ),\n    unexpectedNumericSeparator: this.errorBuilder(\n      Errors.UnexpectedNumericSeparator,\n    ),\n  };\n\n  errorHandlers_readCodePoint: CodePointErrorHandlers = {\n    ...this.errorHandlers_readInt,\n    invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n    invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint),\n  };\n\n  errorHandlers_readStringContents_string: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: (pos, lineStart, curLine) => {\n      this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedString, {\n        // Report the error at the string quote\n        at: buildPosition(pos - 1, lineStart, curLine),\n      });\n    },\n  };\n\n  errorHandlers_readStringContents_template: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedTemplate, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n  };\n}\n", "import {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport type { Position } from \"./location\";\nimport { Errors } from \"../parse-error\";\nimport type Tokenizer from \"../tokenizer\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n", "import { Errors, type ParseErrorConstructor } from \"../parse-error\";\nimport type { Position } from \"./location\";\nimport type { Node } from \"../types\";\nimport type Tokenizer from \"../tokenizer\";\n\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n  e.g. we don't know if `async({ x })` is a call expression or an async arrow\n  function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration(): this is ArrowHeadParsingScope {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<{}>, Position]> =\n    new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<{}>,\n    {\n      at,\n    }: {\n      at: Position;\n    },\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: (a: [ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const origin = { at: node.loc.start };\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   */\n  recordArrowParameterBindingError(\n    error: ParseErrorConstructor<{}>,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = { at: node.loc.start };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   */\n  recordAsyncArrowParametersError({ at }: { at: Position }): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, { at });\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, { at: loc });\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n", "export const // Initial Parameter flags\n  PARAM = 0b0000,\n  // track [Yield] production parameter\n  PARAM_YIELD = 0b0001,\n  // track [Await] production parameter\n  PARAM_AWAIT = 0b0010,\n  // track [Return] production parameter\n  PARAM_RETURN = 0b0100,\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind = number;\n\n// todo(flow->ts) - check if more granular type can be used,\n//  type below is not good because things like PARAM_AWAIT|PARAM_YIELD are not included\n// export type ParamKind =\n//   | typeof PARAM\n//   | typeof PARAM_AWAIT\n//   | typeof PARAM_IN\n//   | typeof PARAM_RETURN\n//   | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<number> = [];\n  enter(flags: number) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): number {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n", "import { type Position } from \"../util/location\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport type State from \"../tokenizer/state\";\nimport type { EstreePropertyDefinition, Node, ObjectProperty } from \"../types\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error\";\nimport type Parser from \".\";\n\nimport type ScopeHandler from \"../util/scope\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node;\n  error: Error;\n  thrown: Thrown;\n  aborted: Aborted;\n  failState: FailState;\n};\n\n// ## Parser utilities\n\nexport default abstract class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  abstract getScopeHandler(): { new (...args: any): ScopeHandler };\n\n  addExtra(\n    node: Partial<Node>,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, { at: this.state.startLoc });\n      }\n      this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEndLoc.index, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, { at: this.state.lastTokEndLoc });\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: Position | null): void {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T extends Node | ReadonlyArray<Node>>(\n    fn: (abort: (node?: T) => never) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: {\n      node: T | null;\n    } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        // @ts-expect-error casting general syntax error to parse error\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ExpressionErrors | undefined | null,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc,\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, { at: doubleProtoLoc });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, { at: privateKeyLoc });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /**\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /**\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /**\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isObjectProperty(\n    node: Node,\n  ): node is ObjectProperty | EstreePropertyDefinition {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    this: Parser,\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional parameter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: Position | undefined | null = null;\n  doubleProtoLoc: Position | undefined | null = null;\n  privateKeyLoc: Position | undefined | null = null;\n  optionalParametersLoc: Position | undefined | null = null;\n}\n", "import type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: {\n    [key: string]: any;\n  };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error __clone is not defined in Node prototype\n  NodePrototype.__clone = function (): Node {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this) as (keyof Node)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // @ts-expect-error cloning this to newNode\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport type Undone<T extends NodeType> = Omit<T, \"type\">;\n\nexport abstract class NodeUtils extends UtilParser {\n  startNode<T extends NodeType>(): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T extends NodeType>(loc: Position): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, loc.index, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T extends NodeType>(type: Undone<NodeType>): Undone<T> {\n    return this.startNodeAt(type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T extends NodeType>(\n    node: Omit<T, \"type\">,\n    type: T[\"type\"],\n    endLoc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    // @ts-expect-error migrate to Babel types AST typings\n    node.type = type;\n    // @ts-expect-error migrate to Babel types AST typings\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node as T);\n    return node as T;\n  }\n\n  resetStartLocation(node: NodeBase, startLoc: Position): void {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = startLoc.index;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type Parser from \"../../parser\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types\";\nimport type * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport type { ParseStatementFlag } from \"../../parser/statement\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports:\n    \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({ enumName }: { enumName: string }) =>\n    `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName,\n  }: {\n    invalidEnumType: string;\n    enumName: string;\n  }) =>\n    `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion,\n  }: {\n    enumName: string;\n    memberName: string;\n    suggestion: string;\n  }) =>\n    `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n  }) =>\n    `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitailized: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: {\n    message:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    ...(!process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {}),\n  },\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion,\n  }: {\n    unsupportedExportKind: string;\n    suggestion: string;\n  }) =>\n    `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type: TokenType): boolean {\n  return tokenIsKeywordOrIdentifier(type) && type !== tt._from;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (c: T, b: number, a: T[]) => boolean | undefined | null,\n): [T[], T[]] {\n  const list1: T[] = [];\n  const list2: T[] = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\n\ntype EnumContext = {\n  enumName: string;\n  explicitType: EnumExplicitType;\n  memberName: string;\n};\n\ntype EnumMemberInit =\n  | {\n      type: \"number\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"string\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"boolean\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"invalid\";\n      loc: Position;\n    }\n  | {\n      type: \"none\";\n      loc: Position;\n    };\n\nexport default (superClass: typeof Parser) =>\n  class FlowParserMixin extends superClass implements Parser {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): {\n      new (...args: any): FlowScopeHandler;\n    } {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n          at: moduloLoc,\n        });\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = super.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [\n      N.FlowType | undefined | null,\n      N.FlowPredicate | undefined | null,\n    ] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(\n      node: Undone<N.FlowDeclareClass>,\n    ): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: Undone<N.FlowDeclareFunction>,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode<N.TypeAnnotation>();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [typeNode.returnType, node.predicate] =\n        this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BIND_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: Undone<N.FlowDeclare>,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(FlowErrors.NestedDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: Undone<N.FlowDeclareVariable>,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(\n      node: Undone<N.FlowDeclareModule>,\n    ): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = super.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      // @ts-expect-error refine typings\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode<N.ImportDeclaration>();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          super.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n          // @ts-expect-error refine typings\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind: \"CommonJS\" | \"ES\" | null = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n              at: bodyElement,\n            });\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: Undone<N.FlowDeclareExportDeclaration>,\n      insideModule?: boolean | null,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value as\n            | \"const\"\n            | \"let\"\n            | \"type\"\n            | \"interface\";\n          throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n            at: this.state.startLoc,\n            unsupportedExportKind: label,\n            suggestion: exportSuggestions[label],\n          });\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(\n            node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n            /* decorators */ null,\n          );\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n\n          return node as N.Node;\n        }\n      }\n\n      this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: Undone<N.FlowDeclareModuleExports>,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: Undone<N.FlowDeclareTypeAlias>,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      const finished = this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareTypeAlias\";\n      return finished;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: Undone<N.FlowDeclareOpaqueType>,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      const finished = this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareOpaqueType\";\n      return finished;\n    }\n\n    flowParseDeclareInterface(\n      node: Undone<N.FlowDeclareInterface>,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(node: Undone<N.FlowDeclare>, isClass: boolean): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (isClass) {\n        node.implements = [];\n        node.mixins = [];\n\n        if (this.eatContextual(tt._mixins)) {\n          do {\n            node.mixins.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n\n        if (this.eatContextual(tt._implements)) {\n          do {\n            node.implements.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: Undone<N.FlowInterface>): N.FlowInterface {\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n          at: this.state.startLoc,\n        });\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        {\n          at: startLoc,\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: Undone<N.FlowTypeAlias>): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: Undone<N.FlowOpaqueType>,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode<N.TypeParameter>();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      // @ts-expect-error migrate to Babel types\n      node.variance = variance;\n      // @ts-expect-error migrate to Babel types\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        // @ts-expect-error migrate to Babel types\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, { at: nodeStartLoc });\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode<N.TypeParameterDeclaration>();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode<N.FlowInterfaceType>();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? super.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: Undone<N.FlowObjectTypeIndexer>,\n      isStatic: boolean,\n      variance?: N.FlowVariance | null,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: Undone<N.FlowObjectTypeInternalSlot>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: Undone<N.FlowFunctionTypeAnnotation>,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: Undone<N.FlowObjectTypeCallProperty>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean;\n      allowExact: boolean;\n      allowSpread: boolean;\n      allowProto: boolean;\n      allowInexact: boolean;\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: Position | undefined | null = null;\n        let inexactStartLoc: Position | undefined | null = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n            at: inexactStartLoc,\n          });\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: Undone<N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty>,\n      isStatic: boolean,\n      protoStartLoc: Position | undefined | null,\n      variance: N.FlowVariance | undefined | null,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(FlowErrors.InexactInsideNonObject, {\n              at: this.state.lastTokStartLoc,\n            });\n          } else if (!allowInexact) {\n            this.raise(FlowErrors.InexactInsideExact, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, { at: variance });\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(FlowErrors.UnexpectedSpreadType, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, { at: variance });\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(FlowErrors.ThisParamBannedInConstructor, {\n              at: node.value.this,\n            });\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: Undone<\n        N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty\n      >,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          { at: property.value.this },\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          { at: property },\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, { at: property });\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startLoc ??= this.state.startLoc;\n      let node: N.Identifier | N.FlowQualifiedTypeIdentifier =\n        id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt<N.FlowQualifiedTypeIdentifier>(startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode<N.FlowFunctionTypeParam>();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node });\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: node });\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[];\n      rest: N.FlowFunctionTypeParam | undefined | null;\n      _this: N.FlowFunctionTypeParam | undefined | null;\n    } {\n      let rest: N.FlowFunctionTypeParam | undefined | null = null;\n      let _this: N.FlowFunctionTypeParam | undefined | null = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startLoc: Position,\n      node: Undone<N.FlowTypeAnnotation>,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(\n            node as Undone<N.BooleanLiteralTypeAnnotation>,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n              at: this.state.startLoc,\n            });\n          }\n          this.unexpected();\n          return;\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node as Undone<N.Identifier>, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode<N.FlowTypeAnnotation>();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): N.FlowVariance | undefined | null {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode<N.FlowVariance>();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        return this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n        return;\n      }\n\n      super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode<N.TypeAnnotation>();\n\n        [\n          typeNode.typeAnnotation,\n          // @ts-expect-error predicate may not exist\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatementLike(flags: ParseStatementFlag): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode<N.FlowInterface>();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatementLike(flags);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            // @ts-expect-error: refine typings\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, {\n            at: state.startLoc,\n          });\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression;\n      failed: boolean;\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            // @ts-expect-error: refine typings\n            this.finishArrowValidation(node);\n          } else {\n            // @ts-expect-error: refine typings\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        node.params as any as N.Expression[],\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(\n      node: Undone<N.Node>,\n      parse: () => T,\n    ): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(\n      node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n      decorators: N.Decorator[] | null,\n    ): N.AnyExport {\n      const decl = super.parseExport(node, decorators);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          super.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          // @ts-expect-error: refine typings\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        // @ts-expect-error: refine typings\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(node)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (super.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, { at: startLoc });\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, {\n            at: member.value,\n          });\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, {\n          at: this.state.curPosition(),\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          this.finishOp(tt.questionDot, 2);\n        } else {\n          // allow double nullable types in Flow: ??string\n          this.finishOp(tt.question, 1);\n        }\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        this.readIterator();\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left);\n      }\n      super.toAssignable(node, isLHS);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: ReadonlyArray<N.Expression | undefined | null>,\n      isParenthesizedExpr?: boolean,\n    ): ReadonlyArray<N.Expression | undefined | null> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, {\n            at: expr.typeAnnotation,\n          });\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"TypeCastExpression\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n        // estree support\n      } else if (\n        // @ts-expect-error TS does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        // @ts-expect-error estree\n        method.value.params\n      ) {\n        // @ts-expect-error estree\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, { at: param });\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, { at: param });\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectMethod | N.ObjectProperty {\n      if ((prop as any).variance) {\n        this.unexpected((prop as any).variance.loc.start);\n      }\n      delete (prop as any).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      const result = super.parseObjPropValue(\n        prop,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (result.value || result).typeParameters = typeParameters;\n      }\n      return result;\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, { at: param });\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, { at: param });\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, { at: param });\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: N.Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state.type);\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(FlowErrors.ImportReflectionHasImportType, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n    }\n\n    parseImportSpecifierLocal<\n      T extends\n        | N.ImportSpecifier\n        | N.ImportDefaultSpecifier\n        | N.ImportNamespaceSpecifier,\n    >(node: N.ImportDeclaration, specifier: Undone<T>, type: T[\"type\"]): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\" as const;\n      } else if (this.isContextual(tt._type)) {\n        kind = \"type\" as const;\n      }\n      if (kind) {\n        const lh = this.lookahead();\n        const { type } = lh;\n\n        // import type * is not allowed\n        if (kind === \"type\" && type === tt.star) {\n          // FIXME: lh.start?\n          this.unexpected(null, lh.type);\n        }\n\n        if (\n          isMaybeDefaultImport(type) ||\n          type === tt.braceL ||\n          type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, {\n              at: specifier,\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n          at: specifier,\n        });\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(\n      node: Undone<N.Function>,\n      isConstructor: boolean,\n    ): void {\n      // @ts-expect-error kind may not index node\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        // @ts-expect-error refine typings\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters: N.TypeParameterDeclaration;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression:\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n          | undefined\n          | null = null;\n\n        if (\n          arrow.node &&\n          // @ts-expect-error: refine tryParse typings\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            // @ts-expect-error: refine tryParse typings\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                { at: typeParameters },\n              );\n            }\n            // @ts-expect-error: refine tryParse typings\n            return arrow.node;\n          }\n\n          // @ts-expect-error: refine typings\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n          at: typeParameters,\n        });\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error todo(flow->ts)\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode<N.TypeAnnotation>();\n\n          [\n            typeNode.typeAnnotation,\n            // @ts-expect-error (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        // @ts-expect-error todo(flow->ts)\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Pattern[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction?: boolean | null,\n      strictModeChanged: boolean = true,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node.params[i] });\n        }\n      }\n\n      super.checkParams(\n        node,\n        allowDuplicates,\n        isArrowFunction,\n        strictModeChanged,\n      );\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls?: boolean | null,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startLoc.index) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startLoc);\n        node.callee = base;\n        node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        // @ts-expect-error: refine tryParse typings\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          // @ts-expect-error: refine tryParse typings\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node = this.startNodeAt<N.OptionalCallExpression>(startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt<\n          N.OptionalCallExpression | N.CallExpression\n        >(startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) {\n            (node as Undone<N.OptionalCallExpression>).optional = false;\n          }\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n      this.parseFunctionParams(node, false);\n      if (!this.parseArrow(node)) return;\n      return super.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(FlowErrors.UnterminatedFlowComment, {\n          at: this.state.curPosition(),\n        });\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | undefined {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, {\n            at: this.state.startLoc,\n          });\n        }\n        this.hasFlowCommentCompletion();\n        const commentSkip = this.skipFlowComment();\n        if (commentSkip) {\n          this.state.pos += commentSkip;\n          this.state.hasFlowComment = true;\n        }\n        return;\n      }\n\n      return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n    }\n\n    skipFlowComment(): number | false {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          // @ts-expect-error testing whether a number is included\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition(),\n        });\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n        at: loc,\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n          ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n          : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        {\n          at: loc,\n          ...enumContext,\n        },\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n        at: loc,\n        enumName,\n        memberName,\n      });\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      node: N.Node,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n        at: node,\n        enumName,\n      });\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): {\n      id: N.Node;\n      init: EnumMemberInit;\n    } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\" as const, loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string;\n      explicitType: EnumExplicitType;\n    }): {\n      members: {\n        booleanMembers: Array<N.Node>;\n        numberMembers: Array<N.Node>;\n        stringMembers: Array<N.Node>;\n        defaultedMembers: Array<N.Node>;\n      };\n      hasUnknownMembers: boolean;\n    } {\n      const seenNames = new Set();\n      const members = {\n        // @ts-expect-error: migrate to Babel types\n        booleanMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        numberMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        stringMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, {\n            at: id,\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, {\n            at: id,\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string;\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n          at: this.state.startLoc,\n          enumName,\n        });\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, {\n          at: this.state.startLoc,\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: Undone<N.Node>, id: N.Node): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: Undone<N.Node>): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n", "const entities: {\n  __proto__: null;\n  [name: string]: string;\n} = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n} as const;\nexport default entities;\n", "import * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types\";\nimport type { TokContext } from \"../../tokenizer/context\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport type * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { type Undone } from \"../../parser/node\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({ openingTagName }: { openingTagName: string }) =>\n    `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity,\n  }: {\n    unexpected: string;\n    HTMLEntity: string;\n  }) =>\n    `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object?: N.JSXElement | null): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport interface IJSXParserMixin {\n  jsxParseOpeningElementAfterName(\n    node: N.JSXOpeningElement,\n  ): N.JSXOpeningElement;\n}\n\nexport default (superClass: typeof Parser) =>\n  class JSXParserMixin extends superClass implements Parser, IJSXParserMixin {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(JsxErrors.UnterminatedJsxContent, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                this.finishToken(tt.jsxTagStart);\n              } else {\n                super.getTokenFromCode(ch);\n              }\n              return;\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            this.finishToken(tt.jsxText, out);\n            return;\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, {\n                at: this.state.curPosition(),\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) == charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      this.finishToken(tt.jsxName, this.input.slice(start, this.state.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, { at: node });\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, {\n            at: this.state.startLoc,\n          });\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(this.state.lastTokEndLoc);\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: Undone<N.JSXSpreadChild>): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_expr);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: Undone<N.JSXExpressionContainer>,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(JsxErrors.UnexpectedSequenceExpression, {\n              at: expression.expressions[1],\n            });\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(startLoc: Position): N.JSXOpeningElement {\n      const node = this.startNodeAt<N.JSXOpeningElement | N.JSXOpeningFragment>(\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        // @ts-expect-error migrate to Babel types\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(\n        node as Undone<N.JSXOpeningElement>,\n      );\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: Undone<N.JSXOpeningElement>,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(startLoc: Position): N.JSXClosingElement {\n      const node = this.startNodeAt(startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(startLoc);\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode<\n                N.JSXSpreadChild | N.JSXExpressionContainer\n              >();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(node, tc.j_expr),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, {\n            at: closingElement,\n          });\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, {\n              at: closingElement,\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n          at: this.state.startLoc,\n        });\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        this.jsxReadToken();\n        return;\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          this.jsxReadWord();\n          return;\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          this.finishToken(tt.jsxTagEnd);\n          return;\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          this.jsxReadString(code);\n          return;\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        this.finishToken(tt.jsxTagStart);\n        return;\n      }\n\n      super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n", "import type { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n  BIND_FLAGS_TS_IMPORT,\n  SCOPE_TS_MODULE,\n} from \"../../util/scopeflags\";\nimport type * as N from \"../../types\";\nimport { Errors } from \"../../parse-error\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  importsStack: Set<string>[] = [];\n\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    this.importsStack.push(new Set()); // Always keep the top-level scope for export checks.\n\n    return new TypeScriptScope(flags);\n  }\n\n  enter(flags: number): void {\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n\n    super.enter(flags);\n  }\n\n  exit() {\n    const flags = super.exit();\n\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.pop();\n    }\n\n    return flags;\n  }\n\n  hasImport(name: string, allowShadow?: boolean) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    if (bindingType & BIND_FLAGS_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n\n    if (this.hasImport(name)) return;\n\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\n    }\n\n    super.checkLocalExport(id);\n  }\n}\n", "import * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  AssignmentPattern,\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  ObjectOrClassMember,\n  ClassMember,\n  ObjectMember,\n  TsNamedTypeElementBase,\n  PrivateName,\n  ObjectExpression,\n  ObjectPattern,\n  ArrayExpression,\n  ArrayPattern,\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils, type Undone } from \"./node\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_FLAGS_NO_LET_IN_LEXICAL,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"./util\";\nimport { Errors, type LValAncestor } from \"../parse-error\";\nimport type Parser from \"./index\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport const enum ParseBindingListFlags {\n  ALLOW_EMPTY = 1 << 0,\n  IS_FUNCTION_PARAMS = 1 << 1,\n  IS_CONSTRUCTOR_PARAMS = 1 << 2,\n}\n\nexport default abstract class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  abstract parseIdentifier(liberal?: boolean): Identifier;\n  abstract parseMaybeAssign(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseMaybeAssignAllowIn(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseObjectLike<T extends ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): T;\n  abstract parseObjPropValue(\n    prop: any,\n    startLoc: Position | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void;\n  abstract parsePropertyName(\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ): Expression | Identifier;\n  abstract parsePrivateName(): PrivateName;\n  // Forward-declaration: defined in statement.js\n  abstract parseDecorator(): Decorator;\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n   *\n   * - Parenthesized Destructuring patterns\n   * - RestElement is not the last element\n   * - Missing `=` in assignment pattern\n   *\n   * NOTE: There is a corresponding \"isAssignable\" method.\n   * When this one is updated, please check if also that one needs to be updated.\n   *\n   * @param node The expression atom\n   * @param isLHS Whether we are parsing a LeftHandSideExpression.\n   *              If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *              If isLHS is `false`, we are in an arrow function parameters list.\n   */\n  toAssignable(node: Node, isLHS: boolean = false): void {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParameterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            { at: node },\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc,\n            });\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, { at: node.left.loc.end });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        { at: prop.key },\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, { at: prop });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaLoc: Position | undefined | null,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, { at: elt });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, { at: trailingCommaLoc });\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return (node.properties as ObjectExpression[\"properties\"]).every(\n          (prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type !== \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          },\n        );\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return (node as ArrayExpression).elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isParenthesizedExpr?: boolean,\n  ): ReadonlyArray<Expression | undefined | null> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): SpreadElement {\n    const node = this.startNode<SpreadElement>();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(this: Parser): RestElement {\n    const node = this.startNode<RestElement>();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(this: Parser): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode<ArrayPattern>();\n        this.next();\n        // @ts-expect-error: Fixme: TSParameterProperty can not be assigned to node.elements\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          ParseBindingListFlags.ALLOW_EMPTY,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    this: Parser,\n    close: TokenType,\n    closeCharCode: (typeof charCodes)[keyof typeof charCodes],\n    flags: ParseBindingListFlags,\n  ): Array<Pattern | TSParameterProperty> {\n    const allowEmpty = flags & ParseBindingListFlags.ALLOW_EMPTY;\n\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(\n          this.parseAssignableListItemTypes(this.parseRestBinding(), flags),\n        );\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc,\n          });\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(flags, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(\n    this: Parser,\n    prop: Undone<RestElement>,\n  ): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(this: Parser): ObjectMember | RestElement {\n    const prop = this.startNode<ObjectMember | RestElement>();\n    const { type, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop as Undone<RestElement>);\n    } else if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      (prop as Undone<ObjectMember>).key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop as Undone<ObjectMember>);\n    }\n    (prop as Undone<ObjectMember>).method = false;\n    return this.parseObjPropValue(\n      prop as Undone<ObjectMember>,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n  }\n\n  parseAssignableListItem(\n    this: Parser,\n    flags: ParseBindingListFlags,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(\n    param: Pattern,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flags: ParseBindingListFlags,\n  ): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    this: Parser,\n    startLoc?: Position | null,\n    left?: Pattern | null,\n  ): Pattern {\n    startLoc ??= this.state.startLoc;\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt<AssignmentPattern>(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus its descendants must be subsequently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param type A Node `type` string\n   * @param isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    binding: BindingTypes,\n  ): string | boolean {\n    return getOwn(\n      {\n        AssignmentPattern: \"left\",\n        RestElement: \"argument\",\n        ObjectProperty: \"value\",\n        ParenthesizedExpression: \"expression\",\n        ArrayPattern: \"elements\",\n        ObjectPattern: \"properties\",\n      },\n      // @ts-expect-error refine string to enum\n      type,\n    );\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param expression The expression in question to check.\n   * @param options A set of options described below.\n   * @param options.in\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param options.binding\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BIND_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param options.checkClashes\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param options.strictModeChanged\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param options.hasParenthesizedAncestor\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   */\n\n  checkLVal(\n    expression: Expression | ObjectMember | RestElement,\n    {\n      in: ancestor,\n      binding = BIND_NONE,\n      checkClashes = false,\n      strictModeChanged = false,\n      hasParenthesizedAncestor = false,\n    }: {\n      in: LValAncestor;\n      binding?: BindingTypes;\n      checkClashes?: Set<string> | false;\n      strictModeChanged?: boolean;\n      hasParenthesizedAncestor?: boolean;\n    },\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, { at: expression });\n      }\n      return;\n    }\n\n    if (type === \"Identifier\") {\n      this.checkIdentifier(\n        expression as Identifier,\n        binding,\n        strictModeChanged,\n      );\n\n      const { name } = expression as Identifier;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, { at: expression });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, { at: expression, ancestor });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity)\n      ? validity\n      : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor =\n      type === \"ArrayPattern\" ||\n      type === \"ObjectPattern\" ||\n      type === \"ParenthesizedExpression\"\n        ? ({ type } as const)\n        : ancestor;\n\n    // @ts-expect-error key may not index expression.\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression,\n        });\n      }\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingTypes,\n    strictModeChanged: boolean = false,\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, { at, referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (bindingType & BIND_FLAGS_NO_LET_IN_LEXICAL && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, { at });\n    }\n\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingTypes) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, { at: node });\n    }\n  }\n\n  checkCommaAfterRest(\n    close: (typeof charCodes)[keyof typeof charCodes],\n  ): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      { at: this.state.startLoc },\n    );\n\n    return true;\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type State from \"../../tokenizer/state\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport type * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { createPositionWithColumnOffset } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_TS_TYPE_IMPORT,\n  BIND_CLASS,\n  BIND_NONE,\n  BIND_FLAGS_TS_IMPORT,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport type { ParseStatementFlag } from \"../../parser/statement\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\nimport type { Pattern } from \"../../types\";\nimport type { Expression } from \"../../types\";\nimport type { IJSXParserMixin } from \"../jsx\";\nimport { ParseBindingListFlags } from \"../../parser/lval\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | \"const\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x?: T | null): T {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\ntype ModifierBase = {\n  accessibility?: N.Accessibility;\n} & {\n  [key in TsModifier]?: boolean | undefined | null;\n};\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({ methodName }: { methodName: string }) =>\n    `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName,\n  }: {\n    propertyName: string;\n  }) =>\n    `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter:\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  AccessorCannotBeOptional:\n    \"An 'accessor' property cannot be declared optional.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier:\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ modifier }: { modifier: N.Accessibility }) =>\n      `Accessibility modifier already seen.`,\n  DuplicateModifier: ({ modifier }: { modifier: TsModifier }) =>\n    `Duplicate modifier: '${modifier}'.`,\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers,\n  }: {\n    modifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride:\n    \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic:\n    \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext:\n    \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier,\n  }: {\n    modifier: TsModifier;\n  }) =>\n    `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers,\n  }: {\n    orderedModifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression:\n    \"Invalid property access after an instantiation expression. \" +\n    \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName:\n    \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass:\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam:\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion:\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  // TODO: Accesor -> Accessor\n  SetAccesorCannotHaveOptionalParameter:\n    \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter:\n    \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType:\n    \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName,\n  }: {\n    typeParameterName: string;\n  }) =>\n    `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier:\n    \"Static class blocks cannot have any modifier.\",\n  TupleOptionalAfterType:\n    \"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed:\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports:\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports:\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({ type }: { type: string }) =>\n    `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n});\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(value: string): N.TsKeywordTypeType | undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): modifier is N.Accessibility {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(\n  modifier: string,\n): modifier is N.VarianceAnnotations {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\ntype ClassWithMixin<\n  T extends new (...args: any) => any,\n  M extends object,\n> = T extends new (...args: infer P) => infer I\n  ? new (...args: P) => I & M\n  : never;\n\nexport default (superClass: ClassWithMixin<typeof Parser, IJSXParserMixin>) =>\n  class TypeScriptParserMixin extends superClass implements Parser {\n    getScopeHandler(): {\n      new (...args: any): TypeScriptScopeHandler;\n    } {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T extends TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): T | undefined | null {\n      if (\n        !tokenIsIdentifier(this.state.type) &&\n        this.state.type !== tt._in &&\n        this.state.type !== tt._const\n      ) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers<N extends ModifierBase>(\n      {\n        allowedModifiers,\n        disallowedModifiers,\n        stopOnStartOfClassStaticBlock,\n        errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n      }: {\n        allowedModifiers: readonly TsModifier[];\n        disallowedModifiers?: TsModifier[];\n        stopOnStartOfClassStaticBlock?: boolean;\n        errorTemplate?: typeof TSErrors.InvalidModifierOnTypeMember;\n      },\n      modified: N,\n    ): void {\n      const enforceOrder = (\n        loc: Position,\n        modifier: TsModifier,\n        before: TsModifier,\n        after: TsModifier,\n      ) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, {\n            at: loc,\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (\n        loc: Position,\n        modifier: TsModifier,\n        mod1: TsModifier,\n        mod2: TsModifier,\n      ) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, {\n            at: loc,\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: TsModifier | undefined | null = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, {\n              at: startLoc,\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, {\n            at: startLoc,\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n    }\n\n    tsParseList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T | undefined | null,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] | undefined | null {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node = this.startNode<N.TsImportType>();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: Undone<N.TsQualifiedName> =\n          this.startNodeAtNode<N.TsQualifiedName>(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node = this.startNode<N.TsTypeReference>();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node = this.startNodeAtNode<N.TsTypePredicate>(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node = this.startNode<N.TsThisType>();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node = this.startNode<N.TsTypeQuery>();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\n        \"const\",\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseConstModifier = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"const\"],\n      // for better error recovery\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n    });\n\n    tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\", \"const\"],\n      disallowedModifiers: [\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseTypeParameter(\n      parseModifiers: (node: Undone<N.TsTypeParameter>) => void,\n    ): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers: (node: N.TsTypeParameter) => void,\n    ): N.TsTypeParameterDeclaration | undefined | null {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(parseModifiers: (node: N.TsTypeParameter) => void) {\n      const node = this.startNode<N.TsTypeParameterDeclaration>();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        // @ts-expect-error refine typings\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, { at: node });\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: Undone<N.TsSignatureDeclaration>,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): Array<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern\n    > {\n      const list = super.parseBindingList(\n        tt.parenR,\n        charCodes.rightParenthesis,\n        ParseBindingListFlags.IS_FUNCTION_PARAMS,\n      );\n      for (const pattern of list) {\n        const { type } = pattern;\n        if (type === \"AssignmentPattern\" || type === \"TSParameterProperty\") {\n          this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n            at: pattern,\n            type,\n          });\n        }\n      }\n      return list as Exclude<\n        (typeof list)[0],\n        N.AssignmentPattern | N.TSParameterProperty\n      >[];\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: Undone<\n        N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration\n      >,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(\n      node: Undone<N.TsIndexSignature>,\n    ): N.TsIndexSignature | undefined {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, { at: node });\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, { at: this.state.curPosition() });\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, { at: this.state.curPosition() });\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n              at: method[returnTypeKey],\n            });\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id = this.startNode<N.Identifier>();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\"readonly\"],\n          disallowedModifiers: [\n            \"declare\",\n            \"abstract\",\n            \"private\",\n            \"protected\",\n            \"public\",\n            \"static\",\n            \"override\",\n          ],\n        },\n        node,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      super.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        super.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node = this.startNode<N.TsTypeLiteral>();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): Array<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node = this.startNode<N.TsMappedType>();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node = this.startNode<N.TsTupleType>();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements: boolean | null = null;\n      node.elementTypes.forEach(elementNode => {\n        const { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, {\n            at: elementNode,\n          });\n        }\n\n        seenOptionalElement ||=\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        let checkType = type;\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          checkType = elementNode.type;\n        }\n\n        const isLabeled = checkType === \"TSNamedTupleMember\";\n        labeledElements ??= isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n            at: elementNode,\n          });\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsNamedTupleMember | N.TsType {\n      // parses `...TsType[]`\n\n      const { startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n\n      let labeled: boolean;\n      let label: N.Identifier;\n      let optional: boolean;\n      let type: N.TsNamedTupleMember | N.TsType;\n\n      const isWord = tokenIsKeywordOrIdentifier(this.state.type);\n      const chAfterWord = isWord ? this.lookaheadCharCode() : null;\n      if (chAfterWord === charCodes.colon) {\n        labeled = true;\n        optional = false;\n        label = this.parseIdentifier(true);\n        this.expect(tt.colon);\n        type = this.tsParseType();\n      } else if (chAfterWord === charCodes.questionMark) {\n        optional = true;\n        const startLoc = this.state.startLoc;\n        const wordName = this.state.value;\n        const typeOrLabel = this.tsParseNonArrayType();\n\n        if (this.lookaheadCharCode() === charCodes.colon) {\n          labeled = true;\n          label = this.createIdentifier(\n            this.startNodeAt<N.Identifier>(startLoc),\n            wordName,\n          );\n          this.expect(tt.question);\n          this.expect(tt.colon);\n          type = this.tsParseType();\n        } else {\n          labeled = false;\n          type = typeOrLabel;\n          this.expect(tt.question);\n        }\n      } else {\n        type = this.tsParseType();\n        optional = this.eat(tt.question);\n        // In this case (labeled === true) could be only in invalid label.\n        // E.g. [x.y:type]\n        // An error is raised while processing node.\n        labeled = this.eat(tt.colon);\n      }\n\n      if (labeled) {\n        let labeledNode: Undone<N.TsNamedTupleMember>;\n        if (label) {\n          labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(label);\n          labeledNode.optional = optional;\n          labeledNode.label = label;\n          labeledNode.elementType = type;\n\n          if (this.eat(tt.question)) {\n            labeledNode.optional = true;\n            this.raise(TSErrors.TupleOptionalAfterType, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n        } else {\n          labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(type);\n          labeledNode.optional = optional;\n          this.raise(TSErrors.InvalidTupleMemberLabel, { at: type });\n          // @ts-expect-error This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          labeledNode.label = type;\n          labeledNode.elementType = this.tsParseType();\n        }\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode = this.startNodeAtNode<N.TsOptionalType>(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode = this.startNodeAt<N.TsRestType>(startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode<N.TsParenthesizedType>();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node = this.startNode<\n        N.TsFunctionOrConstructorType | N.TsConstructorType\n      >();\n      if (type === \"TSConstructorType\") {\n        (node as Undone<N.TsConstructorType>).abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node = this.startNode<N.TsLiteralType>();\n      switch (this.state.type) {\n        case tt.num:\n        case tt.bigint:\n        case tt.string:\n        case tt._true:\n        case tt._false:\n          // For compatibility to estree we cannot call parseLiteral directly here\n          // @ts-expect-error refine typings\n          node.literal = super.parseExprAtom();\n          break;\n        default:\n          this.unexpected();\n      }\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node = this.startNode<N.TsLiteralType>();\n      node.literal = super.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType | N.Node {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node = this.startNode<N.TsLiteralType>();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              this.unexpected();\n            }\n            // @ts-expect-error: parseMaybeUnary must returns unary expression\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startLoc = this.state.startLoc;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startLoc.index);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                ? \"TSNullKeyword\"\n                : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node = this.startNode<N.TsKeywordType>();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node = this.startNodeAtNode<N.TsArrayType>(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node = this.startNodeAtNode<N.TsIndexedAccessType>(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node = this.startNode<N.TsTypeOperator>();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(\n          // @ts-expect-error todo(flow->ts)\n          node,\n        );\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, { at: node });\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode<N.TsInferType>();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode<N.TsTypeParameter>();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n        ? this.tsParseInferType()\n        : this.tsInAllowConditionalTypesContext(() =>\n            this.tsParseArrayTypeOrHigher(),\n          );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node = this.startNode<N.TsUnionType | N.TsIntersectionType>();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          super.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            ParseBindingListFlags.ALLOW_EMPTY,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t = this.startNode<N.TsTypeAnnotation>();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = thisTypePredicate;\n            node.asserts = true;\n            (node as N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            thisTypePredicate.asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node as N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): N.TsTypeAnnotation | undefined {\n      if (this.match(tt.colon)) {\n        return this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n    }\n\n    tsTryParseTypeAnnotation(): N.TsTypeAnnotation | undefined {\n      if (this.match(tt.colon)) {\n        return this.tsParseTypeAnnotation();\n      }\n    }\n\n    tsTryParseType(): N.TsType | undefined {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): N.Identifier | undefined {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(Errors.InvalidEscapedReservedWord, {\n          at: this.state.lastTokStartLoc,\n          reservedWord: \"asserts\",\n        });\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: Undone<N.TsTypeAnnotation> = this.startNode<N.TsTypeAnnotation>(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node = this.startNodeAtNode<N.TsConditionalType>(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, { at: this.state.startLoc });\n      }\n\n      const node = this.startNode<N.TsTypeAssertion>();\n      node.typeAnnotation = this.tsInType(() => {\n        this.next(); // \"<\"\n        return this.match(tt._const)\n          ? this.tsParseTypeReference()\n          : this.tsParseType();\n      });\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): Array<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node = this.startNode<N.TsExpressionWithTypeArguments>();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, {\n          at: originalStartLoc,\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: Undone<N.TsInterfaceDeclaration>,\n      properties: {\n        declare?: true;\n      } = {},\n    ): N.TsInterfaceDeclaration | null {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, { at: this.state.startLoc });\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body = this.startNode<N.TSInterfaceBody>();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers,\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node = this.startNode<N.TsKeywordType>();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | undefined {\n      if (this.match(token)) {\n        return this.tsNextThenParseType();\n      }\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsInType(() => {\n        this.expect(token);\n        return this.tsParseType();\n      });\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsInType(() => {\n        this.next();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node = this.startNode<N.TsEnumMember>();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? super.parseStringLiteral(this.state.value)\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = super.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: Undone<N.TsEnumDeclaration>,\n      properties: {\n        const?: true;\n        declare?: true;\n      } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node = this.startNode<N.TsModuleBlock>();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      super.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: Undone<N.TsModuleDeclaration>,\n      nested: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode<N.TsModuleDeclaration>();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        // @ts-expect-error Fixme: refine typings\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = super.parseStringLiteral(this.state.value);\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: Undone<N.TsImportEqualsDeclaration>,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_FLAGS_TS_IMPORT);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, {\n          at: moduleReference,\n        });\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node = this.startNode<N.TsExternalModuleReference>();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T extends N.NodeBase | undefined | null>(\n      f: () => T,\n    ): T | undefined | null {\n      const result = this.tryParse(\n        abort =>\n          // @ts-expect-error todo(flow->ts)\n          f() || abort(),\n      );\n\n      if (result.aborted || !result.node) return;\n      if (result.error) this.state = result.failState;\n      // @ts-expect-error refine typings\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => T | undefined | false): T | undefined {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      }\n      this.state = state;\n    }\n\n    tsTryParseDeclare(nany: any): N.Declaration | undefined {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let startType = this.state.type;\n      let kind: \"let\" | null;\n\n      if (this.isContextual(tt._let)) {\n        startType = tt._var;\n        kind = \"let\";\n      }\n\n      // @ts-expect-error refine typings\n      return this.tsInAmbientContext(() => {\n        switch (startType) {\n          case tt._function:\n            nany.declare = true;\n            return super.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* isHangingDeclaration */ false,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to know how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._enum:\n            return this.tsParseEnumDeclaration(nany, { declare: true });\n          case tt._global:\n            return this.tsParseAmbientExternalModuleDeclaration(nany);\n          case tt._const:\n          case tt._var:\n            if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n              nany.declare = true;\n              return this.parseVarStatement(\n                nany,\n                kind || this.state.value,\n                true,\n              );\n            }\n\n            // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n            this.expect(tt._const);\n            return this.tsParseEnumDeclaration(nany, {\n              const: true,\n              declare: true,\n            });\n          case tt._interface: {\n            const result = this.tsParseInterfaceDeclaration(nany, {\n              declare: true,\n            });\n            if (result) return result;\n          }\n          // fallthrough\n          default:\n            if (tokenIsIdentifier(startType)) {\n              return this.tsParseDeclaration(\n                nany,\n                this.state.value,\n                /* next */ true,\n                /* decorators */ null,\n              );\n            }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): N.Declaration | undefined {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n        /* decorators */ null,\n      );\n    }\n\n    tsParseExpressionStatement(\n      node: Undone<N.TsModuleDeclaration>,\n      expr: N.Identifier,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n          }\n          return declaration;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(\n            node,\n            expr.name,\n            /* next */ false,\n            decorators,\n          );\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined | null {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node, decorators);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined {\n      if (!this.match(tt.lt)) return;\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: Undone<N.ArrowFunctionExpression> | undefined =\n        this.tsTryParseAndCatch(() => {\n          const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n          node.typeParameters = this.tsParseTypeParameters(\n            this.tsParseConstModifier,\n          );\n          // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n          super.parseFunctionParams(node);\n          node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n          this.expect(tt.arrow);\n          return node;\n        });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) return;\n\n      return super.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression(): N.TsTypeParameterInstantiation | void {\n      if (this.reScan_lt() !== tt.lt) return;\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode<N.TsTypeParameterInstantiation>();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, { at: node });\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      flags: ParseBindingListFlags,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location to include modifiers in range\n      const startLoc = this.state.startLoc;\n\n      const modified: ModifierBase = {};\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        },\n        modified,\n      );\n      const accessibility = modified.accessibility;\n      const override = modified.override;\n      const readonly = modified.readonly;\n      if (\n        !(flags & ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS) &&\n        (accessibility || readonly || override)\n      ) {\n        this.raise(TSErrors.UnexpectedParameterModifier, { at: startLoc });\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left, flags);\n      const elt = this.parseMaybeDefault(left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp = this.startNodeAt<N.TSParameterProperty>(startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, { at: pp });\n        }\n        pp.parameter = elt as any as N.Identifier | N.AssignmentPattern;\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    tsDisallowOptionalPattern(node: Undone<N.Function>) {\n      for (const param of node.params) {\n        if (\n          param.type !== \"Identifier\" &&\n          (param as any).optional &&\n          !this.state.isAmbientContext\n        ) {\n          this.raise(TSErrors.PatternIsOptional, { at: param });\n        }\n      }\n    }\n\n    setArrowFunctionParameters(\n      node: Undone<N.ArrowFunctionExpression>,\n      params: N.Expression[],\n      trailingCommaLoc?: Position | null,\n    ): void {\n      super.setArrowFunctionParameters(node, params, trailingCommaLoc);\n      this.tsDisallowOptionalPattern(node);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        return this.finishNode(node, bodilessType);\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, { at: node });\n        if ((node as Undone<N.FunctionDeclaration>).declare) {\n          return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        }\n      }\n      this.tsDisallowOptionalPattern(node);\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodiless function, we need to do it here.\n        this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(node);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: Array<N.Expression | undefined | null>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, {\n            at: node.typeAnnotation,\n          });\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: Array<N.Expression | undefined | null>,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isInParens?: boolean,\n    ): Array<N.Expression | undefined | null> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression =\n          this.startNodeAt<N.TsNonNullExpression>(startLoc);\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn =\n              this.tsTryParseGenericAsyncArrowFunction(startLoc);\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = super.parseTaggedTemplateExpression(\n              base,\n\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node = this.startNodeAt<\n              N.CallExpression | N.OptionalCallExpression\n            >(startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // @ts-expect-error (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              (node as Undone<N.OptionalCallExpression>).optional =\n                isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>>>c is not (a<b>)>>c, but a<(b>>>c)\n            tokenType === tt.bitShiftR ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node = this.startNodeAt<N.TsInstantiationExpression>(startLoc);\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              { at: this.state.startLoc },\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartLoc: Position,\n      minPrec: number,\n    ): N.Expression {\n      let isSatisfies: boolean;\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        (this.isContextual(tt._as) ||\n          (isSatisfies = this.isContextual(tt._satisfies)))\n      ) {\n        const node = this.startNodeAt<\n          N.TsAsExpression | N.TsSatisfiesExpression\n        >(leftStartLoc);\n        node.expression = left;\n        node.typeAnnotation = this.tsInType(() => {\n          this.next(); // \"as\" or \"satisfies\"\n          if (this.match(tt._const)) {\n            if (isSatisfies) {\n              this.raise(Errors.UnexpectedKeyword, {\n                at: this.state.startLoc,\n                keyword: \"const\",\n              });\n            }\n            return this.tsParseTypeReference();\n          }\n\n          return this.tsParseType();\n        });\n        this.finishNode(\n          node,\n          isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\",\n        );\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(\n          // @ts-expect-error todo(flow->ts)\n          node,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(TSErrors.ImportReflectionHasImportType, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(\n      node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    ): N.AnyImport {\n      node.importKind = \"value\";\n      if (\n        tokenIsIdentifier(this.state.type) ||\n        this.match(tt.star) ||\n        this.match(tt.braceL)\n      ) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(tt._type) &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          ahead.type !== tt._from &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (tokenIsIdentifier(this.state.type) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(\n            node as Undone<N.TsImportEqualsDeclaration>,\n          );\n        }\n      }\n\n      const importNode = super.parseImport(node as Undone<N.ImportDeclaration>);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        // @ts-expect-error refine typings\n        importNode.specifiers.length > 1 &&\n        // @ts-expect-error refine typings\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n          at: importNode,\n        });\n      }\n\n      return importNode;\n    }\n\n    parseExport(\n      node: Undone<N.Node>,\n      decorators: N.Decorator[] | null,\n    ): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(tt._type) &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n          /* isExport */ true,\n        );\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign = node as Undone<N.TsExportAssignment>;\n        assign.expression = super.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl = node as Undone<N.TsNamespaceExportDeclaration>;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        node.exportKind = \"value\";\n\n        if (this.isContextual(tt._type)) {\n          const ch = this.lookaheadCharCode();\n          if (ch === charCodes.leftCurlyBrace || ch === charCodes.asterisk) {\n            this.next();\n            node.exportKind = \"type\";\n          }\n        }\n\n        return super.parseExport(\n          node as Undone<N.ExportAllDeclaration | N.ExportDefaultDeclaration>,\n          decorators,\n        );\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode<N.Class>();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        return this.parseClass(cls, true, true);\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(\n          this.startNode<N.TsInterfaceDeclaration>(),\n        );\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n            at: init,\n          });\n        } else if (\n          !isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))\n        ) {\n          this.raise(\n            TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            { at: init },\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(\n      flags: ParseStatementFlag,\n      decorators?: N.Decorator[] | null,\n    ): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node = this.startNode<N.TsEnumDeclaration>();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(\n          this.startNode<N.TsEnumDeclaration>(),\n        );\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(flags, decorators);\n    }\n\n    parseAccessModifier(): N.Accessibility | undefined | null {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: readonly TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ] as const;\n      this.tsParseModifiers(\n        {\n          allowedModifiers: modifiers,\n          disallowedModifiers: [\"in\", \"out\"],\n          stopOnStartOfClassStaticBlock: true,\n          errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n        },\n        member,\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n              at: this.state.curPosition(),\n            });\n          }\n          super.parseClassStaticBlock(classBody, member as N.StaticBlock);\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: Undone<N.ClassMember | N.TsIndexSignature>,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(\n        member as Undone<N.TsIndexSignature>,\n      );\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member as any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, { at: member });\n        }\n        if ((member as any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, {\n            at: member,\n            modifier: (member as any).accessibility,\n          });\n        }\n        if ((member as any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, { at: member });\n        }\n        if ((member as any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, { at: member });\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member as any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n          at: member,\n        });\n      }\n\n      if ((member as any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, { at: member });\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member as Undone<N.ClassMember>,\n        state,\n        isStatic,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp as any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, { at: methodOrProp });\n      }\n\n      if ((methodOrProp as any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, { at: methodOrProp });\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    // @ts-expect-error plugin overrides interfaces\n    parseExpressionStatement(\n      node: Undone<N.ExpressionStatement>,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? // @ts-expect-error refine typings\n            this.tsParseExpressionStatement(node, expr, decorators)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TsTypeCastExpression>(startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n          at: this.state.startLoc,\n        });\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: N.Declaration | undefined | null =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType?: BindingTypes,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node as any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty,\n    ): void {\n      if (!node.optional) {\n        if (this.eat(tt.bang)) {\n          node.definite = true;\n        } else if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (\n        this.state.isAmbientContext &&\n        !(node.readonly && !node.typeAnnotation) &&\n        this.match(tt.eq)\n      ) {\n        this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n          at: this.state.startLoc,\n        });\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(TSErrors.AbstractPropertyHasInitializer, {\n          at: this.state.startLoc,\n          propertyName:\n            key.type === \"Identifier\" && !node.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n        });\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // @ts-expect-error abstract may not index node\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, { at: node });\n      }\n\n      // @ts-expect-error accessibility may not index node\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, {\n          at: node,\n          // @ts-expect-error refine typings\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    parseClassAccessorProperty(\n      node: N.ClassAccessorProperty,\n    ): N.ClassAccessorProperty {\n      this.parseClassPropertyAnnotation(node);\n      if (node.optional) {\n        this.raise(TSErrors.AccessorCannotBeOptional, { at: node });\n      }\n      return super.parseClassAccessorProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, {\n          at: typeParameters,\n        });\n      }\n\n      // @ts-expect-error declare does not exist in ClassMethod\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, { at: method, kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        // @ts-expect-error refine typings\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ) {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      return super.parseObjPropValue(\n        prop,\n\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n    }\n\n    parseFunctionParams(node: N.Function, isConstructor: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: State | undefined | null;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: N.TsTypeParameterDeclaration | undefined | null;\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n        const expr = super.parseMaybeAssign(\n          refExpressionErrors,\n          afterLeftParse,\n        );\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters.params[0];\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(TSErrors.SingleTypeParameterWithoutTrailingComma, {\n                at: createPositionWithColumnOffset(parameter.loc.end, 1),\n                typeParameterName: parameter.name.name,\n              });\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.params[0].constraint &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, { at: node });\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(\n      refExpressionErrors?: ExpressionErrors | null,\n      sawUnary?: boolean,\n    ): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      }\n      return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n    }\n\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          // @ts-expect-error refine typings\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(\n      param: N.Pattern,\n      flags: ParseBindingListFlags,\n    ) {\n      if (!(flags & ParseBindingListFlags.IS_FUNCTION_PARAMS)) return param;\n\n      if (this.eat(tt.question)) {\n        (param as any as N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParameterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              { at: node },\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, { at: node });\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left);\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    // @ts-expect-error plugin overrides interfaces\n    isValidLVal(\n      type:\n        | \"TSTypeCastExpression\"\n        | \"TSParameterProperty\"\n        | \"TSNonNullExpression\"\n        | \"TSAsExpression\"\n        | \"TSSatisfiesExpression\"\n        | \"TSTypeAssertion\",\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return (\n        getOwn(\n          {\n            // Allow \"typecasts\" to appear on the left of assignment expressions,\n            // because it may be in an arrow function.\n            // e.g. `const f = (foo: number = 0) => foo;`\n            TSTypeCastExpression: true,\n            TSParameterProperty: \"parameter\",\n            TSNonNullExpression: \"expression\",\n            TSAsExpression: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSSatisfiesExpression: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSTypeAssertion: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n          },\n          type,\n        ) || super.isValidLVal(type, isUnparenthesizedInAssign, binding)\n      );\n    }\n\n    parseBindingAtom(): N.Pattern {\n      if (this.state.type === tt._this) {\n        return this.parseIdentifier(/* liberal */ true);\n      }\n      return super.parseBindingAtom();\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(\n      close: (typeof charCodes)[keyof typeof charCodes],\n    ): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      }\n      return super.checkCommaAfterRest(close);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          this.finishOp(tt.gt, 1);\n          return;\n        }\n        if (code === charCodes.lessThan) {\n          this.finishOp(tt.lt, 1);\n          return;\n        }\n      }\n      super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(\n      exprList: Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(\n            expr as N.TsTypeCastExpression,\n          );\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          // @ts-expect-error: refine typings\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        // @ts-expect-error: refine typings\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T extends N.Class>(\n      node: Undone<T>,\n      isStatement: boolean,\n      optionalId?: boolean,\n    ): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node as any).abstract;\n      try {\n        return super.parseClass(node, isStatement, optionalId);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n      decorators: N.Decorator[] | null,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | undefined | null {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.maybeTakeDecorators(\n          decorators,\n          this.parseClass<N.ClassDeclaration>(\n            node as N.ClassDeclaration,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          ),\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n            at: node,\n          });\n          return this.tsParseInterfaceDeclaration(\n            node as N.TsInterfaceDeclaration,\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod<\n      T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope?: boolean,\n    ) {\n      const method = super.parseMethod<T>(\n        node,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error todo(flow->ts) property not defined for all types in union\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? // @ts-expect-error estree typings\n            !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, {\n            at: method,\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: Undone<N.ExportSpecifier>,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: Undone<N.ImportSpecifier>,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n        isInTypeOnlyImport ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          { at: loc },\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(\n          node[rightOfAsKey],\n          hasTypeSpecifier ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT,\n        );\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\n// If a const declaration has no type annotation and is initialized to\n// a string literal, numeric literal, or enum reference, then it is\n// allowed. In an ideal world, we'd check whether init was *actually* an\n// enum reference, but we allow anything that \"could be\" a literal enum\n// in `isPossiblyLiteralEnum` since we don't have all the information\n// that the typescript compiler has.\nfunction isValidAmbientConstInitializer(\n  expression: N.Expression,\n  estree: boolean,\n): boolean {\n  const { type } = expression;\n  if (expression.extra?.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const { value } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\n\nfunction isNumber(expression: N.Expression, estree: boolean): boolean {\n  if (estree) {\n    return (\n      expression.type === \"Literal\" &&\n      (typeof expression.value === \"number\" || \"bigint\" in expression)\n    );\n  }\n  return (\n    expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\"\n  );\n}\n\nfunction isNegativeNumber(expression: N.Expression, estree: boolean): boolean {\n  if (expression.type === \"UnaryExpression\") {\n    const { operator, argument } = expression as N.UnaryExpression;\n    if (operator === \"-\" && isNumber(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\" || expression.computed) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n", "import * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type * as N from \"../types\";\nimport { ParseErrorEnum } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport type { BindingTypes } from \"../util/scopeflags\";\nimport type { Position } from \"../util/location\";\n\ntype PossiblePlaceholders = {\n  Identifier: N.Identifier;\n  StringLiteral: N.StringLiteral;\n  Expression: N.Expression;\n  Statement: N.Statement;\n  Declaration: N.Declaration;\n  BlockStatement: N.BlockStatement;\n  ClassBody: N.ClassBody;\n  Pattern: N.Pattern;\n};\nexport type PlaceholderTypes = keyof PossiblePlaceholders;\n\ntype NodeOf<T extends keyof PossiblePlaceholders> = PossiblePlaceholders[T];\n// todo: when there  is proper union type for Node\n// type NodeOf<T extends PlaceholderTypes> = Extract<N.Node, { type: T }>;\n\n// todo: Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T extends PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\",\n});\n\n/* eslint-disable sort-keys */\n\nexport default (superClass: typeof Parser) =>\n  class PlaceholdersParserMixin extends superClass implements Parser {\n    parsePlaceholder<T extends PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ MaybePlaceholder<T> | undefined | null {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        // @ts-expect-error placeholder typings\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T extends PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      // @ts-expect-error todo(flow->ts)\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        this.finishOp(tt.placeholder, 2);\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(\n      refExpressionErrors?: ExpressionErrors | null,\n    ): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") ||\n        super.parseExprAtom(refExpressionErrors)\n      );\n    }\n\n    parseIdentifier(liberal?: boolean): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal)\n      );\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ) {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"Placeholder\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    chStartsBindingIdentifier(ch: number, pos: number): boolean {\n      if (super.chStartsBindingIdentifier(ch, pos)) {\n        return true;\n      }\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(\n      node: N.BreakStatement | N.ContinueStatement,\n      isBreak: boolean,\n    ) {\n      // @ts-expect-error: node.label could be Placeholder\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(node, isBreak);\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        // @ts-expect-error placeholder typings\n        return super.parseExpressionStatement(node, expr);\n      }\n\n      if (this.match(tt.colon)) {\n        // @ts-expect-error placeholder typings\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(\n      allowDirectives?: boolean,\n      createNewLexicalScope?: boolean,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(\n          allowDirectives,\n          createNewLexicalScope,\n          afterBlockParse,\n        )\n      );\n    }\n\n    parseFunctionId(\n      requireId?: boolean,\n    ): MaybePlaceholder<\"Identifier\"> | undefined | null {\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseClass<T extends N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n            at: this.state.startLoc,\n          });\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      super.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        super.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node, decorators: N.Decorator[] | null): N.AnyExport {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(node, decorators);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node, decorators);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(node);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          // @ts-expect-error placeholder typings\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration>,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(node);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier =\n        this.startNodeAtNode<N.ImportDefaultSpecifier>(placeholder);\n      specifier.local = placeholder;\n      node.specifiers.push(\n        this.finishNode(specifier, \"ImportDefaultSpecifier\"),\n      );\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource()\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, {\n          at: this.state.lastTokEndLoc,\n        });\n      }\n    }\n  };\n", "import type Parser from \"../parser\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types\";\nimport type * as N from \"../types\";\nimport type { ExpressionErrors } from \"../parser/util\";\n\nexport default (superClass: typeof Parser) =>\n  class V8IntrinsicMixin extends superClass implements Parser {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode<N.Identifier>();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName();\n          const identifier = this.createIdentifier(node, name);\n          // @ts-expect-error: avoid mutating AST types\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      return (\n        this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors)\n      );\n    }\n  };\n", "import type Parser from \"./parser\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"./typings\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = PluginConfig[];\n\nexport type MixinPlugin = (superClass: { new (...args: any): Parser }) => {\n  new (...args: any): Parser;\n};\n\n// This function’s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        // @ts-expect-error key may not exist in plugin options\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption<\n  PluginName extends ParserPluginWithOptions[0],\n  OptionName extends keyof PluginOptions<PluginName>,\n>(plugins: PluginList, name: PluginName, option: OptionName) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return (plugin[1] as PluginOptions<PluginName>)[option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (\n      decoratorsBeforeExport != null &&\n      typeof decoratorsBeforeExport !== \"boolean\"\n    ) {\n      throw new Error(\n        \"'decoratorsBeforeExport' must be a boolean, if specified.\",\n      );\n    }\n\n    const allowCallParenthesized = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"allowCallParenthesized\",\n    );\n    if (\n      allowCallParenthesized != null &&\n      typeof allowCallParenthesized !== \"boolean\"\n    ) {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error so @babel/core can provide better error message\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n", "// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport type * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport {\n  type Position,\n  createPositionWithColumnOffset,\n} from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, type ParseError } from \"../parse-error\";\nimport { UnparenthesizedPipeBodyDescriptions } from \"../parse-error/pipeline-operator-errors\";\nimport { setInnerComments } from \"./comments\";\nimport { cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \".\";\n\nimport type { SourceType } from \"../options\";\n\nexport default abstract class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  abstract parseBlock(\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement;\n  abstract parseClass(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ): N.Class;\n  abstract parseDecorators(allowExport?: boolean): void;\n  abstract parseFunction<T extends N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ): T;\n  abstract parseFunctionParams(node: N.Function, isConstructor?: boolean): void;\n  abstract parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: N.Directive[] | null | undefined,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void;\n  abstract parseProgram(\n    program: N.Program,\n    end: TokenType,\n    sourceType?: SourceType,\n  ): N.Program;\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean | undefined | null,\n    protoRef: {\n      used: boolean;\n    },\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // @ts-expect-error prop must be an ObjectProperty\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, { at: key });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, { at: key });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(this: Parser): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    // @ts-expect-error fixme: refine types\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    this: Parser,\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt<N.AssignmentExpression>(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        const startIndex = startLoc.index;\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startIndex\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startIndex\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startIndex\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\"),\n      });\n      // @ts-expect-error todo(flow->ts) improve node types\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    this: Parser,\n    expr: N.Expression,\n    startLoc: Position,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    this: Parser,\n    left: N.Expression | N.PrivateName,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt<N.LogicalExpression | N.BinaryExpression>(\n          leftStartLoc,\n        );\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc,\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc,\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(this: Parser): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      // @ts-expect-error TS2345: Argument of type 'string' is not assignable to parameter of type '\"ArrowFunctionExpression\" | \"YieldExpression\" | \"AssignmentExpression\" | \"ConditionalExpression\"'.\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        // @ts-expect-error TS2322: Type 'string' is not assignable to type '\"AssignmentExpression\" | \"ArrowFunctionExpression\" | \"ConditionalExpression\" | \"YieldExpression\"'.\n        type: body.type,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, { at: startLoc });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(\n    node: N.AwaitExpression | Undone<N.UnaryExpression>,\n  ) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument,\n      });\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode<N.UnaryExpression | N.UpdateExpression>();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, { at: node });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, { at: node });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node as Undone<N.UnaryExpression>);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(\n      // @ts-expect-error using \"Undone\" node as \"done\"\n      node,\n      update,\n      refExpressionErrors,\n    );\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, { at: startLoc });\n        return this.parseAwait(startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    this: Parser,\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (update) {\n      // @ts-expect-error Type 'Node' is missing the following properties from type 'Undone<UpdateExpression>': prefix, operator, argument\n      const updateExpressionNode = node as Undone<N.UpdateExpression>;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\"),\n      });\n      return node;\n    }\n\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt<N.UpdateExpression>(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: (expr = this.finishNode(node, \"UpdateExpression\")),\n      });\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startLoc);\n  }\n\n  parseSubscripts(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls?: boolean | null,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls) {\n        this.raise(Errors.OptionalChainingNoNew, {\n          at: this.state.startLoc,\n        });\n        if (this.lookaheadCharCode() === charCodes.leftParenthesis) {\n          // stop at `?.` when parsing `new a?.()`\n          state.stop = true;\n          return base;\n        }\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt<\n      N.OptionalMemberExpression | N.MemberExpression\n    >(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, { at: startLoc });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      (node as N.OptionalMemberExpression).optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors: ExpressionErrors | null = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    const node = this.startNodeAt<N.CallExpression | N.OptionalCallExpression>(\n      startLoc,\n    );\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      // @ts-expect-error when optionalChainMember is true, node must be an optional call\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        // @ts-expect-error todo(flow->ts)\n        node,\n        refExpressionErrors,\n      );\n    }\n    let finishedNode:\n      | N.CallExpression\n      | N.OptionalCallExpression\n      | N.ArrowFunctionExpression = this.finishCallExpression(\n      node,\n      optionalChainMember,\n    );\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt<N.ArrowFunctionExpression>(startLoc),\n        finishedNode as N.CallExpression,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return finishedNode;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node = this.startNodeAt<N.TaggedTemplateExpression>(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, { at: startLoc });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n    node: Undone<T>,\n    optional: boolean,\n  ): T {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount:\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, { at: arg });\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    this: Parser,\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: N.Node | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): Array<N.Expression | undefined | null> {\n    const elts: N.Expression[] = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node as N.ArrowFunctionExpression;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(this: Parser): N.Expression {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    let node;\n    let decorators: N.Decorator[] | null = null;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode<N.MetaProperty | N.Import>();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node as Undone<N.MetaProperty>);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        decorators = this.parseDecorators();\n      // fall through\n      case tt._class:\n        return this.parseClass(\n          this.maybeTakeDecorators(decorators, this.startNode()),\n          false,\n        );\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, { at: callee });\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: this.state.startLoc,\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        }\n        this.unexpected();\n        break;\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n        } else {\n          this.unexpected();\n        }\n        break;\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadInLineCharCode() === charCodes.leftCurlyBrace\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(\n                this.startNodeAtNode(id),\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that “topic token”.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the “topic token”, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token’s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode<N.TopicReference>();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin’s configuration matches the current token’s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin’s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin’s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: Undone<N.Node>,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin’s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          { at: startLoc },\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin’s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin’s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration’s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            // @ts-expect-error token must have a label\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, { at: startLoc });\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n  ): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition(),\n      });\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(\n    this: Parser,\n    node: Undone<N.DoExpression>,\n    isAsync: boolean,\n  ): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode<N.Super>();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, { at: node });\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, { at: node });\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, { at: node });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode<N.PrivateName>();\n    const id = this.startNodeAt<N.Identifier>(\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      createPositionWithColumnOffset(this.state.startLoc, 1),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(\n    this: Parser,\n  ): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode<N.FunctionExpression | N.MetaProperty>();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"sent\",\n      );\n    }\n    return this.parseFunction(node as Undone<N.FunctionExpression>);\n  }\n\n  parseMetaProperty(\n    node: Undone<N.MetaProperty>,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: Undone<N.MetaProperty>): N.MetaProperty {\n    const id = this.createIdentifier(\n      this.startNodeAtNode<N.Identifier>(node),\n      \"import\",\n    );\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, { at: id });\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T extends N.Node>(\n    value: any,\n    type: T[\"type\"],\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T extends N.Node>(value: any, type: T[\"type\"]): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: {\n    value: any;\n    pattern: string;\n    flags: N.RegExpLiteral[\"flags\"];\n  }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode<N.BooleanLiteral>();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode<N.NullLiteral>();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(\n    this: Parser,\n    canBeArrow: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartLoc = this.state.startLoc;\n    const exprList: N.Expression[] = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      // @ts-expect-error todo(flow->ts) improve node types\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt<N.SequenceExpression>(innerStartLoc);\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(\n      startLoc,\n      // @ts-expect-error todo(flow->ts)\n      val,\n    );\n  }\n\n  wrapParenthesis(startLoc: Position, expression: N.Expression): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n\n      this.takeSurroundingComments(\n        expression,\n        startLoc.index,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression =\n      this.startNodeAt<N.ParenthesizedExpression>(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(\n    node: Undone<N.ArrowFunctionExpression>,\n  ): Undone<N.ArrowFunctionExpression> | undefined {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startLoc: Position,\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(this: Parser): N.NewExpression | N.MetaProperty {\n    const node = this.startNode<N.NewExpression | N.MetaProperty>();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"new\",\n      );\n      this.next();\n      const metaProp = this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"target\",\n      );\n\n      if (\n        !this.scope.inNonArrowFunction &&\n        !this.scope.inClass &&\n        !this.options.allowNewTargetOutsideFunction\n      ) {\n        this.raise(Errors.UnexpectedNewTarget, { at: metaProp });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node as Undone<N.NewExpression>);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(this: Parser, node: Undone<N.NewExpression>): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(this: Parser, node: Undone<N.NewExpression>): void {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, { at: node.callee });\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt<N.TemplateElement>(\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          // FIXME: Adding 1 is probably wrong.\n          at: createPositionWithColumnOffset(\n            this.state.firstInvalidTemplateEscapePos,\n            1,\n          ),\n        });\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      finishedNode,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return finishedNode;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(this: Parser, isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode<N.TemplateLiteral>();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(this: Parser): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike(\n    close: TokenType,\n    isPattern: true,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectPattern;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: false | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectExpression;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: true,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.RecordExpression;\n  parseObjectLike<T extends N.ObjectPattern | N.ObjectExpression>(\n    this: Parser,\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode<\n      N.ObjectExpression | N.ObjectPattern | N.RecordExpression\n    >();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(\n            // @ts-expect-error todo(flow->ts) improve node types\n            node,\n          );\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, { at: prop });\n      }\n\n      // @ts-expect-error shorthand may not index prop\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      // @ts-expect-error Fixme: refine typings\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    // @ts-expect-error type is well defined\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: Undone<N.ObjectProperty>): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode<N.ObjectProperty>();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(\n      prop,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        { at: method },\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, { at: method });\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    this: Parser,\n    prop: Undone<N.ObjectMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): N.ObjectMethod | undefined | null {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      const finishedProp = this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    this: Parser,\n    prop: Undone<N.ObjectProperty>,\n    startLoc: Position | undefined | null,\n    isPattern: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectProperty | undefined | null {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc,\n          });\n        }\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    this: Parser,\n    prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n    startLoc: Position | undefined | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMethod | N.ObjectProperty {\n    const node =\n      this.parseObjectMethod(\n        prop as Undone<N.ObjectMethod>,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop as Undone<N.ObjectProperty>,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    this: Parser,\n    prop:\n      | Undone<N.ObjectOrClassMember | N.ClassMember>\n      | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop as Undone<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, {\n                at: privateKeyLoc,\n              });\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            this.unexpected();\n        }\n      }\n      (prop as any).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod>(\n    this: Parser,\n    node: Undone<T>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: T[\"type\"],\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, isConstructor);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return finishedNode;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    this: Parser,\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode<N.ArrayExpression | N.TupleExpression>();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[] | undefined | null,\n    isAsync: boolean,\n    trailingCommaLoc?: Position | null,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead ≠ {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[],\n    trailingCommaLoc?: Position | null,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params as (N.Pattern | N.TSParameterProperty)[];\n  }\n\n  parseFunctionBodyAndFinish<\n    T extends\n      | N.Function\n      | N.TSDeclareMethod\n      | N.TSDeclareFunction\n      | N.ClassPrivateMethod,\n  >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n    // @ts-expect-error (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowExpression?: boolean | null,\n    isMethod: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      (node as Undone<N.ArrowFunctionExpression>).body =\n        this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(Errors.IllegalLanguageModeDirective, {\n              at:\n                // @ts-expect-error kind may not index node\n                (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // @ts-expect-error key may not index node\n                !!node.key\n                  ? // @ts-expect-error node.key has been guarded\n                    node.key.loc.end\n                  : node,\n            });\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: ReadonlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: Undone<N.Function>,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isArrowFunction?: boolean | null,\n    strictModeChanged: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set<string>();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" } as const;\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged,\n      });\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    this: Parser,\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    nodeForExtra?: N.Node | null,\n  ): (N.Expression | null)[] {\n    const elts: (N.Expression | null)[] = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: false,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc,\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode<N.Identifier>();\n    const name = this.parseIdentifierName(liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(\n    node: Omit<N.Identifier, \"type\">,\n    name: string,\n  ): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word,\n      });\n      return;\n    } else if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, { at: startLoc });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, { at: startLoc });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc,\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({ at: startLoc });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, { at: startLoc });\n        return;\n      }\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(this: Parser, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt<N.AwaitExpression>(startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, { at: node });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``, await of []\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      (type === tt._of && !this.state.containsEsc) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(this: Parser): N.YieldExpression {\n    const node = this.startNode<N.YieldExpression>();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    this.next();\n    let delegating = false;\n    let argument: N.Expression | null = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc,\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr: N.Expression, startLoc: Position) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt<N.PipelineBareFunction>(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt<N.PipelineTopicExpression>(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, { at: this.state.startLoc });\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, { at: startLoc });\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser’s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(this: Parser, prec: number): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(this: Parser): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    if (!this.match(tt.braceL)) {\n      this.unexpected(null, tt.braceL);\n    }\n    // start program node immediately after `{`\n    const program = this.startNodeAt<N.Program>(this.state.endLoc);\n    this.next(); // eat `{`\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prop: Undone<N.ObjectOrClassMember | N.ClassMember>,\n  ): void {}\n}\n", "import type * as N from \"../types\";\nimport {\n  tokenIsIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"../parse-error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n  BIND_CATCH_PARAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport type { Position } from \"../util/location\";\nimport { createPositionWithColumnOffset } from \"../util/location\";\nimport { cloneStringLiteral, cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \"./index\";\nimport { ParseBindingListFlags } from \"./lval\";\n\nconst loopLabel = { kind: \"loop\" } as const,\n  switchLabel = { kind: \"switch\" } as const;\n\nexport const enum ParseFunctionFlag {\n  Expression = 0b0000,\n  Declaration = 0b0001,\n  HangingDeclaration = 0b0010,\n  NullableId = 0b0100,\n  Async = 0b1000,\n}\n\nexport const enum ParseStatementFlag {\n  StatementOnly = 0b0000,\n  AllowImportExport = 0b0001,\n  AllowDeclaration = 0b0010,\n  AllowFunctionDeclaration = 0b0100,\n  AllowLabeledFunction = 0b1000,\n}\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n */\nfunction babel7CompatTokens(tokens: (Token | N.Comment)[], input: string) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // @ts-expect-error: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default abstract class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(this: Parser, file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    this: Parser,\n    program: Undone<N.Program>,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, { at, localName });\n      }\n    }\n    let finishedProgram: N.Program;\n    if (end === tt.eof) {\n      // finish at eof for top level program\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      // finish immediately before the end token\n      finishedProgram = this.finishNodeAt(\n        program,\n        \"Program\",\n        createPositionWithColumnOffset(this.state.startLoc, -1),\n      );\n    }\n    return finishedProgram;\n  }\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = stmt as any;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode<N.InterpreterDirective>();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n\n  chStartsBindingIdentifier(ch: number, pos: number) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identifier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === charCodes.backslash) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  chStartsBindingPattern(ch: number) {\n    return (\n      ch === charCodes.leftSquareBracket || ch === charCodes.leftCurlyBrace\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `let` and declaration is allowed, check if it\n   * starts a variable declaration so that it should be interpreted as a keyword.\n   */\n  hasFollowingBindingAtom(): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return (\n      this.chStartsBindingPattern(nextCh) ||\n      this.chStartsBindingIdentifier(nextCh, next)\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `using` and declaration is allowed, check if it\n   * starts a variable declaration in the same line so that it should be interpreted as\n   * a keyword.\n   */\n  hasInLineFollowingBindingIdentifier(): boolean {\n    const next = this.nextTokenInLineStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingIdentifier(nextCh, next);\n  }\n\n  startsUsingForOf(): boolean {\n    const { type, containsEsc } = this.lookahead();\n    if (type === tt._of && !containsEsc) {\n      // `using of` must start a for-lhs-of statement\n      return false;\n    } else if (tokenIsIdentifier(type) && !this.hasFollowingLineBreak()) {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleItem\n  parseModuleItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowImportExport |\n        ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        // This function is actually also used to parse StatementItems,\n        // which with Annex B enabled allows labeled functions.\n        ParseStatementFlag.AllowLabeledFunction,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-StatementListItem\n  parseStatementListItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        (!this.options.annexB || this.state.strict\n          ? 0\n          : ParseStatementFlag.AllowLabeledFunction),\n    );\n  }\n\n  parseStatementOrSloppyAnnexBFunctionDeclaration(\n    this: Parser,\n    allowLabeledFunction: boolean = false,\n  ) {\n    let flags: ParseStatementFlag = ParseStatementFlag.StatementOnly;\n    if (this.options.annexB && !this.state.strict) {\n      flags |= ParseStatementFlag.AllowFunctionDeclaration;\n      if (allowLabeledFunction) {\n        flags |= ParseStatementFlag.AllowLabeledFunction;\n      }\n    }\n    return this.parseStatementLike(flags);\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  parseStatement(this: Parser) {\n    return this.parseStatementLike(ParseStatementFlag.StatementOnly);\n  }\n\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatementLike(\n    this: Parser,\n    flags: ParseStatementFlag,\n  ):\n    | N.Statement\n    | N.Declaration\n    | N.ImportDeclaration\n    | N.ExportDefaultDeclaration\n    | N.ExportNamedDeclaration\n    | N.ExportAllDeclaration {\n    let decorators: N.Decorator[] | null = null;\n\n    if (this.match(tt.at)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n\n  parseStatementContent(\n    this: Parser,\n    flags: ParseStatementFlag,\n    decorators?: N.Decorator[] | null,\n  ): N.Statement {\n    const starttype = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & ParseStatementFlag.AllowDeclaration);\n    const allowFunctionDeclaration = !!(\n      flags & ParseStatementFlag.AllowFunctionDeclaration\n    );\n    const topLevel = flags & ParseStatementFlag.AllowImportExport;\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node as Undone<N.DebuggerStatement>);\n      case tt._do:\n        return this.parseDoWhileStatement(node as Undone<N.DoWhileStatement>);\n      case tt._for:\n        return this.parseForStatement(node as Undone<N.ForStatement>);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (!allowFunctionDeclaration) {\n          this.raise(\n            this.state.strict\n              ? Errors.StrictFunction\n              : this.options.annexB\n              ? Errors.SloppyFunctionAnnexB\n              : Errors.SloppyFunction,\n            { at: this.state.startLoc },\n          );\n        }\n        return this.parseFunctionStatement(\n          node as Undone<N.FunctionDeclaration>,\n          false,\n          !allowDeclaration && allowFunctionDeclaration,\n        );\n      case tt._class:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(\n          this.maybeTakeDecorators(\n            decorators,\n            node as Undone<N.ClassDeclaration>,\n          ),\n          true,\n        );\n\n      case tt._if:\n        return this.parseIfStatement(node as Undone<N.IfStatement>);\n      case tt._return:\n        return this.parseReturnStatement(node as Undone<N.ReturnStatement>);\n      case tt._switch:\n        return this.parseSwitchStatement(node as Undone<N.SwitchStatement>);\n      case tt._throw:\n        return this.parseThrowStatement(node as Undone<N.ThrowStatement>);\n      case tt._try:\n        return this.parseTryStatement(node as Undone<N.TryStatement>);\n\n      case tt._using:\n        // using [no LineTerminator here][lookahead != `await`] BindingList[+Using]\n        if (\n          this.state.containsEsc ||\n          !this.hasInLineFollowingBindingIdentifier()\n        ) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, {\n            at: this.state.startLoc,\n          });\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          \"using\",\n        );\n      case tt._let: {\n        if (this.state.containsEsc) {\n          break;\n        }\n        // `let [` is an explicit negative lookahead for\n        // ExpressionStatement, so special-case it first.\n        const next = this.nextTokenStart();\n        const nextCh = this.codePointAtPos(next);\n        if (nextCh !== charCodes.leftSquareBracket) {\n          if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n          if (\n            !this.chStartsBindingIdentifier(nextCh, next) &&\n            nextCh !== charCodes.leftCurlyBrace\n          ) {\n            break;\n          }\n        }\n      }\n      // fall through\n      case tt._const: {\n        if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n      }\n      // fall through\n      case tt._var: {\n        const kind = this.state.value;\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          kind,\n        );\n      }\n      case tt._while:\n        return this.parseWhileStatement(node as Undone<N.WhileStatement>);\n      case tt._with:\n        return this.parseWithStatement(node as Undone<N.WithStatement>);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node as Undone<N.EmptyStatement>);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node as Undone<N.ImportDeclaration>);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(\n            node as Undone<\n              | N.ExportAllDeclaration\n              | N.ExportDefaultDeclaration\n              | N.ExportDefaultDeclaration\n            >,\n            decorators,\n          );\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(result);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (!allowDeclaration) {\n            this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next(); // eat 'async'\n          return this.parseFunctionStatement(\n            node as Undone<N.FunctionDeclaration>,\n            true,\n            !allowDeclaration && allowFunctionDeclaration,\n          );\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(\n        node as Undone<N.LabeledStatement>,\n        maybeName,\n        // @ts-expect-error migrate to Babel types\n        expr,\n        flags,\n      );\n    } else {\n      return this.parseExpressionStatement(\n        node as Undone<N.ExpressionStatement>,\n        expr,\n        decorators,\n      );\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, { at: node });\n    }\n  }\n\n  decoratorsEnabledBeforeExport(): boolean {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return (\n      this.hasPlugin(\"decorators\") &&\n      this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false\n    );\n  }\n\n  // Attach the decorators to the given class.\n  // NOTE: This method changes the .start location of the class, and thus\n  // can affect comment attachment. Calling it before or after finalizing\n  // the class node (and thus finalizing its comments) changes how comments\n  // before the `class` keyword or before the final .start location of the\n  // class are attached.\n  maybeTakeDecorators<T extends Undone<N.Class>>(\n    maybeDecorators: N.Decorator[] | null,\n    classNode: T,\n    exportNode?: Undone<N.ExportDefaultDeclaration | N.ExportNamedDeclaration>,\n  ): T {\n    if (maybeDecorators) {\n      if (classNode.decorators && classNode.decorators.length > 0) {\n        // Note: decorators attachment is only attempred multiple times\n        // when the class is part of an export declaration.\n        if (\n          typeof this.getPluginOption(\n            \"decorators\",\n            \"decoratorsBeforeExport\",\n          ) !== \"boolean\"\n        ) {\n          // If `decoratorsBeforeExport` was set to `true` or `false`, we\n          // already threw an error about decorators not being in a valid\n          // position.\n          this.raise(Errors.DecoratorsBeforeAfterExport, {\n            at: classNode.decorators[0],\n          });\n        }\n        classNode.decorators.unshift(...maybeDecorators);\n      } else {\n        classNode.decorators = maybeDecorators;\n      }\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(this: Parser, allowExport?: boolean): N.Decorator[] {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(tt.at));\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, { at: this.state.startLoc });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc,\n      });\n    }\n\n    return decorators;\n  }\n\n  parseDecorator(this: Parser): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode<N.Decorator>();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startLoc, expr);\n\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (\n          this.getPluginOption(\"decorators\", \"allowCallParenthesized\") ===\n            false &&\n          node.expression !== expr\n        ) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc,\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startLoc);\n          node.object = expr;\n          if (this.match(tt.privateName)) {\n            this.classScope.usePrivateName(\n              this.state.value,\n              this.state.startLoc,\n            );\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(this: Parser, expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: true,\n  ): N.BreakStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: false,\n  ): N.ContinueStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, { at: node, type });\n    }\n  }\n\n  parseDebuggerStatement(\n    node: Undone<N.DebuggerStatement>,\n  ): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(this: Parser): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  // https://tc39.es/ecma262/#prod-DoWhileStatement\n  parseDoWhileStatement(\n    this: Parser,\n    node: Undone<N.DoWhileStatement>,\n  ): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(\n    this: Parser,\n    node: Undone<N.ForStatement | N.ForInOf>,\n  ): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    const startsWithUsing = this.isContextual(tt._using);\n    const isLetOrUsing =\n      (startsWithLet && this.hasFollowingBindingAtom()) ||\n      (startsWithUsing && this.startsUsingForOf());\n    if (this.match(tt._var) || this.match(tt._const) || isLetOrUsing) {\n      const initNode = this.startNode<N.VariableDeclaration>();\n      const kind = this.state.value;\n      this.next();\n      this.parseVar(initNode, true, kind);\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n      const isForIn = this.match(tt._in);\n      if (isForIn && startsWithUsing) {\n        this.raise(Errors.ForInUsing, { at: init });\n      }\n      if (\n        (isForIn || this.isContextual(tt._of)) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node as Undone<N.ForInOf>, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, { at: init });\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, { at: init });\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { in: { type } });\n      return this.parseForIn(\n        node as Undone<N.ForInStatement | N.ForOfStatement>,\n        // @ts-expect-error init has been transformed to an assignable\n        init,\n        awaitAt,\n      );\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node as Undone<N.ForStatement>, init);\n  }\n\n  // https://tc39.es/ecma262/#prod-HoistableDeclaration\n  parseFunctionStatement(\n    this: Parser,\n    node: Undone<N.FunctionDeclaration>,\n    isAsync: boolean,\n    isHangingDeclaration: boolean,\n  ): N.FunctionDeclaration {\n    this.next(); // eat 'function'\n    return this.parseFunction(\n      node,\n      ParseFunctionFlag.Declaration |\n        (isHangingDeclaration ? ParseFunctionFlag.HangingDeclaration : 0) |\n        (isAsync ? ParseFunctionFlag.Async : 0),\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-IfStatement\n  parseIfStatement(this: Parser, node: Undone<N.IfStatement>) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    // Annex B.3.3\n    // https://tc39.es/ecma262/#sec-functiondeclarations-in-ifstatement-statement-clauses\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\n    node.alternate = this.eat(tt._else)\n      ? this.parseStatementOrSloppyAnnexBFunctionDeclaration()\n      : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(this: Parser, node: Undone<N.ReturnStatement>) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, { at: this.state.startLoc });\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-SwitchStatement\n  parseSwitchStatement(this: Parser, node: Undone<N.SwitchStatement>) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases: N.SwitchStatement[\"cases\"] = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        // @ts-expect-error Fixme\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(this: Parser, node: Undone<N.ThrowStatement>) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, { at: this.state.lastTokEndLoc });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(this: Parser): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    this.scope.enter(\n      this.options.annexB && param.type === \"Identifier\"\n        ? SCOPE_SIMPLE_CATCH\n        : 0,\n    );\n    this.checkLVal(param, {\n      in: { type: \"CatchClause\" },\n      binding: BIND_CATCH_PARAM,\n    });\n\n    return param;\n  }\n\n  parseTryStatement(\n    this: Parser,\n    node: Undone<N.TryStatement>,\n  ): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode<N.CatchClause>();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, { at: node });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-VariableStatement\n  // https://tc39.es/ecma262/#prod-LexicalDeclaration\n  parseVarStatement(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  // https://tc39.es/ecma262/#prod-WhileStatement\n  parseWhileStatement(\n    this: Parser,\n    node: Undone<N.WhileStatement>,\n  ): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(\n    this: Parser,\n    node: Undone<N.WithStatement>,\n  ): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, { at: this.state.startLoc });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: Undone<N.EmptyStatement>): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-LabelledStatement\n  parseLabeledStatement(\n    this: Parser,\n    node: Undone<N.LabeledStatement>,\n    maybeName: string,\n    expr: N.Identifier,\n    flags: ParseStatementFlag,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    // https://tc39.es/ecma262/#prod-LabelledItem\n    node.body =\n      flags & ParseStatementFlag.AllowLabeledFunction\n        ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true)\n        : this.parseStatement();\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: Undone<N.ExpressionStatement>,\n    expr: N.Expression,\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    decorators: N.Decorator[] | null,\n  ) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    this: Parser,\n    allowDirectives: boolean = false,\n    createNewLexicalScope: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode<N.BlockStatement>();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    this: Parser,\n    node: Undone<N.BlockStatementLike>,\n    allowDirectives: boolean | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body: N.BlockStatementLike[\"body\"] = (node.body = []);\n    const directives: N.BlockStatementLike[\"directives\"] = (node.directives =\n      []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    this: Parser,\n    body: N.Statement[],\n    directives: N.Directive[] | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = topLevel\n        ? this.parseModuleItem()\n        : this.parseStatementListItem();\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    this: Parser,\n    node: Undone<N.ForStatement>,\n    init?: N.VariableDeclaration | N.Expression | null,\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    this: Parser,\n    node: Undone<N.ForInOf>,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt?: Position | null,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        !this.options.annexB ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\" | \"using\",\n    allowMissingInitializer: boolean = false,\n  ): Undone<N.VariableDeclaration> {\n    const declarations: N.VariableDeclarator[] = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode<N.VariableDeclarator>();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n        ? this.parseMaybeAssignDisallowIn()\n        : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\",\n          });\n        } else if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\",\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(\n    this: Parser,\n    decl: Undone<N.VariableDeclarator>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\",\n  ): void {\n    // Unlike \"let\" which must be handled in checkLVal, it suffices to check\n    // await here because `using` must not precede binding patterns.\n    if (kind === \"using\" && !this.inModule && this.match(tt._await)) {\n      this.raise(Errors.AwaitInUsingBinding, { at: this.state.startLoc });\n    }\n    const id = this.parseBindingAtom();\n    this.checkLVal(id, {\n      in: { type: \"VariableDeclarator\" },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n    });\n    decl.id = id;\n  }\n\n  // https://tc39.es/ecma262/#prod-AsyncFunctionExpression\n  parseAsyncFunctionExpression(\n    this: Parser,\n    node: Undone<N.FunctionExpression>,\n  ): N.FunctionExpression {\n    return this.parseFunction(node, ParseFunctionFlag.Async);\n  }\n\n  // Parse a function declaration or expression (depending on the\n  // ParseFunctionFlag.Declaration flag).\n\n  parseFunction<T extends N.NormalFunction>(\n    this: Parser,\n    node: Undone<T>,\n    flags: ParseFunctionFlag = ParseFunctionFlag.Expression,\n  ): T {\n    const hangingDeclaration = flags & ParseFunctionFlag.HangingDeclaration;\n    const isDeclaration = !!(flags & ParseFunctionFlag.Declaration);\n    const requireId = isDeclaration && !(flags & ParseFunctionFlag.NullableId);\n    const isAsync = !!(flags & ParseFunctionFlag.Async);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star)) {\n      if (hangingDeclaration) {\n        this.raise(Errors.GeneratorInSingleStatementContext, {\n          at: this.state.startLoc,\n        });\n      }\n      this.next(); // eat *\n      node.generator = true;\n    }\n\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* isConstructor */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isDeclaration && !hangingDeclaration) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node as T);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node as T;\n  }\n\n  parseFunctionId(requireId?: boolean): N.Identifier | undefined | null {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(\n    this: Parser,\n    node: Undone<N.Function>,\n    isConstructor?: boolean,\n  ): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      ParseBindingListFlags.IS_FUNCTION_PARAMS |\n        (isConstructor ? ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS : 0),\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      !this.options.annexB || this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T extends N.Class>(\n    this: Parser,\n    node: Undone<T>,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next(); // 'class'\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    this: Parser,\n    hadSuperClass: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody = this.startNode<N.ClassBody>();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc,\n            });\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode<N.ClassMember>();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          // @ts-expect-error Fixme\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          // @ts-expect-error Fixme\n          member.kind === \"constructor\" &&\n          // @ts-expect-error Fixme\n          member.decorators &&\n          // @ts-expect-error Fixme\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, { at: member });\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, { at: this.state.startLoc });\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = member as any;\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = member as any;\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, member as any as N.StaticBlock);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod = member as N.ClassMethod;\n    const privateMethod = member as N.ClassPrivateMethod;\n    const publicProp = member as N.ClassProperty;\n    const privateProp = member as N.ClassPrivateProperty;\n    const accessorProp = member as N.ClassAccessorProperty;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key,\n        });\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, { at: key });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, { at: key });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, { at: publicMethod.key });\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, { at: publicMethod.key });\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (\n      isContextual &&\n      key.name === \"accessor\" &&\n      !this.isLineTerminator()\n    ) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(\n    this: Parser,\n    member: Undone<N.ClassMember>,\n  ): N.Expression | N.Identifier {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, { at: this.state.startLoc });\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc,\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<\n      N.StaticBlock & {\n        decorators?: Array<N.Decorator>;\n      }\n    >,\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body: N.Node[] = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, { at: member });\n    }\n  }\n\n  pushClassProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassProperty,\n  ) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, { at: prop.key });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: Undone<N.ClassPrivateProperty>,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed) {\n      // Not private, so not node is not a PrivateName and we can safely cast\n      const key = prop.key as N.Expression;\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        // Non-computed field, which is either an identifier named \"constructor\"\n        // or a string literal named \"constructor\"\n        this.raise(Errors.ConstructorClassField, { at: key });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key),\n        CLASS_ELEMENT_OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassPrivateMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: Undone<\n      N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod\n    >,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    methodOrProp: Undone<N.ClassMethod | N.ClassProperty>,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    this: Parser,\n    node: Undone<N.ClassPrivateProperty>,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(this: Parser, node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    this: Parser,\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    this: Parser,\n    node: Undone<\n      N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty\n    >,\n  ): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: Undone<N.Class>,\n    isStatement: boolean,\n    optionalId?: boolean | null,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, { at: this.state.startLoc });\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(this: Parser, node: Undone<N.Class>): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(\n    this: Parser,\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n    decorators: N.Decorator[] | null,\n  ): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar =\n      parseAfterDefault &&\n      this.eatExportStar(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const hasNamespace =\n      hasStar &&\n      this.maybeParseExportNamespaceSpecifier(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n      this.parseExportFrom(node as Undone<N.ExportNamedDeclaration>, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      this.unexpected(null, tt.braceL);\n    }\n\n    if (hasNamespace && parseAfterNamespace) {\n      this.unexpected(null, tt._from);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n      this.parseExportFrom(\n        node as Undone<N.ExportNamedDeclaration>,\n        isFromRequired,\n      );\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(\n        node as Undone<N.ExportNamedDeclaration>,\n      );\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (node2.declaration?.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      const node2 = node as Undone<N.ExportDefaultDeclaration>;\n      // export default ...\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl as N.ClassDeclaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n\n      this.checkExport(node2, true, true);\n\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n\n    this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(this.state.lastTokStartLoc);\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n  ): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(this: Parser): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    if (this.match(tt._function)) {\n      this.next();\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration | ParseFunctionFlag.NullableId,\n      );\n    } else if (this.isAsyncFunction()) {\n      this.next(); // eat 'async'\n      this.next(); // eat 'function'\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration |\n          ParseFunctionFlag.NullableId |\n          ParseFunctionFlag.Async,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, { at: this.state.startLoc });\n      }\n      return this.parseClass(\n        this.maybeTakeDecorators(\n          this.parseDecorators(false),\n          this.startNode<N.ClassDeclaration>(),\n        ),\n        true,\n        true,\n      );\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc,\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n  parseExportDeclaration(\n    this: Parser,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    node: Undone<N.ExportNamedDeclaration>,\n  ): N.Declaration | undefined | null {\n    if (this.match(tt._class)) {\n      const node = this.parseClass(\n        this.startNode<N.ClassDeclaration>(),\n        true,\n        false,\n      );\n      return node;\n    }\n    return this.parseStatementListItem() as N.Declaration;\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n    expect?: boolean,\n  ): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (\n          this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n        ) {\n          this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: Undone<N.ExportNamedDeclaration | N.ExportDefaultDeclaration>,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = (node as any as N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration,\n            });\n          }\n        }\n        // @ts-expect-error node.specifiers may not exist\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        // @ts-expect-error node.specifiers may not exist\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      // @ts-expect-error migrate to Babel types\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node: Undone<\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier\n    >,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, { at: node });\n      } else {\n        this.raise(Errors.DuplicateExport, { at: node, exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkImportReflection(node: Undone<N.ImportDeclaration>) {\n    if (node.module) {\n      if (\n        node.specifiers.length !== 1 ||\n        node.specifiers[0].type !== \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(Errors.ImportReflectionNotBinding, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n      if (node.assertions?.length > 0) {\n        this.raise(Errors.ImportReflectionHasAssertion, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n    }\n  }\n\n  checkJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ) {\n    // @ts-expect-error Fixme: node.type must be undefined because they are undone\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      // @ts-expect-error specifiers may not index node\n      const { specifiers } = node;\n      if (specifiers != null) {\n        // @ts-expect-error refine specifier types\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start,\n          });\n        }\n      }\n    }\n  }\n\n  parseMaybeImportReflection(node: Undone<N.ImportDeclaration>) {\n    let isImportReflection = false;\n    if (this.isContextual(tt._module)) {\n      const lookahead = this.lookahead();\n      const nextType = lookahead.type;\n      if (tokenIsIdentifier(nextType)) {\n        if (nextType !== tt._from) {\n          // import module x\n          isImportReflection = true;\n        } else {\n          const nextNextTokenFirstChar = this.input.charCodeAt(\n            this.nextTokenStartSince(lookahead.end),\n          );\n          if (nextNextTokenFirstChar === charCodes.lowercaseF) {\n            // import module from from ...\n            isImportReflection = true;\n          }\n        }\n      } else if (nextType !== tt.comma) {\n        // import module { x } ...\n        // import module \"foo\"\n        // They are invalid, we will continue parsing and throw\n        // a recoverable error later\n        isImportReflection = true;\n      }\n    }\n    if (isImportReflection) {\n      this.expectPlugin(\"importReflection\");\n      this.next(); // eat tt._module;\n      node.module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      node.module = false;\n    }\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(this: Parser, node: Undone<N.ImportDeclaration>): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      this.parseMaybeImportReflection(node);\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(tt._from);\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        // @ts-expect-error attributes have been deprecated\n        node.attributes = attributes;\n      }\n    }\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(this: Parser): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom() as N.StringLiteral;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldParseDefaultImport(node: Undone<N.ImportDeclaration>): boolean {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    node: Undone<N.ImportDeclaration>,\n    specifier: Undone<T>,\n    type: T[\"type\"],\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(specifier: Undone<T>, type: T[\"type\"], bindingType = BIND_LEXICAL) {\n    this.checkLVal(specifier.local, {\n      in: { type },\n      binding: bindingType,\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries AssertEntries}\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName,\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key,\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode<N.ImportDefaultSpecifier>(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode<N.ImportNamespaceSpecifier>();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: Undone<N.ImportDeclaration>) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode<N.ImportSpecifier>();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n        undefined,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: Undone<N.ImportSpecifier>,\n    importedIsString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    bindingType: BindingTypes | undefined,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: (imported as N.StringLiteral).value,\n        });\n      }\n      this.checkReservedWord(\n        (imported as N.Identifier).name,\n        specifier.loc.start,\n        true,\n        true,\n      );\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(\n      specifier,\n      \"ImportSpecifier\",\n      bindingType,\n    );\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n", "import type { Options } from \"../options\";\nimport type * as N from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  // todo(flow->ts) - this probably can be removed\n  // abstract jsxParseOpeningElementAfterName(\n  //   node: N.JSXOpeningElement,\n  // ): N.JSXOpeningElement;\n\n  constructor(options: Options | undefined | null, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): {\n    new (...args: any): ScopeHandler;\n  } {\n    return ScopeHandler;\n  }\n\n  parse(): N.File {\n    this.enterInitialScopes();\n    const file = this.startNode() as N.File;\n    const program = this.startNode() as N.Program;\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n", "import { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport type {\n  PluginConfig as ParserPlugin,\n  FlowPluginOptions,\n  RecordAndTuplePluginOptions,\n  PipelineOperatorPluginOptions,\n} from \"./typings\";\nimport Parser from \"./parser\";\n\nimport type { ExportedTokenType } from \"./tokenizer/types\";\nimport {\n  getExportedToken,\n  tt as internalTokenTypes,\n  type InternalTokenTypes,\n} from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(\n  internalTokenTypes: InternalTokenTypes,\n): Record<string, ExportedTokenType> {\n  const tokenTypes: Record<string, ExportedTokenType> = {};\n  for (const typeName of Object.keys(\n    internalTokenTypes,\n  ) as (keyof InternalTokenTypes)[]) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: Options | undefined | null, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: { new (...args: any): Parser } } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): {\n  new (...args: any): Parser;\n} {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      // @ts-expect-error todo(flow->ts)\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n\nexport type {\n  FlowPluginOptions,\n  ParserPlugin,\n  PipelineOperatorPluginOptions,\n  RecordAndTuplePluginOptions,\n};\nexport type ParserOptions = Partial<Options>;\n", "// contains synchronous API only so it can be exported as CJS and ESM\n\n/** @type {import('..').isDepIncluded} */\nfunction isDepIncluded(dep, optimizeDepsInclude) {\n  return optimizeDepsInclude.some((id) => parseIncludeStr(id) === dep)\n}\n\n/** @type {import('..').isDepExcluded} */\nfunction isDepExcluded(dep, optimizeDepsExclude) {\n  dep = parseIncludeStr(dep)\n  return optimizeDepsExclude.some(\n    (id) => id === dep || dep.startsWith(`${id}/`)\n  )\n}\n\n/** @type {import('..').isDepNoExternaled} */\nfunction isDepNoExternaled(dep, ssrNoExternal) {\n  if (ssrNoExternal === true) {\n    return true\n  } else {\n    return isMatch(dep, ssrNoExternal)\n  }\n}\n\n/** @type {import('..').isDepExternaled} */\nfunction isDepExternaled(dep, ssrExternal) {\n  return ssrExternal.includes(dep)\n}\n\n/**\n * @param {string} raw could be \"foo\" or \"foo > bar\" etc\n */\nfunction parseIncludeStr(raw) {\n  const lastArrow = raw.lastIndexOf('>')\n  return lastArrow === -1 ? raw : raw.slice(lastArrow + 1).trim()\n}\n\n/**\n * @param {string} target\n * @param {string | RegExp | (string | RegExp)[]} pattern\n */\nfunction isMatch(target, pattern) {\n  if (Array.isArray(pattern)) {\n    return pattern.some((p) => isMatch(target, p))\n  } else if (typeof pattern === 'string') {\n    return target === pattern\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(target)\n  }\n}\n\nmodule.exports = {\n  isDepIncluded,\n  isDepExcluded,\n  isDepNoExternaled,\n  isDepExternaled\n}\n", "import { dedent } from \"ts-dedent\"\nimport type { ViteDevServer, Plugin } from \"vite\"\nimport { assertAppTemplateIsCorrect } from \"./checks/appTemplate.js\"\nimport { assertRoutesFolderPathExists, assertNecessaryFilesArePresent } from \"./checks/routes.js\"\nimport { getTransformConfig, resetConfig } from \"./config.js\"\nimport { getFileInformation } from \"./fileInformation.js\"\nimport { transformCode } from \"./transforms/index.js\"\n\nlet viteServer: ViteDevServer | undefined\n\nconst virtualModuleId = \"virtual:inlang-static\"\nconst resolvedVirtualModuleId = \"\\0\" + virtualModuleId\n\nexport const plugin = () => {\n\treturn {\n\t\tname: \"vite-plugin-inlang-sdk-js-sveltekit\",\n\t\t// makes sure we run before vite-plugin-svelte\n\t\tenforce: \"pre\",\n\n\t\tconfigureServer(server) {\n\t\t\tviteServer = server as unknown as ViteDevServer\n\t\t},\n\n\t\tconfig() {\n\t\t\treturn {\n\t\t\t\tssr: {\n\t\t\t\t\t// makes sure that `@inlang/sdk-js` get's transformed by vite in order\n\t\t\t\t\t// to be able to use `SvelteKit`'s `$app` aliases\n\t\t\t\t\tnoExternal: [\"@inlang/sdk-js\"],\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\n\t\tresolveId(id) {\n\t\t\tif (id === virtualModuleId) {\n\t\t\t\treturn resolvedVirtualModuleId\n\t\t\t}\n\n\t\t\treturn\n\t\t},\n\n\t\tasync load(id) {\n\t\t\tconst config = await getTransformConfig()\n\t\t\tif (id === resolvedVirtualModuleId) {\n\t\t\t\treturn dedent`\n\t\t\t\t\texport const referenceLanguage = ${JSON.stringify(config.inlang.referenceLanguage)}\n\t\t\t\t\texport const languages = ${JSON.stringify(config.inlang.languages)}\n\t\t\t\t\texport const resources = ${JSON.stringify(\n\t\t\t\t\t\tawait config.inlang.readResources({ config: config.inlang }),\n\t\t\t\t\t)}\n\t\t\t\t`\n\t\t\t}\n\n\t\t\treturn\n\t\t},\n\n\t\tasync buildStart() {\n\t\t\tconst config = await getTransformConfig()\n\n\t\t\tawait assertAppTemplateIsCorrect(config)\n\t\t\tawait assertRoutesFolderPathExists(config)\n\t\t\tconst hasCreatedANewFile = await assertNecessaryFilesArePresent(config)\n\n\t\t\tif (hasCreatedANewFile) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tresetConfig()\n\t\t\t\t\tviteServer && viteServer.restart()\n\t\t\t\t}, 1000) // if the server immediately get's restarted, then you would not be able to kill the process with CTRL + C; It seems that delaying the restart fixes this issue\n\t\t\t}\n\t\t},\n\n\t\tasync transform(code, id) {\n\t\t\tconst config = await getTransformConfig()\n\n\t\t\tconst fileInformation = getFileInformation(config, id)\n\t\t\t// eslint-disable-next-line unicorn/no-null\n\t\t\tif (!fileInformation) return null\n\n\t\t\tconst transformedCode = await transformCode(config, code, fileInformation)\n\t\t\tif (config.debug) {\n\t\t\t\tconst filePath = id.replace(config.cwdFolderPath, \"\")\n\t\t\t\tconsole.info(dedent`\n\t\t\t\t\t-- INLANG DEBUG START-----------------------------------------------------------\n\n\t\t\t\t\ttransformed '${fileInformation.type}' file: '${filePath}'\n\n\t\t\t\t\t-- INPUT -----------------------------------------------------------------------\n\n\t\t\t\t\t${code}\n\n\t\t\t\t\t-- OUTPUT ----------------------------------------------------------------------\n\n\t\t\t\t\t${transformedCode}\n\n\t\t\t\t\t-- INLANG DEBUG END ------------------------------------------------------------\n\t\t\t\t`)\n\t\t\t}\n\n\t\t\treturn transformedCode\n\t\t\t\t.replaceAll(\"languages: languages\", \"languages\")\n\t\t\t\t.replaceAll(\"language: language\", \"language\")\n\t\t\t\t.replaceAll(\"i: i\", \"i\")\n\t\t},\n\t} satisfies Plugin\n}\n", "import { readFile, writeFile } from \"node:fs/promises\"\nimport type { TransformConfig } from \"../config.js\"\n\nexport const assertAppTemplateIsCorrect = async ({ svelteKit, cwdFolderPath }: TransformConfig) => {\n\tconst appTemplatePath = svelteKit.files.appTemplate\n\tconst markup = await readFile(appTemplatePath, { encoding: \"utf-8\" })\n\n\tconst updatedMarkup = removeHtmlLangAttribute(markup)\n\tif (!updatedMarkup) return\n\n\tconsole.info(\n\t\t`Updating '${appTemplatePath.replace(\n\t\t\tcwdFolderPath,\n\t\t\t\"\",\n\t\t)}' to remove the 'lang' attribute from the <html> tag.`,\n\t)\n\n\tawait writeFile(appTemplatePath, updatedMarkup, { encoding: \"utf-8\" })\n}\n\nconst REGEX_LANG_ATTRIBUTE = /<html[^>]*(\\slang=\"[^\"]*\")[^>]*>/\n\nexport const removeHtmlLangAttribute = (markup: string) => {\n\tconst execArray = REGEX_LANG_ATTRIBUTE.exec(markup)\n\tif (!execArray) return\n\n\tconst htmlTag = execArray[0] as string\n\tconst langAttribute = execArray[1] as string\n\tconst index = execArray.index\n\n\treturn (\n\t\tmarkup.slice(0, index) +\n\t\thtmlTag.replace(langAttribute, \"\") +\n\t\tmarkup.slice(index + htmlTag.length)\n\t)\n}\n", "import { mkdir, writeFile } from \"node:fs/promises\"\nimport path, { dirname } from \"node:path\"\nimport { dedent } from \"ts-dedent\"\nimport { InlangError } from \"../../../config/config.js\"\nimport { doesPathExist, TransformConfig } from \"../config.js\"\nimport type { FileType } from \"../fileInformation.js\"\n\nexport const assertRoutesFolderPathExists = async (config: TransformConfig) => {\n\tif (!(await doesPathExist(config.rootRoutesFolder))) {\n\t\tthrow new InlangError(dedent`\n\n\t\t\tCould not find the folder '${config.rootRoutesFolder.replace(config.cwdFolderPath, \"\")}'.\n\t\t\tIt is needed in order to circumvent a current limitation of SvelteKit. See https://github.com/inlang/inlang/issues/647.\n\t\t\tPlease create the folder and move all existing route files into it.\n\n\t\t`)\n\t}\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const assertNecessaryFilesArePresent = async (config: TransformConfig) => {\n\tconst preferredFileEnding = config.svelteKit.usesTypeScript ? \"ts\" : \"js\"\n\n\tconst getPathForFileType = (\n\t\tfileType: FileType,\n\t\tfileEnding: \"ts\" | \"js\" = preferredFileEnding,\n\t) => {\n\t\tswitch (fileType) {\n\t\t\tcase \"hooks.server.js\":\n\t\t\t\treturn `${config.svelteKit.files.serverHooks}.${fileEnding}`\n\t\t\tcase \"[language].json\":\n\t\t\t\treturn path.resolve(\n\t\t\t\t\tconfig.svelteKit.files.routes,\n\t\t\t\t\t\"inlang\",\n\t\t\t\t\t\"[language].json\",\n\t\t\t\t\t`+server.${fileEnding}`,\n\t\t\t\t)\n\t\t\tcase \"+layout.server.js\":\n\t\t\t\treturn path.resolve(config.svelteKit.files.routes, `+layout.server.${fileEnding}`)\n\t\t\tcase \"+layout.js\":\n\t\t\t\treturn path.resolve(config.svelteKit.files.routes, `+layout.${fileEnding}`)\n\t\t\tcase \"+layout.svelte\":\n\t\t\t\treturn path.resolve(config.svelteKit.files.routes, `+layout.svelte`)\n\t\t\tcase \"+page.server.js\":\n\t\t\t\treturn path.resolve(config.svelteKit.files.routes, `+page.server.${fileEnding}`)\n\t\t\tcase \"+page.js\":\n\t\t\t\treturn path.resolve(config.svelteKit.files.routes, `+page.${fileEnding}`)\n\t\t\tcase \"+page.svelte\":\n\t\t\t\treturn path.resolve(config.svelteKit.files.routes, `+page.svelte`)\n\t\t}\n\n\t\tthrow Error(\"not implemented\")\n\t}\n\n\tconst doesFileOfTypeExist = async (fileType: FileType): Promise<boolean> => {\n\t\tconst files = fileType.endsWith(\".svelte\")\n\t\t\t? [getPathForFileType(fileType)]\n\t\t\t: [getPathForFileType(fileType, \"js\"), getPathForFileType(fileType, \"ts\")]\n\n\t\treturn (await Promise.all(files.map((file) => doesPathExist(file)))).some((result) => result)\n\t}\n\n\tconst filesTypesToCreate = [\n\t\t`hooks.server.js`,\n\t\t`[language].json`,\n\t\t`+layout.server.js`,\n\t\t`+layout.js`,\n\t\t\"+layout.svelte\",\n\t\t...(config.isStatic && config.languageInUrl\n\t\t\t? ([`+page.js`, \"+page.svelte\"] satisfies FileType[])\n\t\t\t: []),\n\t] satisfies FileType[]\n\n\t// eslint-disable-next-line no-async-promise-executor\n\tconst results = await Promise.all(\n\t\tfilesTypesToCreate.map(\n\t\t\t(fileType) =>\n\t\t\t\t// eslint-disable-next-line no-async-promise-executor\n\t\t\t\tnew Promise<boolean>(async (resolve) => {\n\t\t\t\t\tif (await doesFileOfTypeExist(fileType)) {\n\t\t\t\t\t\treturn resolve(false)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst path = getPathForFileType(fileType)\n\t\t\t\t\tawait mkdir(dirname(path), { recursive: true }).catch(() => undefined)\n\t\t\t\t\t// TODO: improve robustness by using something like `vite-plugin-restart` that recreates those file if they were deleted\n\t\t\t\t\tconst message = dedent`\n\t\t\t\t\t\tThis file was created by inlang.\n\t\t\t\t\t\tIt is needed in order to circumvent a current limitation of SvelteKit. See https://github.com/inlang/inlang/issues/647\n\t\t\t\t\t\tYou can remove this comment and modify the file as you like. We just need to make sure it exists.\n\t\t\t\t\t\tPlease do not delete it (inlang will recreate it if needed).\n\t\t\t\t\t`\n\t\t\t\t\tawait writeFile(\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tpath.endsWith(\".svelte\") ? `<!-- ${message} -->` : `/* ${message} */`,\n\t\t\t\t\t)\n\n\t\t\t\t\tresolve(true)\n\t\t\t\t}),\n\t\t),\n\t)\n\n\t// TODO: remove not needed files if config changes\n\n\t// returns true if a new file was created\n\treturn results.some((result) => result)\n}\n", "var _PluginSetupError_id;\n/**\n * Error thrown when a plugin fails to setup.\n */\nexport class PluginSetupError extends Error {\n    constructor() {\n        super(...arguments);\n        _PluginSetupError_id.set(this, \"PluginSetupError\");\n    }\n}\n_PluginSetupError_id = new WeakMap();\n", "/**\n * Special values that tell deepmerge to perform a certain action.\n */\nconst actions = {\n    defaultMerge: Symbol(\"deepmerge-ts: default merge\"),\n    skip: Symbol(\"deepmerge-ts: skip\"),\n};\n/**\n * Special values that tell deepmergeInto to perform a certain action.\n */\nconst actionsInto = {\n    defaultMerge: actions.defaultMerge,\n};\n\n/**\n * The default function to update meta data.\n */\nfunction defaultMetaDataUpdater(previousMeta, metaMeta) {\n    return metaMeta;\n}\n\n/**\n * Get the type of the given object.\n *\n * @param object - The object to get the type of.\n * @returns The type of the given object.\n */\nfunction getObjectType(object) {\n    if (typeof object !== \"object\" || object === null) {\n        return 0 /* ObjectType.NOT */;\n    }\n    if (Array.isArray(object)) {\n        return 2 /* ObjectType.ARRAY */;\n    }\n    if (isRecord(object)) {\n        return 1 /* ObjectType.RECORD */;\n    }\n    if (object instanceof Set) {\n        return 3 /* ObjectType.SET */;\n    }\n    if (object instanceof Map) {\n        return 4 /* ObjectType.MAP */;\n    }\n    return 5 /* ObjectType.OTHER */;\n}\n/**\n * Get the keys of the given objects including symbol keys.\n *\n * Note: Only keys to enumerable properties are returned.\n *\n * @param objects - An array of objects to get the keys of.\n * @returns A set containing all the keys of all the given objects.\n */\nfunction getKeys(objects) {\n    const keys = new Set();\n    /* eslint-disable functional/no-loop-statements, functional/no-expression-statements -- using a loop here is more efficient. */\n    for (const object of objects) {\n        for (const key of [\n            ...Object.keys(object),\n            ...Object.getOwnPropertySymbols(object),\n        ]) {\n            keys.add(key);\n        }\n    }\n    /* eslint-enable functional/no-loop-statements, functional/no-expression-statements */\n    return keys;\n}\n/**\n * Does the given object have the given property.\n *\n * @param object - The object to test.\n * @param property - The property to test.\n * @returns Whether the object has the property.\n */\nfunction objectHasProperty(object, property) {\n    return (typeof object === \"object\" &&\n        Object.prototype.propertyIsEnumerable.call(object, property));\n}\n/**\n * Get an iterable object that iterates over the given iterables.\n */\nfunction getIterableOfIterables(iterables) {\n    return {\n        // eslint-disable-next-line functional/functional-parameters\n        *[Symbol.iterator]() {\n            // eslint-disable-next-line functional/no-loop-statements\n            for (const iterable of iterables) {\n                // eslint-disable-next-line functional/no-loop-statements\n                for (const value of iterable) {\n                    yield value;\n                }\n            }\n        },\n    };\n}\nconst validRecordToStringValues = new Set([\n    \"[object Object]\",\n    \"[object Module]\",\n]);\n/**\n * Does the given object appear to be a record.\n */\nfunction isRecord(value) {\n    // All records are objects.\n    if (!validRecordToStringValues.has(Object.prototype.toString.call(value))) {\n        return false;\n    }\n    const { constructor } = value;\n    // If has modified constructor.\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (constructor === undefined) {\n        return true;\n    }\n    // eslint-disable-next-line prefer-destructuring\n    const prototype = constructor.prototype;\n    // If has modified prototype.\n    if (prototype === null ||\n        typeof prototype !== \"object\" ||\n        !validRecordToStringValues.has(Object.prototype.toString.call(prototype))) {\n        return false;\n    }\n    // If constructor does not have an Object-specific method.\n    // eslint-disable-next-line sonarjs/prefer-single-boolean-return, no-prototype-builtins\n    if (!prototype.hasOwnProperty(\"isPrototypeOf\")) {\n        return false;\n    }\n    // Most likely a record.\n    return true;\n}\n\n/**\n * The default strategy to merge records.\n *\n * @param values - The records.\n */\nfunction mergeRecords$2(values, utils, meta) {\n    const result = {};\n    /* eslint-disable functional/no-loop-statements, functional/no-conditional-statements, functional/no-expression-statements, functional/immutable-data -- using imperative code here is more performant. */\n    for (const key of getKeys(values)) {\n        const propValues = [];\n        for (const value of values) {\n            if (objectHasProperty(value, key)) {\n                propValues.push(value[key]);\n            }\n        }\n        if (propValues.length === 0) {\n            continue;\n        }\n        const updatedMeta = utils.metaDataUpdater(meta, {\n            key,\n            parents: values,\n        });\n        const propertyResult = mergeUnknowns(propValues, utils, updatedMeta);\n        if (propertyResult === actions.skip) {\n            continue;\n        }\n        if (key === \"__proto__\") {\n            Object.defineProperty(result, key, {\n                value: propertyResult,\n                configurable: true,\n                enumerable: true,\n                writable: true,\n            });\n        }\n        else {\n            result[key] = propertyResult;\n        }\n    }\n    /* eslint-enable functional/no-loop-statements, functional/no-conditional-statements, functional/no-expression-statements, functional/immutable-data */\n    return result;\n}\n/**\n * The default strategy to merge arrays.\n *\n * @param values - The arrays.\n */\nfunction mergeArrays$2(values) {\n    return values.flat();\n}\n/**\n * The default strategy to merge sets.\n *\n * @param values - The sets.\n */\nfunction mergeSets$2(values) {\n    return new Set(getIterableOfIterables(values));\n}\n/**\n * The default strategy to merge maps.\n *\n * @param values - The maps.\n */\nfunction mergeMaps$2(values) {\n    return new Map(getIterableOfIterables(values));\n}\n/**\n * Get the last value in the given array.\n */\nfunction mergeOthers$2(values) {\n    return values.at(-1);\n}\n\nvar defaultMergeFunctions = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    mergeArrays: mergeArrays$2,\n    mergeMaps: mergeMaps$2,\n    mergeOthers: mergeOthers$2,\n    mergeRecords: mergeRecords$2,\n    mergeSets: mergeSets$2\n});\n\n/**\n * Deeply merge objects.\n *\n * @param objects - The objects to merge.\n */\nfunction deepmerge(\n// eslint-disable-next-line functional/functional-parameters\n...objects) {\n    return deepmergeCustom({})(...objects);\n}\nfunction deepmergeCustom(options, rootMetaData) {\n    const utils = getUtils(options, customizedDeepmerge);\n    /**\n     * The customized deepmerge function.\n     */\n    function customizedDeepmerge(\n    // eslint-disable-next-line functional/functional-parameters\n    ...objects) {\n        return mergeUnknowns(objects, utils, rootMetaData);\n    }\n    return customizedDeepmerge;\n}\n/**\n * The the utils that are available to the merge functions.\n *\n * @param options - The options the user specified\n */\nfunction getUtils(options, customizedDeepmerge) {\n    return {\n        defaultMergeFunctions,\n        mergeFunctions: {\n            ...defaultMergeFunctions,\n            ...Object.fromEntries(Object.entries(options)\n                .filter(([key, option]) => Object.hasOwn(defaultMergeFunctions, key))\n                .map(([key, option]) => option === false\n                ? [key, mergeOthers$2]\n                : [key, option])),\n        },\n        metaDataUpdater: (options.metaDataUpdater ??\n            defaultMetaDataUpdater),\n        deepmerge: customizedDeepmerge,\n        useImplicitDefaultMerging: options.enableImplicitDefaultMerging ?? false,\n        actions,\n    };\n}\n/**\n * Merge unknown things.\n *\n * @param values - The values.\n */\nfunction mergeUnknowns(values, utils, meta) {\n    if (values.length === 0) {\n        return undefined;\n    }\n    if (values.length === 1) {\n        return mergeOthers$1(values, utils, meta);\n    }\n    const type = getObjectType(values[0]);\n    /* eslint-disable functional/no-loop-statements, functional/no-conditional-statements -- using imperative code here is more performant. */\n    if (type !== 0 /* ObjectType.NOT */ && type !== 5 /* ObjectType.OTHER */) {\n        for (let m_index = 1; m_index < values.length; m_index++) {\n            if (getObjectType(values[m_index]) === type) {\n                continue;\n            }\n            return mergeOthers$1(values, utils, meta);\n        }\n    }\n    /* eslint-enable functional/no-loop-statements, functional/no-conditional-statements */\n    switch (type) {\n        case 1 /* ObjectType.RECORD */: {\n            return mergeRecords$1(values, utils, meta);\n        }\n        case 2 /* ObjectType.ARRAY */: {\n            return mergeArrays$1(values, utils, meta);\n        }\n        case 3 /* ObjectType.SET */: {\n            return mergeSets$1(values, utils, meta);\n        }\n        case 4 /* ObjectType.MAP */: {\n            return mergeMaps$1(values, utils, meta);\n        }\n        default: {\n            return mergeOthers$1(values, utils, meta);\n        }\n    }\n}\n/**\n * Merge records.\n *\n * @param values - The records.\n */\nfunction mergeRecords$1(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeRecords(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeRecords !==\n                utils.defaultMergeFunctions.mergeRecords)) {\n        return utils.defaultMergeFunctions.mergeRecords(values, utils, meta);\n    }\n    return result;\n}\n/**\n * Merge arrays.\n *\n * @param values - The arrays.\n */\nfunction mergeArrays$1(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeArrays(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeArrays !==\n                utils.defaultMergeFunctions.mergeArrays)) {\n        return utils.defaultMergeFunctions.mergeArrays(values);\n    }\n    return result;\n}\n/**\n * Merge sets.\n *\n * @param values - The sets.\n */\nfunction mergeSets$1(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeSets(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeSets !== utils.defaultMergeFunctions.mergeSets)) {\n        return utils.defaultMergeFunctions.mergeSets(values);\n    }\n    return result;\n}\n/**\n * Merge maps.\n *\n * @param values - The maps.\n */\nfunction mergeMaps$1(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeMaps(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeMaps !== utils.defaultMergeFunctions.mergeMaps)) {\n        return utils.defaultMergeFunctions.mergeMaps(values);\n    }\n    return result;\n}\n/**\n * Merge other things.\n *\n * @param values - The other things.\n */\nfunction mergeOthers$1(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeOthers(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeOthers !==\n                utils.defaultMergeFunctions.mergeOthers)) {\n        return utils.defaultMergeFunctions.mergeOthers(values);\n    }\n    return result;\n}\n\n/**\n * The default strategy to merge records into a target record.\n *\n * @param m_target - The result will be mutated into this record\n * @param values - The records (including the target's value if there is one).\n */\nfunction mergeRecords(m_target, values, utils, meta) {\n    for (const key of getKeys(values)) {\n        const propValues = [];\n        for (const value of values) {\n            if (objectHasProperty(value, key)) {\n                propValues.push(value[key]);\n            }\n        }\n        if (propValues.length === 0) {\n            continue;\n        }\n        const updatedMeta = utils.metaDataUpdater(meta, {\n            key,\n            parents: values,\n        });\n        const propertyTarget = { value: propValues[0] };\n        mergeUnknownsInto(propertyTarget, propValues, utils, updatedMeta);\n        if (key === \"__proto__\") {\n            Object.defineProperty(m_target, key, {\n                value: propertyTarget.value,\n                configurable: true,\n                enumerable: true,\n                writable: true,\n            });\n        }\n        else {\n            m_target.value[key] = propertyTarget.value;\n        }\n    }\n}\n/**\n * The default strategy to merge arrays into a target array.\n *\n * @param m_target - The result will be mutated into this array\n * @param values - The arrays (including the target's value if there is one).\n */\nfunction mergeArrays(m_target, values) {\n    m_target.value.push(...values.slice(1).flat());\n}\n/**\n * The default strategy to merge sets into a target set.\n *\n * @param m_target - The result will be mutated into this set\n * @param values - The sets (including the target's value if there is one).\n */\nfunction mergeSets(m_target, values) {\n    for (const value of getIterableOfIterables(values.slice(1))) {\n        m_target.value.add(value);\n    }\n}\n/**\n * The default strategy to merge maps into a target map.\n *\n * @param m_target - The result will be mutated into this map\n * @param values - The maps (including the target's value if there is one).\n */\nfunction mergeMaps(m_target, values) {\n    for (const [key, value] of getIterableOfIterables(values.slice(1))) {\n        m_target.value.set(key, value);\n    }\n}\n/**\n * Set the target to the last value.\n */\nfunction mergeOthers(m_target, values) {\n    m_target.value = values.at(-1);\n}\n\nvar defaultMergeIntoFunctions = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    mergeArrays: mergeArrays,\n    mergeMaps: mergeMaps,\n    mergeOthers: mergeOthers,\n    mergeRecords: mergeRecords,\n    mergeSets: mergeSets\n});\n\nfunction deepmergeInto(target, ...objects) {\n    return void deepmergeIntoCustom({})(target, ...objects);\n}\nfunction deepmergeIntoCustom(options, rootMetaData) {\n    const utils = getIntoUtils(options, customizedDeepmergeInto);\n    /**\n     * The customized deepmerge function.\n     */\n    function customizedDeepmergeInto(target, ...objects) {\n        mergeUnknownsInto({ value: target }, [target, ...objects], utils, rootMetaData);\n    }\n    return customizedDeepmergeInto;\n}\n/**\n * The the utils that are available to the merge functions.\n *\n * @param options - The options the user specified\n */\nfunction getIntoUtils(options, customizedDeepmergeInto) {\n    return {\n        defaultMergeFunctions: defaultMergeIntoFunctions,\n        mergeFunctions: {\n            ...defaultMergeIntoFunctions,\n            ...Object.fromEntries(Object.entries(options)\n                .filter(([key, option]) => Object.hasOwn(defaultMergeIntoFunctions, key))\n                .map(([key, option]) => option === false\n                ? [key, mergeOthers]\n                : [key, option])),\n        },\n        metaDataUpdater: (options.metaDataUpdater ??\n            defaultMetaDataUpdater),\n        deepmergeInto: customizedDeepmergeInto,\n        actions: actionsInto,\n    };\n}\n/**\n * Merge unknown things into a target.\n *\n * @param m_target - The target to merge into.\n * @param values - The values.\n */\nfunction mergeUnknownsInto(m_target, values, utils, meta\n// eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n) {\n    if (values.length === 0) {\n        return;\n    }\n    if (values.length === 1) {\n        return void mergeOthersInto(m_target, values, utils, meta);\n    }\n    const type = getObjectType(m_target.value);\n    if (type !== 0 /* ObjectType.NOT */ && type !== 5 /* ObjectType.OTHER */) {\n        for (let m_index = 1; m_index < values.length; m_index++) {\n            if (getObjectType(values[m_index]) === type) {\n                continue;\n            }\n            return void mergeOthersInto(m_target, values, utils, meta);\n        }\n    }\n    switch (type) {\n        case 1 /* ObjectType.RECORD */: {\n            return void mergeRecordsInto(m_target, values, utils, meta);\n        }\n        case 2 /* ObjectType.ARRAY */: {\n            return void mergeArraysInto(m_target, values, utils, meta);\n        }\n        case 3 /* ObjectType.SET */: {\n            return void mergeSetsInto(m_target, values, utils, meta);\n        }\n        case 4 /* ObjectType.MAP */: {\n            return void mergeMapsInto(m_target, values, utils, meta);\n        }\n        default: {\n            return void mergeOthersInto(m_target, values, utils, meta);\n        }\n    }\n}\n/**\n * Merge records into a target record.\n *\n * @param m_target - The target to merge into.\n * @param values - The records.\n */\nfunction mergeRecordsInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeRecords(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeRecords(m_target, values, utils, meta);\n    }\n}\n/**\n * Merge arrays into a target array.\n *\n * @param m_target - The target to merge into.\n * @param values - The arrays.\n */\nfunction mergeArraysInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeArrays(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeArrays(m_target, values);\n    }\n}\n/**\n * Merge sets into a target set.\n *\n * @param m_target - The target to merge into.\n * @param values - The sets.\n */\nfunction mergeSetsInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeSets(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeSets(m_target, values);\n    }\n}\n/**\n * Merge maps into a target map.\n *\n * @param m_target - The target to merge into.\n * @param values - The maps.\n */\nfunction mergeMapsInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeMaps(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeMaps(m_target, values);\n    }\n}\n/**\n * Merge other things into a target.\n *\n * @param m_target - The target to merge into.\n * @param values - The other things.\n */\nfunction mergeOthersInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeOthers(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge ||\n        m_target.value === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeOthers(m_target, values);\n    }\n}\n\nexport { deepmerge, deepmergeCustom, deepmergeInto, deepmergeIntoCustom, getKeys, getObjectType, objectHasProperty };\n", "import { PluginSetupError } from \"./errors/PluginSetupError.js\";\nimport { deepmergeInto } from \"deepmerge-ts\";\nimport { dedent } from \"ts-dedent\";\n/**\n * Setup the plugins and process the config callback.\n *\n * Returns a tuple of the config and errors that occured during the setup of plugins.\n * The function mutates the config object. Mutating the config object\n * is expected to:\n *\n * 1. decrease the initial startup time of inlang apps with 10+ plugins\n *     (immutability is expensive).\n * 2. leads to a lightly better API for `setupConfig`.\n * 3. plugins configs are only merged\n *\n * We can change this behaviour\n * if required as this function is only used internally.\n *\n */\nexport async function setupPlugins(args) {\n    if (args.config.plugins === undefined) {\n        args.config.plugins = [];\n        return [args.config];\n    }\n    // Note: we can't use structuredClone because the object could contain functions\n    // To have some sort of immutability (for the first level), we destructure it into a new object\n    const mergedConfig = { ...args.config };\n    const errors = [];\n    for (let i = 0; i < args.config.plugins.length; i++) {\n        try {\n            // If a plugin uses a setup function, the setup function needs to be invoked.\n            if (typeof args.config.plugins[i] === \"function\") {\n                args.config.plugins[i] = args.config.plugins[i](args.env);\n            }\n            const plugin = args.config.plugins[i];\n            // const withErrorHandlingPlugin = withErrorHandling(plugin.id, plugin)\n            // const config = await withErrorHandlingPlugin?.config({ ...mergedConfig })\n            const config = await plugin?.config({ ...mergedConfig });\n            deepmergeInto(mergedConfig, config);\n        }\n        catch (error) {\n            // continue with next plugin.\n            // if one plugin fails, the whole app should not crash.\n            if (!error || typeof error !== \"object\" || !(\"message\" in error)) {\n                errors.push(new PluginSetupError(\"\" + error));\n                continue;\n            }\n            const id = args.config.plugins[i]?.id;\n            if (!id) {\n                errors.push(new PluginSetupError(dedent `\n\t\t\t\t\tFailed to setup a plugin:\n\n\t\t\t\t\t${error?.message ?? \"Unknown error\"}\n\n\t\t\t\t\tIt seems a plugin was configured incorrectly.\n\t\t\t\t\tTry to change 'plugin' to 'plugin()' or consult the documentation of that plugin.\n\t\t\t\t`));\n            }\n            else {\n                errors.push(new PluginSetupError(dedent `\n\t\t\t\t\tFailed to setup plugin '${id}':\n\n\t\t\t\t\t${error?.message ?? \"Unknown error\"}\n\t\t\t\t`));\n            }\n        }\n    }\n    // remove duplicates from languages in case multiple plugins add the same language.\n    mergedConfig.languages = [...new Set(mergedConfig.languages)];\n    return [mergedConfig, errors.length > 0 ? errors : undefined];\n}\n", "import { setupPlugins } from \"../plugin/setupPlugins.js\";\nimport { dedent } from \"ts-dedent\";\nimport { parseConfig } from \"./parseConfig.js\";\nimport { ZodError } from \"zod\";\n/**\n * Sets up the inlang config module.\n *\n * @example\n * \timport { setupConfig, type InlangConfigModule } from \"@inlang/core/config\"\n *\n * \tconst module = (await import(\"./inlang.config.js\")) as InlangConfigModule\n * \tconst config = await setupConfig({ module, env })\n */\nexport async function setupConfig(args) {\n    if (args.module.defineConfig === undefined) {\n        throw new Error(`The \"defineConfig\" function is missing from the \"inlang.config.js\" file.`);\n    }\n    let config = await args.module.defineConfig(args.env);\n    const [configWithPlugins, pluginErrors] = await setupPlugins({ config, env: args.env });\n    config = configWithPlugins;\n    const [parsedConfig, testConfigException] = await parseConfig({ config: config });\n    // throw an error. the config is broken without a path to recovery\n    if (testConfigException) {\n        throw new Error(dedent `\n\t\t\tThe inlang.config.js is invalid.\n\n\t\t\t# The following errors occurred during the setup of plugins:\n\n\t\t\t${pluginErrors ? pluginErrors.map((e) => e.message).join(\"\\n\") : \"None \u2705\"}\n\n\t\t\t# The following errors occurred during the validation of the config:\n\n\t\t\t${formatErrors(testConfigException)}\n\n\t\t\t---\n\n\t\t\tIf plugins return errors, chances are high that the plugin errors are the root cause\n\t\t\tfor the config errors. Try to fix the plugin errors first.\n\n\t\t`);\n    }\n    // plugins returned an error but the config is still usable\n    // -> only log the errors\n    if (pluginErrors) {\n        for (const e of pluginErrors)\n            console.error(e);\n    }\n    return parsedConfig;\n}\nconst formatErrors = (error) => {\n    if (error instanceof ZodError) {\n        return error.errors.map((e) => `[${e.path}] ${e.message}`).join(\"\\n\");\n    }\n    return error.message;\n};\n", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            getErrorMap(),\n            errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /[0-9A-HJKMNP-TV-Z]{26}/;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\nconst emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst emojiRegex = /^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// Adapted from https://stackoverflow.com/a/3143231\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n        this.toLowerCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n        this.toUpperCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return OK(async (...args) => {\n                const error = new ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return OK((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nconst custom = (check, params = {}, \n/*\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n", "import { z } from \"zod\";\n/**\n * The zod schemas for the AST.\n *\n * The zod schema can be used to parse and validate\n * the AST nodes. Read more at https://zod.dev/\n */\nconst Node = z.object({\n    type: z.string(),\n    metadata: z.any().optional(),\n});\nconst Identifier = Node.extend({\n    type: z.literal(\"Identifier\"),\n    name: z.string(),\n});\nconst LanguageTag = Node.extend({\n    type: z.literal(\"LanguageTag\"),\n    name: z.string(),\n});\nconst Text = Node.extend({\n    type: z.literal(\"Text\"),\n    value: z.string(),\n});\nconst VariableReference = Node.extend({\n    type: z.literal(\"VariableReference\"),\n    name: z.string(),\n});\nconst Placeholder = Node.extend({\n    type: z.literal(\"Placeholder\"),\n    body: VariableReference,\n});\nconst Pattern = Node.extend({\n    type: z.literal(\"Pattern\"),\n    elements: z.array(Text.or(Placeholder)),\n});\nconst Message = Node.extend({\n    type: z.literal(\"Message\"),\n    id: Identifier,\n    pattern: Pattern,\n});\nexport const Resource = Node.extend({\n    type: z.literal(\"Resource\"),\n    languageTag: LanguageTag,\n    body: z.array(Message),\n});\n", "var _ParseConfigException_id;\nimport { Resource } from \"../ast/zod.js\";\nimport { dedent } from \"ts-dedent\";\nimport { zConfig } from \"./zod.js\";\nexport class ParseConfigException extends Error {\n    constructor() {\n        super(...arguments);\n        _ParseConfigException_id.set(this, \"ParseConfigException\");\n    }\n}\n_ParseConfigException_id = new WeakMap();\n/**\n * Validates the config.\n *\n * If you want to test the config of the inlang.config.js file,\n * use the `testConfigFile` function instead.\n *\n * @example\n * const [success, error] = await testConfig(args)\n */\nexport async function parseConfig(args) {\n    // each function throws an error if the validation fails.\n    try {\n        // validate the config -> throws if invalid\n        hasSetupAResourcePlugin(args.config);\n        const parsedConfig = zConfig.passthrough().parse(args.config);\n        referenceLanguageMustBeInLanguages(args.config);\n        const resources = await args.config.readResources({ config: args.config });\n        validateResources(resources);\n        await languagesMatch(args.config, resources);\n        await roundtripTest(args.config, resources);\n        return [parsedConfig, undefined];\n    }\n    catch (error) {\n        return [undefined, error];\n    }\n}\nfunction hasSetupAResourcePlugin(config) {\n    if (!config.readResources || !config.writeResources) {\n        throw new ParseConfigException(`It seems you didn't set up a plugin to handle Resource files. See https://inlang.com/documentation/plugins/registry.`);\n    }\n}\nfunction referenceLanguageMustBeInLanguages(config) {\n    if (!config.languages.includes(config.referenceLanguage)) {\n        throw new ParseConfigException(`The reference language \"${config.referenceLanguage}\" must be included in the list of languages.`);\n    }\n}\nfunction validateResources(resources) {\n    for (const resource of resources) {\n        // parse throws an error if any resource is invalid\n        Resource.parse(resource);\n    }\n}\nasync function languagesMatch(config, resources) {\n    const languages = resources.map((resource) => resource.languageTag.name);\n    // sort the languages to ensure that the order does not matter\n    // and convert the array to a string to compare the arrays\n    const areEqual = languages.sort().join(\",\") === config.languages.sort().join(\",\");\n    if (areEqual === false) {\n        // TODO error message should contain the languages that are missing\n        throw new ParseConfigException(`The list of languages in the config file does not match the returned resources from \\`readResources()\\`.`);\n    }\n}\n/**\n * Testing a roundtrip of reading and writing resources.\n *\n * readResources -> AST (1) -> writeResources -> readResources -> AST (2).\n * AST (1) and AST (2) must be equal if the AST is not modified.\n *\n * Otherwise, the defined readResources and writeResources functions are not\n * implemented correctly e.g. by missing messages in the roundtrip.\n */\nasync function roundtripTest(config, initialResources) {\n    const commonErrorMessage = \"A roundtrip test of the readResources and writeResources functions failed:\\n\";\n    await config.writeResources({ config, resources: initialResources });\n    const readResourcesAgain = await config.readResources({ config });\n    // check if the number of resources is the same\n    if (initialResources.length !== readResourcesAgain.length) {\n        throw new ParseConfigException(commonErrorMessage + \"The number of resources don't match.\");\n    }\n    // check if the resources match\n    for (const intialResource of initialResources) {\n        // find the matching resource\n        const matchingReadResourceAgain = readResourcesAgain.find((readResourceAgain) => readResourceAgain.languageTag.name === intialResource.languageTag.name);\n        // check if the resource exists\n        if (matchingReadResourceAgain === undefined) {\n            throw new ParseConfigException(commonErrorMessage + `Missing the resource \"${intialResource.languageTag.name}\"`);\n        }\n        // check if the messages are identical\n        for (const [messageIndex, initialMessage] of intialResource.body.entries()) {\n            if (JSON.stringify(initialMessage) !==\n                JSON.stringify(matchingReadResourceAgain.body[messageIndex]))\n                throw new ParseConfigException(dedent(`\n${commonErrorMessage}\nThe message with id \"${initialMessage.id.name}\" does not match for the resource\nwith languageTag.name \"${intialResource.languageTag.name}\".\n\nReceived:\n${JSON.stringify(matchingReadResourceAgain.body[messageIndex], undefined, 2)}\n\nExpected:\n${JSON.stringify(initialMessage, undefined, 2)}\n`));\n        }\n    }\n}\n", "import * as z from \"zod\";\n/**\n * The document selector settings for the IDE extension.\n */\nconst documentSelectorSchema = z\n    .array(z.object({\n    language: z.string().optional(),\n    scheme: z.string().optional(),\n    pattern: z.string().optional(),\n    notebookType: z.string().optional(),\n}))\n    .optional();\n/**\n * The position from where to where the reference can be found.\n */\nconst positionSchema = z.object({\n    start: z.object({\n        line: z.number(),\n        character: z.number(),\n    }),\n    end: z.object({\n        line: z.number(),\n        character: z.number(),\n    }),\n});\nconst messageReferenceSchema = z.object({\n    messageId: z.string(),\n    position: positionSchema,\n});\nexport const zodIdeExtensionConfigSchema = z.object({\n    /**\n     * Defines matchers for message references inside the code.\n     *\n     * @param args represents the data to conduct the search on\n     * @returns a promise with matched message references\n     */\n    messageReferenceMatchers: z\n        .array(z\n        .function()\n        .args(z.object({ documentText: z.string() }))\n        .returns(z.promise(z.array(messageReferenceSchema))))\n        .optional(),\n    /**\n     * Defines the options to extract messages.\n     */\n    extractMessageOptions: z\n        .array(z.object({\n        /**\n         * Function which is called, when the user finished the message extraction command.\n         *\n         * @param messageId is the message identifier entered by the user\n         * @param selection is the text which was extracted\n         * @returns the code which is inserted into the document\n         */\n        callback: z.function().args(z.string(), z.string()).returns(z.string()),\n    }))\n        .optional(),\n    /**\n     * An array of VSCode DocumentSelectors.\n     *\n     * The document selectors specify for which files/programming languages\n     * (typescript, svelte, etc.) the extension should be activated.\n     *\n     * See https://code.visualstudio.com/api/references/document-selector\n     */\n    documentSelectors: documentSelectorSchema,\n});\n", "import { z } from \"zod\";\nimport { Resource } from \"../ast/zod.js\";\nimport { zodIdeExtensionConfigSchema } from \"./ideExtension/zodSchema.js\";\n/**\n * The zod schema for the config.\n *\n * The zod schema can be used to parse and\n * validate the config schema. Read more\n * at https://zod.dev/\n */\nexport const zConfig = z.object({\n    referenceLanguage: z.string().transform((value) => value),\n    languages: z.array(z.string()).refine((items) => new Set(items).size === items.length, {\n        message: \"Languages contains duplicates. The provided languages must be unique.\",\n    }),\n    lint: z\n        .object({\n        rules: z.array(z.any()),\n    })\n        .optional(),\n    readResources: z\n        .function()\n        .args(z.any())\n        .returns(z.promise(z.array(Resource))),\n    writeResources: z.function().args(z.any()).returns(z.promise(z.void())),\n    ideExtension: zodIdeExtensionConfigSchema.optional(),\n    plugins: z.union([z.undefined(), z.array(z.object({ id: z.string(), config: z.function() }))]),\n    // TODO define lint and experimental\n});\n", "/**\n * Importing ES modules either from a local path, or from a url.\n *\n * The imported module must be ESM. A good indicator is whether\n * the \"type\" property in a package.json is set to \"module\" if\n * node is used.\n *\n * Read more on https://inlang.com/documentation/config\n */\n//\n// - explitcly export the interface of $import to be consumed\n//   in the config with JSdoc.\n//\n// - not using ReturnType or FunctionArguments to increase DX\n//   when hovering over the type.\nimport { dedent } from \"ts-dedent\";\nimport { normalizePath } from \"@inlang-git/fs\";\n/**\n * Initializes the $import function.\n *\n * @example\n * const $import = initialize$import({ fs: fs, fetch });\n * const module = await $import('./some-module.js');\n */\nexport function initialize$import(args) {\n    // resembles a native import api\n    return (uri) => $import(uri, args);\n}\n/**\n * Error thrown when the $import function fails.\n *\n * Dedicated class to make it easier to identify this error.\n */\nclass $ImportError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"$ImportError\";\n    }\n}\n/**\n * Importing ES modules either from a local path, or from a url.\n *\n * The imported module must be ESM. A good indicator is whether\n * the \"type\" property in a package.json is set to \"module\" if\n * node is used.\n *\n * Read more on https://inlang.com/documentation/config\n */\nasync function $import(uri, environment) {\n    // avoiding browser built-in shadowing of fetch as global variable\n    const _fetch = environment.fetch;\n    // polyfill for environments that don't support dynamic\n    // http imports yet like VSCode.\n    const moduleAsText = uri.startsWith(\"http\")\n        ? await (await _fetch(uri)).text()\n        : (await environment.fs.readFile(normalizePath(uri), { encoding: \"utf-8\" }));\n    const moduleWithMimeType = \"data:application/javascript,\" + encodeURIComponent(moduleAsText);\n    try {\n        return await import(/* @vite-ignore */ moduleWithMimeType);\n    }\n    catch (error) {\n        let message = `Error while importing ${uri}: ${error?.message ?? \"Unknown error\"}`;\n        if (error instanceof SyntaxError && uri.includes(\"jsdelivr\")) {\n            message += dedent `\\n\\n\nAre you sure that the file exists on JSDelivr?\n\nThe error indicates that the imported file does not exist on JSDelivr. For non-existent files, JSDelivr returns a 404 text that JS cannot parse as a module and throws a SyntaxError.\n\t\t\t`;\n        }\n        throw new $ImportError(message);\n    }\n}\n", "/*\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\nexport function normalizePath(path) {\n    if (path === \"\\\\\" || path === \"/\")\n        return \"/\";\n    const len = path.length;\n    if (len <= 1)\n        return path;\n    // ensure that win32 namespaces has two leading slashes, so that the path is\n    // handled properly by the win32 version of path.parse() after being normalized\n    // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n    let prefix = \"\";\n    if (len > 4 && path[3] === \"\\\\\") {\n        const ch = path[2];\n        if ((ch === \"?\" || ch === \".\") && path.slice(0, 2) === \"\\\\\\\\\") {\n            path = path.slice(2);\n            prefix = \"//\";\n        }\n    }\n    const segs = path.split(/[/\\\\]+/);\n    return prefix + segs.join(\"/\");\n}\n", "import type { $fs } from \"@inlang/core/environment\"\nimport { type InlangConfig, type InlangConfigModule, setupConfig } from \"@inlang/core/config\"\nimport { initialize$import, InlangEnvironment } from \"@inlang/core/environment\"\nimport type { SdkConfig } from \"@inlang/sdk-js-plugin\"\nimport { dedent } from \"ts-dedent\"\n\nexport type InlangConfigWithSdkProps = InlangConfig & {\n\tsdk: SdkConfig\n}\n\nexport class InlangError extends Error {}\n\nexport const initInlangEnvironment = async (): Promise<InlangEnvironment> => {\n\tconst fs = await import(\"node:fs/promises\").catch(\n\t\t() =>\n\t\t\tnew Proxy({} as $fs, {\n\t\t\t\tget: (target, key) => {\n\t\t\t\t\tif (key === \"then\") return Promise.resolve(target)\n\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tthrow new InlangError(\"`node:fs/promises` is not available in the current environment\")\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t)\n\n\treturn {\n\t\t$fs: fs,\n\t\t$import: initialize$import({\n\t\t\tfs,\n\t\t\tfetch: async (...args) =>\n\t\t\t\tawait fetch(...args).catch((error) => {\n\t\t\t\t\t// TODO: create an issue\n\t\t\t\t\tif (\n\t\t\t\t\t\terror instanceof TypeError &&\n\t\t\t\t\t\t(error.cause as any)?.code === \"UND_ERR_CONNECT_TIMEOUT\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new InlangError(\n\t\t\t\t\t\t\tdedent`\n\n\t\t\t\t\t\t\tNode.js failed to resolve the URL. This can happen sometimes during development. Usually restarting the server helps.\n\n\t\t\t\t\t\t`,\n\t\t\t\t\t\t\t{ cause: error },\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error\n\t\t\t\t}),\n\t\t}),\n\t}\n}\n\nexport const initConfig = async (module: InlangConfigModule) => {\n\tif (!module) {\n\t\tthrow Error(\"could not read `inlang.config.js`\")\n\t}\n\tconst env = await initInlangEnvironment()\n\n\treturn setupConfig({ module, env })\n}\n", "import fs from \"fs\";\nimport * as types from \"ast-types\";\nimport { parse } from \"./lib/parser.js\";\nimport { Printer } from \"./lib/printer.js\";\nexport { \n/**\n * Parse a string of code into an augmented syntax tree suitable for\n * arbitrary modification and reprinting.\n */\nparse, \n/**\n * Convenient shorthand for the ast-types package.\n */\ntypes, };\n/**\n * Traverse and potentially modify an abstract syntax tree using a\n * convenient visitor syntax:\n *\n *   recast.visit(ast, {\n *     names: [],\n *     visitIdentifier: function(path) {\n *       var node = path.value;\n *       this.visitor.names.push(node.name);\n *       this.traverse(path);\n *     }\n *   });\n */\nexport { visit } from \"ast-types\";\n/**\n * Reprint a modified syntax tree using as much of the original source\n * code as possible.\n */\nexport function print(node, options) {\n    return new Printer(options).print(node);\n}\n/**\n * Print without attempting to reuse any original source code.\n */\nexport function prettyPrint(node, options) {\n    return new Printer(options).printGenerically(node);\n}\n/**\n * Convenient command-line interface (see e.g. example/add-braces).\n */\nexport function run(transformer, options) {\n    return runFile(process.argv[2], transformer, options);\n}\nfunction runFile(path, transformer, options) {\n    fs.readFile(path, \"utf-8\", function (err, code) {\n        if (err) {\n            console.error(err);\n            return;\n        }\n        runString(code, transformer, options);\n    });\n}\nfunction defaultWriteback(output) {\n    process.stdout.write(output);\n}\nfunction runString(code, transformer, options) {\n    var writeback = (options && options.writeback) || defaultWriteback;\n    transformer(parse(code, options), function (node) {\n        writeback(print(node, options).code);\n    });\n}\n", "import assert from \"assert\";\nimport * as types from \"ast-types\";\nvar b = types.builders;\nvar isObject = types.builtInTypes.object;\nvar isArray = types.builtInTypes.array;\nimport { normalize as normalizeOptions } from \"./options.js\";\nimport { fromString } from \"./lines.js\";\nimport { attach as attachComments } from \"./comments.js\";\nimport * as util from \"./util.js\";\nexport function parse(source, options) {\n    options = normalizeOptions(options);\n    var lines = fromString(source, options);\n    var sourceWithoutTabs = lines.toString({\n        tabWidth: options.tabWidth,\n        reuseWhitespace: false,\n        useTabs: false,\n    });\n    var comments = [];\n    var ast = options.parser.parse(sourceWithoutTabs, {\n        jsx: true,\n        loc: true,\n        locations: true,\n        range: options.range,\n        comment: true,\n        onComment: comments,\n        tolerant: util.getOption(options, \"tolerant\", true),\n        ecmaVersion: 6,\n        sourceType: util.getOption(options, \"sourceType\", \"module\"),\n    });\n    // Use ast.tokens if possible, and otherwise fall back to the Esprima\n    // tokenizer. All the preconfigured ../parsers/* expose ast.tokens\n    // automatically, but custom parsers might need additional configuration\n    // to avoid this fallback.\n    var tokens = Array.isArray(ast.tokens)\n        ? ast.tokens\n        : require(\"esprima\").tokenize(sourceWithoutTabs, {\n            loc: true,\n        });\n    // We will reattach the tokens array to the file object below.\n    delete ast.tokens;\n    // Make sure every token has a token.value string.\n    tokens.forEach(function (token) {\n        if (typeof token.value !== \"string\") {\n            token.value = lines.sliceString(token.loc.start, token.loc.end);\n        }\n    });\n    if (Array.isArray(ast.comments)) {\n        comments = ast.comments;\n        delete ast.comments;\n    }\n    if (ast.loc) {\n        // If the source was empty, some parsers give loc.{start,end}.line\n        // values of 0, instead of the minimum of 1.\n        util.fixFaultyLocations(ast, lines);\n    }\n    else {\n        ast.loc = {\n            start: lines.firstPos(),\n            end: lines.lastPos(),\n        };\n    }\n    ast.loc.lines = lines;\n    ast.loc.indent = 0;\n    var file;\n    var program;\n    if (ast.type === \"Program\") {\n        program = ast;\n        // In order to ensure we reprint leading and trailing program\n        // comments, wrap the original Program node with a File node. Only\n        // ESTree parsers (Acorn and Esprima) return a Program as the root AST\n        // node. Most other (Babylon-like) parsers return a File.\n        file = b.file(ast, options.sourceFileName || null);\n        file.loc = {\n            start: lines.firstPos(),\n            end: lines.lastPos(),\n            lines: lines,\n            indent: 0,\n        };\n    }\n    else if (ast.type === \"File\") {\n        file = ast;\n        program = file.program;\n    }\n    // Expose file.tokens unless the caller passed false for options.tokens.\n    if (options.tokens) {\n        file.tokens = tokens;\n    }\n    // Expand the Program's .loc to include all comments (not just those\n    // attached to the Program node, as its children may have comments as\n    // well), since sometimes program.loc.{start,end} will coincide with the\n    // .loc.{start,end} of the first and last *statements*, mistakenly\n    // excluding comments that fall outside that region.\n    var trueProgramLoc = util.getTrueLoc({\n        type: program.type,\n        loc: program.loc,\n        body: [],\n        comments: comments,\n    }, lines);\n    program.loc.start = trueProgramLoc.start;\n    program.loc.end = trueProgramLoc.end;\n    // Passing file.program here instead of just file means that initial\n    // comments will be attached to program.body[0] instead of program.\n    attachComments(comments, program.body.length ? file.program : file, lines);\n    // Return a copy of the original AST so that any changes made may be\n    // compared to the original.\n    return new TreeCopier(lines, tokens).copy(file);\n}\nvar TreeCopier = function TreeCopier(lines, tokens) {\n    assert.ok(this instanceof TreeCopier);\n    this.lines = lines;\n    this.tokens = tokens;\n    this.startTokenIndex = 0;\n    this.endTokenIndex = tokens.length;\n    this.indent = 0;\n    this.seen = new Map();\n};\nvar TCp = TreeCopier.prototype;\nTCp.copy = function (node) {\n    if (this.seen.has(node)) {\n        return this.seen.get(node);\n    }\n    if (isArray.check(node)) {\n        var copy_1 = new Array(node.length);\n        this.seen.set(node, copy_1);\n        node.forEach(function (item, i) {\n            copy_1[i] = this.copy(item);\n        }, this);\n        return copy_1;\n    }\n    if (!isObject.check(node)) {\n        return node;\n    }\n    util.fixFaultyLocations(node, this.lines);\n    var copy = Object.create(Object.getPrototypeOf(node), {\n        original: {\n            // Provide a link from the copy to the original.\n            value: node,\n            configurable: false,\n            enumerable: false,\n            writable: true,\n        },\n    });\n    this.seen.set(node, copy);\n    var loc = node.loc;\n    var oldIndent = this.indent;\n    var newIndent = oldIndent;\n    var oldStartTokenIndex = this.startTokenIndex;\n    var oldEndTokenIndex = this.endTokenIndex;\n    if (loc) {\n        // When node is a comment, we set node.loc.indent to\n        // node.loc.start.column so that, when/if we print the comment by\n        // itself, we can strip that much whitespace from the left margin of\n        // the comment. This only really matters for multiline Block comments,\n        // but it doesn't hurt for Line comments.\n        if (node.type === \"Block\" ||\n            node.type === \"Line\" ||\n            node.type === \"CommentBlock\" ||\n            node.type === \"CommentLine\" ||\n            this.lines.isPrecededOnlyByWhitespace(loc.start)) {\n            newIndent = this.indent = loc.start.column;\n        }\n        // Every node.loc has a reference to the original source lines as well\n        // as a complete list of source tokens.\n        loc.lines = this.lines;\n        loc.tokens = this.tokens;\n        loc.indent = newIndent;\n        // Set loc.start.token and loc.end.token such that\n        // loc.tokens.slice(loc.start.token, loc.end.token) returns a list of\n        // all the tokens that make up this node.\n        this.findTokenRange(loc);\n    }\n    var keys = Object.keys(node);\n    var keyCount = keys.length;\n    for (var i = 0; i < keyCount; ++i) {\n        var key = keys[i];\n        if (key === \"loc\") {\n            copy[key] = node[key];\n        }\n        else if (key === \"tokens\" && node.type === \"File\") {\n            // Preserve file.tokens (uncopied) in case client code cares about\n            // it, even though Recast ignores it when reprinting.\n            copy[key] = node[key];\n        }\n        else {\n            copy[key] = this.copy(node[key]);\n        }\n    }\n    this.indent = oldIndent;\n    this.startTokenIndex = oldStartTokenIndex;\n    this.endTokenIndex = oldEndTokenIndex;\n    return copy;\n};\n// If we didn't have any idea where in loc.tokens to look for tokens\n// contained by this loc, a binary search would be appropriate, but\n// because we maintain this.startTokenIndex and this.endTokenIndex as we\n// traverse the AST, we only need to make small (linear) adjustments to\n// those indexes with each recursive iteration.\nTCp.findTokenRange = function (loc) {\n    // In the unlikely event that loc.tokens[this.startTokenIndex] starts\n    // *after* loc.start, we need to rewind this.startTokenIndex first.\n    while (this.startTokenIndex > 0) {\n        var token = loc.tokens[this.startTokenIndex];\n        if (util.comparePos(loc.start, token.loc.start) < 0) {\n            --this.startTokenIndex;\n        }\n        else\n            break;\n    }\n    // In the unlikely event that loc.tokens[this.endTokenIndex - 1] ends\n    // *before* loc.end, we need to fast-forward this.endTokenIndex first.\n    while (this.endTokenIndex < loc.tokens.length) {\n        var token = loc.tokens[this.endTokenIndex];\n        if (util.comparePos(token.loc.end, loc.end) < 0) {\n            ++this.endTokenIndex;\n        }\n        else\n            break;\n    }\n    // Increment this.startTokenIndex until we've found the first token\n    // contained by this node.\n    while (this.startTokenIndex < this.endTokenIndex) {\n        var token = loc.tokens[this.startTokenIndex];\n        if (util.comparePos(token.loc.start, loc.start) < 0) {\n            ++this.startTokenIndex;\n        }\n        else\n            break;\n    }\n    // Index into loc.tokens of the first token within this node.\n    loc.start.token = this.startTokenIndex;\n    // Decrement this.endTokenIndex until we've found the first token after\n    // this node (not contained by the node).\n    while (this.endTokenIndex > this.startTokenIndex) {\n        var token = loc.tokens[this.endTokenIndex - 1];\n        if (util.comparePos(loc.end, token.loc.end) < 0) {\n            --this.endTokenIndex;\n        }\n        else\n            break;\n    }\n    // Index into loc.tokens of the first token *after* this node.\n    // If loc.start.token === loc.end.token, the node contains no tokens,\n    // and the index is that of the next token following this node.\n    loc.end.token = this.endTokenIndex;\n};\n", "import { getLineTerminator } from \"./util.js\";\nvar defaults = {\n    parser: import(\"../parsers/esprima.js\"),\n    tabWidth: 4,\n    useTabs: false,\n    reuseWhitespace: true,\n    lineTerminator: getLineTerminator(),\n    wrapColumn: 74,\n    sourceFileName: null,\n    sourceMapName: null,\n    sourceRoot: null,\n    inputSourceMap: null,\n    range: false,\n    tolerant: true,\n    quote: null,\n    trailingComma: false,\n    arrayBracketSpacing: false,\n    objectCurlySpacing: true,\n    arrowParensAlways: false,\n    flowObjectCommas: true,\n    tokens: true,\n};\nvar hasOwn = defaults.hasOwnProperty;\n// Copy options and fill in default values.\nexport function normalize(opts) {\n    var options = opts || defaults;\n    function get(key) {\n        return hasOwn.call(options, key) ? options[key] : defaults[key];\n    }\n    return {\n        tabWidth: +get(\"tabWidth\"),\n        useTabs: !!get(\"useTabs\"),\n        reuseWhitespace: !!get(\"reuseWhitespace\"),\n        lineTerminator: get(\"lineTerminator\"),\n        wrapColumn: Math.max(get(\"wrapColumn\"), 0),\n        sourceFileName: get(\"sourceFileName\"),\n        sourceMapName: get(\"sourceMapName\"),\n        sourceRoot: get(\"sourceRoot\"),\n        inputSourceMap: get(\"inputSourceMap\"),\n        parser: get(\"esprima\") || get(\"parser\"),\n        range: get(\"range\"),\n        tolerant: get(\"tolerant\"),\n        quote: get(\"quote\"),\n        trailingComma: get(\"trailingComma\"),\n        arrayBracketSpacing: get(\"arrayBracketSpacing\"),\n        objectCurlySpacing: get(\"objectCurlySpacing\"),\n        arrowParensAlways: get(\"arrowParensAlways\"),\n        flowObjectCommas: get(\"flowObjectCommas\"),\n        tokens: !!get(\"tokens\"),\n    };\n}\n", "import { __assign } from \"tslib\";\nimport assert from \"assert\";\nimport sourceMap from \"source-map\";\nimport { normalize as normalizeOptions } from \"./options.js\";\nimport { comparePos } from \"./util.js\";\nimport Mapping from \"./mapping.js\";\nvar Lines = /** @class */ (function () {\n    function Lines(infos, sourceFileName) {\n        if (sourceFileName === void 0) { sourceFileName = null; }\n        this.infos = infos;\n        this.mappings = [];\n        this.cachedSourceMap = null;\n        this.cachedTabWidth = void 0;\n        assert.ok(infos.length > 0);\n        this.length = infos.length;\n        this.name = sourceFileName || null;\n        if (this.name) {\n            this.mappings.push(new Mapping(this, {\n                start: this.firstPos(),\n                end: this.lastPos(),\n            }));\n        }\n    }\n    Lines.prototype.toString = function (options) {\n        return this.sliceString(this.firstPos(), this.lastPos(), options);\n    };\n    Lines.prototype.getSourceMap = function (sourceMapName, sourceRoot) {\n        if (!sourceMapName) {\n            // Although we could make up a name or generate an anonymous\n            // source map, instead we assume that any consumer who does not\n            // provide a name does not actually want a source map.\n            return null;\n        }\n        var targetLines = this;\n        function updateJSON(json) {\n            json = json || {};\n            json.file = sourceMapName;\n            if (sourceRoot) {\n                json.sourceRoot = sourceRoot;\n            }\n            return json;\n        }\n        if (targetLines.cachedSourceMap) {\n            // Since Lines objects are immutable, we can reuse any source map\n            // that was previously generated. Nevertheless, we return a new\n            // JSON object here to protect the cached source map from outside\n            // modification.\n            return updateJSON(targetLines.cachedSourceMap.toJSON());\n        }\n        var smg = new sourceMap.SourceMapGenerator(updateJSON());\n        var sourcesToContents = {};\n        targetLines.mappings.forEach(function (mapping) {\n            var sourceCursor = mapping.sourceLines.skipSpaces(mapping.sourceLoc.start) ||\n                mapping.sourceLines.lastPos();\n            var targetCursor = targetLines.skipSpaces(mapping.targetLoc.start) ||\n                targetLines.lastPos();\n            while (comparePos(sourceCursor, mapping.sourceLoc.end) < 0 &&\n                comparePos(targetCursor, mapping.targetLoc.end) < 0) {\n                var sourceChar = mapping.sourceLines.charAt(sourceCursor);\n                var targetChar = targetLines.charAt(targetCursor);\n                assert.strictEqual(sourceChar, targetChar);\n                var sourceName = mapping.sourceLines.name;\n                // Add mappings one character at a time for maximum resolution.\n                smg.addMapping({\n                    source: sourceName,\n                    original: { line: sourceCursor.line, column: sourceCursor.column },\n                    generated: { line: targetCursor.line, column: targetCursor.column },\n                });\n                if (!hasOwn.call(sourcesToContents, sourceName)) {\n                    var sourceContent = mapping.sourceLines.toString();\n                    smg.setSourceContent(sourceName, sourceContent);\n                    sourcesToContents[sourceName] = sourceContent;\n                }\n                targetLines.nextPos(targetCursor, true);\n                mapping.sourceLines.nextPos(sourceCursor, true);\n            }\n        });\n        targetLines.cachedSourceMap = smg;\n        return smg.toJSON();\n    };\n    Lines.prototype.bootstrapCharAt = function (pos) {\n        assert.strictEqual(typeof pos, \"object\");\n        assert.strictEqual(typeof pos.line, \"number\");\n        assert.strictEqual(typeof pos.column, \"number\");\n        var line = pos.line, column = pos.column, strings = this.toString().split(lineTerminatorSeqExp), string = strings[line - 1];\n        if (typeof string === \"undefined\")\n            return \"\";\n        if (column === string.length && line < strings.length)\n            return \"\\n\";\n        if (column >= string.length)\n            return \"\";\n        return string.charAt(column);\n    };\n    Lines.prototype.charAt = function (pos) {\n        assert.strictEqual(typeof pos, \"object\");\n        assert.strictEqual(typeof pos.line, \"number\");\n        assert.strictEqual(typeof pos.column, \"number\");\n        var line = pos.line, column = pos.column, secret = this, infos = secret.infos, info = infos[line - 1], c = column;\n        if (typeof info === \"undefined\" || c < 0)\n            return \"\";\n        var indent = this.getIndentAt(line);\n        if (c < indent)\n            return \" \";\n        c += info.sliceStart - indent;\n        if (c === info.sliceEnd && line < this.length)\n            return \"\\n\";\n        if (c >= info.sliceEnd)\n            return \"\";\n        return info.line.charAt(c);\n    };\n    Lines.prototype.stripMargin = function (width, skipFirstLine) {\n        if (width === 0)\n            return this;\n        assert.ok(width > 0, \"negative margin: \" + width);\n        if (skipFirstLine && this.length === 1)\n            return this;\n        var lines = new Lines(this.infos.map(function (info, i) {\n            if (info.line && (i > 0 || !skipFirstLine)) {\n                info = __assign(__assign({}, info), { indent: Math.max(0, info.indent - width) });\n            }\n            return info;\n        }));\n        if (this.mappings.length > 0) {\n            var newMappings_1 = lines.mappings;\n            assert.strictEqual(newMappings_1.length, 0);\n            this.mappings.forEach(function (mapping) {\n                newMappings_1.push(mapping.indent(width, skipFirstLine, true));\n            });\n        }\n        return lines;\n    };\n    Lines.prototype.indent = function (by) {\n        if (by === 0) {\n            return this;\n        }\n        var lines = new Lines(this.infos.map(function (info) {\n            if (info.line && !info.locked) {\n                info = __assign(__assign({}, info), { indent: info.indent + by });\n            }\n            return info;\n        }));\n        if (this.mappings.length > 0) {\n            var newMappings_2 = lines.mappings;\n            assert.strictEqual(newMappings_2.length, 0);\n            this.mappings.forEach(function (mapping) {\n                newMappings_2.push(mapping.indent(by));\n            });\n        }\n        return lines;\n    };\n    Lines.prototype.indentTail = function (by) {\n        if (by === 0) {\n            return this;\n        }\n        if (this.length < 2) {\n            return this;\n        }\n        var lines = new Lines(this.infos.map(function (info, i) {\n            if (i > 0 && info.line && !info.locked) {\n                info = __assign(__assign({}, info), { indent: info.indent + by });\n            }\n            return info;\n        }));\n        if (this.mappings.length > 0) {\n            var newMappings_3 = lines.mappings;\n            assert.strictEqual(newMappings_3.length, 0);\n            this.mappings.forEach(function (mapping) {\n                newMappings_3.push(mapping.indent(by, true));\n            });\n        }\n        return lines;\n    };\n    Lines.prototype.lockIndentTail = function () {\n        if (this.length < 2) {\n            return this;\n        }\n        return new Lines(this.infos.map(function (info, i) { return (__assign(__assign({}, info), { locked: i > 0 })); }));\n    };\n    Lines.prototype.getIndentAt = function (line) {\n        assert.ok(line >= 1, \"no line \" + line + \" (line numbers start from 1)\");\n        return Math.max(this.infos[line - 1].indent, 0);\n    };\n    Lines.prototype.guessTabWidth = function () {\n        if (typeof this.cachedTabWidth === \"number\") {\n            return this.cachedTabWidth;\n        }\n        var counts = []; // Sparse array.\n        var lastIndent = 0;\n        for (var line = 1, last = this.length; line <= last; ++line) {\n            var info = this.infos[line - 1];\n            var sliced = info.line.slice(info.sliceStart, info.sliceEnd);\n            // Whitespace-only lines don't tell us much about the likely tab\n            // width of this code.\n            if (isOnlyWhitespace(sliced)) {\n                continue;\n            }\n            var diff = Math.abs(info.indent - lastIndent);\n            counts[diff] = ~~counts[diff] + 1;\n            lastIndent = info.indent;\n        }\n        var maxCount = -1;\n        var result = 2;\n        for (var tabWidth = 1; tabWidth < counts.length; tabWidth += 1) {\n            if (hasOwn.call(counts, tabWidth) && counts[tabWidth] > maxCount) {\n                maxCount = counts[tabWidth];\n                result = tabWidth;\n            }\n        }\n        return (this.cachedTabWidth = result);\n    };\n    // Determine if the list of lines has a first line that starts with a //\n    // or /* comment. If this is the case, the code may need to be wrapped in\n    // parens to avoid ASI issues.\n    Lines.prototype.startsWithComment = function () {\n        if (this.infos.length === 0) {\n            return false;\n        }\n        var firstLineInfo = this.infos[0], sliceStart = firstLineInfo.sliceStart, sliceEnd = firstLineInfo.sliceEnd, firstLine = firstLineInfo.line.slice(sliceStart, sliceEnd).trim();\n        return (firstLine.length === 0 ||\n            firstLine.slice(0, 2) === \"//\" ||\n            firstLine.slice(0, 2) === \"/*\");\n    };\n    Lines.prototype.isOnlyWhitespace = function () {\n        return isOnlyWhitespace(this.toString());\n    };\n    Lines.prototype.isPrecededOnlyByWhitespace = function (pos) {\n        var info = this.infos[pos.line - 1];\n        var indent = Math.max(info.indent, 0);\n        var diff = pos.column - indent;\n        if (diff <= 0) {\n            // If pos.column does not exceed the indentation amount, then\n            // there must be only whitespace before it.\n            return true;\n        }\n        var start = info.sliceStart;\n        var end = Math.min(start + diff, info.sliceEnd);\n        var prefix = info.line.slice(start, end);\n        return isOnlyWhitespace(prefix);\n    };\n    Lines.prototype.getLineLength = function (line) {\n        var info = this.infos[line - 1];\n        return this.getIndentAt(line) + info.sliceEnd - info.sliceStart;\n    };\n    Lines.prototype.nextPos = function (pos, skipSpaces) {\n        if (skipSpaces === void 0) { skipSpaces = false; }\n        var l = Math.max(pos.line, 0), c = Math.max(pos.column, 0);\n        if (c < this.getLineLength(l)) {\n            pos.column += 1;\n            return skipSpaces ? !!this.skipSpaces(pos, false, true) : true;\n        }\n        if (l < this.length) {\n            pos.line += 1;\n            pos.column = 0;\n            return skipSpaces ? !!this.skipSpaces(pos, false, true) : true;\n        }\n        return false;\n    };\n    Lines.prototype.prevPos = function (pos, skipSpaces) {\n        if (skipSpaces === void 0) { skipSpaces = false; }\n        var l = pos.line, c = pos.column;\n        if (c < 1) {\n            l -= 1;\n            if (l < 1)\n                return false;\n            c = this.getLineLength(l);\n        }\n        else {\n            c = Math.min(c - 1, this.getLineLength(l));\n        }\n        pos.line = l;\n        pos.column = c;\n        return skipSpaces ? !!this.skipSpaces(pos, true, true) : true;\n    };\n    Lines.prototype.firstPos = function () {\n        // Trivial, but provided for completeness.\n        return { line: 1, column: 0 };\n    };\n    Lines.prototype.lastPos = function () {\n        return {\n            line: this.length,\n            column: this.getLineLength(this.length),\n        };\n    };\n    Lines.prototype.skipSpaces = function (pos, backward, modifyInPlace) {\n        if (backward === void 0) { backward = false; }\n        if (modifyInPlace === void 0) { modifyInPlace = false; }\n        if (pos) {\n            pos = modifyInPlace\n                ? pos\n                : {\n                    line: pos.line,\n                    column: pos.column,\n                };\n        }\n        else if (backward) {\n            pos = this.lastPos();\n        }\n        else {\n            pos = this.firstPos();\n        }\n        if (backward) {\n            while (this.prevPos(pos)) {\n                if (!isOnlyWhitespace(this.charAt(pos)) && this.nextPos(pos)) {\n                    return pos;\n                }\n            }\n            return null;\n        }\n        else {\n            while (isOnlyWhitespace(this.charAt(pos))) {\n                if (!this.nextPos(pos)) {\n                    return null;\n                }\n            }\n            return pos;\n        }\n    };\n    Lines.prototype.trimLeft = function () {\n        var pos = this.skipSpaces(this.firstPos(), false, true);\n        return pos ? this.slice(pos) : emptyLines;\n    };\n    Lines.prototype.trimRight = function () {\n        var pos = this.skipSpaces(this.lastPos(), true, true);\n        return pos ? this.slice(this.firstPos(), pos) : emptyLines;\n    };\n    Lines.prototype.trim = function () {\n        var start = this.skipSpaces(this.firstPos(), false, true);\n        if (start === null) {\n            return emptyLines;\n        }\n        var end = this.skipSpaces(this.lastPos(), true, true);\n        if (end === null) {\n            return emptyLines;\n        }\n        return this.slice(start, end);\n    };\n    Lines.prototype.eachPos = function (callback, startPos, skipSpaces) {\n        if (startPos === void 0) { startPos = this.firstPos(); }\n        if (skipSpaces === void 0) { skipSpaces = false; }\n        var pos = this.firstPos();\n        if (startPos) {\n            (pos.line = startPos.line), (pos.column = startPos.column);\n        }\n        if (skipSpaces && !this.skipSpaces(pos, false, true)) {\n            return; // Encountered nothing but spaces.\n        }\n        do\n            callback.call(this, pos);\n        while (this.nextPos(pos, skipSpaces));\n    };\n    Lines.prototype.bootstrapSlice = function (start, end) {\n        var strings = this.toString()\n            .split(lineTerminatorSeqExp)\n            .slice(start.line - 1, end.line);\n        if (strings.length > 0) {\n            strings.push(strings.pop().slice(0, end.column));\n            strings[0] = strings[0].slice(start.column);\n        }\n        return fromString(strings.join(\"\\n\"));\n    };\n    Lines.prototype.slice = function (start, end) {\n        if (!end) {\n            if (!start) {\n                // The client seems to want a copy of this Lines object, but\n                // Lines objects are immutable, so it's perfectly adequate to\n                // return the same object.\n                return this;\n            }\n            // Slice to the end if no end position was provided.\n            end = this.lastPos();\n        }\n        if (!start) {\n            throw new Error(\"cannot slice with end but not start\");\n        }\n        var sliced = this.infos.slice(start.line - 1, end.line);\n        if (start.line === end.line) {\n            sliced[0] = sliceInfo(sliced[0], start.column, end.column);\n        }\n        else {\n            assert.ok(start.line < end.line);\n            sliced[0] = sliceInfo(sliced[0], start.column);\n            sliced.push(sliceInfo(sliced.pop(), 0, end.column));\n        }\n        var lines = new Lines(sliced);\n        if (this.mappings.length > 0) {\n            var newMappings_4 = lines.mappings;\n            assert.strictEqual(newMappings_4.length, 0);\n            this.mappings.forEach(function (mapping) {\n                var sliced = mapping.slice(this, start, end);\n                if (sliced) {\n                    newMappings_4.push(sliced);\n                }\n            }, this);\n        }\n        return lines;\n    };\n    Lines.prototype.bootstrapSliceString = function (start, end, options) {\n        return this.slice(start, end).toString(options);\n    };\n    Lines.prototype.sliceString = function (start, end, options) {\n        if (start === void 0) { start = this.firstPos(); }\n        if (end === void 0) { end = this.lastPos(); }\n        var _a = normalizeOptions(options), tabWidth = _a.tabWidth, useTabs = _a.useTabs, reuseWhitespace = _a.reuseWhitespace, lineTerminator = _a.lineTerminator;\n        var parts = [];\n        for (var line = start.line; line <= end.line; ++line) {\n            var info = this.infos[line - 1];\n            if (line === start.line) {\n                if (line === end.line) {\n                    info = sliceInfo(info, start.column, end.column);\n                }\n                else {\n                    info = sliceInfo(info, start.column);\n                }\n            }\n            else if (line === end.line) {\n                info = sliceInfo(info, 0, end.column);\n            }\n            var indent = Math.max(info.indent, 0);\n            var before_1 = info.line.slice(0, info.sliceStart);\n            if (reuseWhitespace &&\n                isOnlyWhitespace(before_1) &&\n                countSpaces(before_1, tabWidth) === indent) {\n                // Reuse original spaces if the indentation is correct.\n                parts.push(info.line.slice(0, info.sliceEnd));\n                continue;\n            }\n            var tabs = 0;\n            var spaces = indent;\n            if (useTabs) {\n                tabs = Math.floor(indent / tabWidth);\n                spaces -= tabs * tabWidth;\n            }\n            var result = \"\";\n            if (tabs > 0) {\n                result += new Array(tabs + 1).join(\"\\t\");\n            }\n            if (spaces > 0) {\n                result += new Array(spaces + 1).join(\" \");\n            }\n            result += info.line.slice(info.sliceStart, info.sliceEnd);\n            parts.push(result);\n        }\n        return parts.join(lineTerminator);\n    };\n    Lines.prototype.isEmpty = function () {\n        return this.length < 2 && this.getLineLength(1) < 1;\n    };\n    Lines.prototype.join = function (elements) {\n        var separator = this;\n        var infos = [];\n        var mappings = [];\n        var prevInfo;\n        function appendLines(linesOrNull) {\n            if (linesOrNull === null) {\n                return;\n            }\n            if (prevInfo) {\n                var info = linesOrNull.infos[0];\n                var indent = new Array(info.indent + 1).join(\" \");\n                var prevLine_1 = infos.length;\n                var prevColumn_1 = Math.max(prevInfo.indent, 0) +\n                    prevInfo.sliceEnd -\n                    prevInfo.sliceStart;\n                prevInfo.line =\n                    prevInfo.line.slice(0, prevInfo.sliceEnd) +\n                        indent +\n                        info.line.slice(info.sliceStart, info.sliceEnd);\n                // If any part of a line is indentation-locked, the whole line\n                // will be indentation-locked.\n                prevInfo.locked = prevInfo.locked || info.locked;\n                prevInfo.sliceEnd = prevInfo.line.length;\n                if (linesOrNull.mappings.length > 0) {\n                    linesOrNull.mappings.forEach(function (mapping) {\n                        mappings.push(mapping.add(prevLine_1, prevColumn_1));\n                    });\n                }\n            }\n            else if (linesOrNull.mappings.length > 0) {\n                mappings.push.apply(mappings, linesOrNull.mappings);\n            }\n            linesOrNull.infos.forEach(function (info, i) {\n                if (!prevInfo || i > 0) {\n                    prevInfo = __assign({}, info);\n                    infos.push(prevInfo);\n                }\n            });\n        }\n        function appendWithSeparator(linesOrNull, i) {\n            if (i > 0)\n                appendLines(separator);\n            appendLines(linesOrNull);\n        }\n        elements\n            .map(function (elem) {\n            var lines = fromString(elem);\n            if (lines.isEmpty())\n                return null;\n            return lines;\n        })\n            .forEach(function (linesOrNull, i) {\n            if (separator.isEmpty()) {\n                appendLines(linesOrNull);\n            }\n            else {\n                appendWithSeparator(linesOrNull, i);\n            }\n        });\n        if (infos.length < 1)\n            return emptyLines;\n        var lines = new Lines(infos);\n        lines.mappings = mappings;\n        return lines;\n    };\n    Lines.prototype.concat = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var list = [this];\n        list.push.apply(list, args);\n        assert.strictEqual(list.length, args.length + 1);\n        return emptyLines.join(list);\n    };\n    return Lines;\n}());\nexport { Lines };\nvar fromStringCache = {};\nvar hasOwn = fromStringCache.hasOwnProperty;\nvar maxCacheKeyLen = 10;\nexport function countSpaces(spaces, tabWidth) {\n    var count = 0;\n    var len = spaces.length;\n    for (var i = 0; i < len; ++i) {\n        switch (spaces.charCodeAt(i)) {\n            case 9: {\n                // '\\t'\n                assert.strictEqual(typeof tabWidth, \"number\");\n                assert.ok(tabWidth > 0);\n                var next = Math.ceil(count / tabWidth) * tabWidth;\n                if (next === count) {\n                    count += tabWidth;\n                }\n                else {\n                    count = next;\n                }\n                break;\n            }\n            case 11: // '\\v'\n            case 12: // '\\f'\n            case 13: // '\\r'\n            case 0xfeff: // zero-width non-breaking space\n                // These characters contribute nothing to indentation.\n                break;\n            case 32: // ' '\n            default:\n                // Treat all other whitespace like ' '.\n                count += 1;\n                break;\n        }\n    }\n    return count;\n}\nvar leadingSpaceExp = /^\\s*/;\n// As specified here: http://www.ecma-international.org/ecma-262/6.0/#sec-line-terminators\nvar lineTerminatorSeqExp = /\\u000D\\u000A|\\u000D(?!\\u000A)|\\u000A|\\u2028|\\u2029/;\n/**\n * @param {Object} options - Options object that configures printing.\n */\nexport function fromString(string, options) {\n    if (string instanceof Lines)\n        return string;\n    string += \"\";\n    var tabWidth = options && options.tabWidth;\n    var tabless = string.indexOf(\"\\t\") < 0;\n    var cacheable = !options && tabless && string.length <= maxCacheKeyLen;\n    assert.ok(tabWidth || tabless, \"No tab width specified but encountered tabs in string\\n\" + string);\n    if (cacheable && hasOwn.call(fromStringCache, string))\n        return fromStringCache[string];\n    var lines = new Lines(string.split(lineTerminatorSeqExp).map(function (line) {\n        // TODO: handle null exec result\n        var spaces = leadingSpaceExp.exec(line)[0];\n        return {\n            line: line,\n            indent: countSpaces(spaces, tabWidth),\n            // Boolean indicating whether this line can be reindented.\n            locked: false,\n            sliceStart: spaces.length,\n            sliceEnd: line.length,\n        };\n    }), normalizeOptions(options).sourceFileName);\n    if (cacheable)\n        fromStringCache[string] = lines;\n    return lines;\n}\nfunction isOnlyWhitespace(string) {\n    return !/\\S/.test(string);\n}\nfunction sliceInfo(info, startCol, endCol) {\n    var sliceStart = info.sliceStart;\n    var sliceEnd = info.sliceEnd;\n    var indent = Math.max(info.indent, 0);\n    var lineLength = indent + sliceEnd - sliceStart;\n    if (typeof endCol === \"undefined\") {\n        endCol = lineLength;\n    }\n    startCol = Math.max(startCol, 0);\n    endCol = Math.min(endCol, lineLength);\n    endCol = Math.max(endCol, startCol);\n    if (endCol < indent) {\n        indent = endCol;\n        sliceEnd = sliceStart;\n    }\n    else {\n        sliceEnd -= lineLength - endCol;\n    }\n    lineLength = endCol;\n    lineLength -= startCol;\n    if (startCol < indent) {\n        indent -= startCol;\n    }\n    else {\n        startCol -= indent;\n        indent = 0;\n        sliceStart += startCol;\n    }\n    assert.ok(indent >= 0);\n    assert.ok(sliceStart <= sliceEnd);\n    assert.strictEqual(lineLength, indent + sliceEnd - sliceStart);\n    if (info.indent === indent &&\n        info.sliceStart === sliceStart &&\n        info.sliceEnd === sliceEnd) {\n        return info;\n    }\n    return {\n        line: info.line,\n        indent: indent,\n        // A destructive slice always unlocks indentation.\n        locked: false,\n        sliceStart: sliceStart,\n        sliceEnd: sliceEnd,\n    };\n}\nexport function concat(elements) {\n    return emptyLines.join(elements);\n}\n// The emptyLines object needs to be created all the way down here so that\n// Lines.prototype will be fully populated.\nvar emptyLines = fromString(\"\");\n", "import assert from \"assert\";\nimport { comparePos } from \"./util.js\";\nvar Mapping = /** @class */ (function () {\n    function Mapping(sourceLines, sourceLoc, targetLoc) {\n        if (targetLoc === void 0) { targetLoc = sourceLoc; }\n        this.sourceLines = sourceLines;\n        this.sourceLoc = sourceLoc;\n        this.targetLoc = targetLoc;\n    }\n    Mapping.prototype.slice = function (lines, start, end) {\n        if (end === void 0) { end = lines.lastPos(); }\n        var sourceLines = this.sourceLines;\n        var sourceLoc = this.sourceLoc;\n        var targetLoc = this.targetLoc;\n        function skip(name) {\n            var sourceFromPos = sourceLoc[name];\n            var targetFromPos = targetLoc[name];\n            var targetToPos = start;\n            if (name === \"end\") {\n                targetToPos = end;\n            }\n            else {\n                assert.strictEqual(name, \"start\");\n            }\n            return skipChars(sourceLines, sourceFromPos, lines, targetFromPos, targetToPos);\n        }\n        if (comparePos(start, targetLoc.start) <= 0) {\n            if (comparePos(targetLoc.end, end) <= 0) {\n                targetLoc = {\n                    start: subtractPos(targetLoc.start, start.line, start.column),\n                    end: subtractPos(targetLoc.end, start.line, start.column),\n                };\n                // The sourceLoc can stay the same because the contents of the\n                // targetLoc have not changed.\n            }\n            else if (comparePos(end, targetLoc.start) <= 0) {\n                return null;\n            }\n            else {\n                sourceLoc = {\n                    start: sourceLoc.start,\n                    end: skip(\"end\"),\n                };\n                targetLoc = {\n                    start: subtractPos(targetLoc.start, start.line, start.column),\n                    end: subtractPos(end, start.line, start.column),\n                };\n            }\n        }\n        else {\n            if (comparePos(targetLoc.end, start) <= 0) {\n                return null;\n            }\n            if (comparePos(targetLoc.end, end) <= 0) {\n                sourceLoc = {\n                    start: skip(\"start\"),\n                    end: sourceLoc.end,\n                };\n                targetLoc = {\n                    // Same as subtractPos(start, start.line, start.column):\n                    start: { line: 1, column: 0 },\n                    end: subtractPos(targetLoc.end, start.line, start.column),\n                };\n            }\n            else {\n                sourceLoc = {\n                    start: skip(\"start\"),\n                    end: skip(\"end\"),\n                };\n                targetLoc = {\n                    // Same as subtractPos(start, start.line, start.column):\n                    start: { line: 1, column: 0 },\n                    end: subtractPos(end, start.line, start.column),\n                };\n            }\n        }\n        return new Mapping(this.sourceLines, sourceLoc, targetLoc);\n    };\n    Mapping.prototype.add = function (line, column) {\n        return new Mapping(this.sourceLines, this.sourceLoc, {\n            start: addPos(this.targetLoc.start, line, column),\n            end: addPos(this.targetLoc.end, line, column),\n        });\n    };\n    Mapping.prototype.subtract = function (line, column) {\n        return new Mapping(this.sourceLines, this.sourceLoc, {\n            start: subtractPos(this.targetLoc.start, line, column),\n            end: subtractPos(this.targetLoc.end, line, column),\n        });\n    };\n    Mapping.prototype.indent = function (by, skipFirstLine, noNegativeColumns) {\n        if (skipFirstLine === void 0) { skipFirstLine = false; }\n        if (noNegativeColumns === void 0) { noNegativeColumns = false; }\n        if (by === 0) {\n            return this;\n        }\n        var targetLoc = this.targetLoc;\n        var startLine = targetLoc.start.line;\n        var endLine = targetLoc.end.line;\n        if (skipFirstLine && startLine === 1 && endLine === 1) {\n            return this;\n        }\n        targetLoc = {\n            start: targetLoc.start,\n            end: targetLoc.end,\n        };\n        if (!skipFirstLine || startLine > 1) {\n            var startColumn = targetLoc.start.column + by;\n            targetLoc.start = {\n                line: startLine,\n                column: noNegativeColumns ? Math.max(0, startColumn) : startColumn,\n            };\n        }\n        if (!skipFirstLine || endLine > 1) {\n            var endColumn = targetLoc.end.column + by;\n            targetLoc.end = {\n                line: endLine,\n                column: noNegativeColumns ? Math.max(0, endColumn) : endColumn,\n            };\n        }\n        return new Mapping(this.sourceLines, this.sourceLoc, targetLoc);\n    };\n    return Mapping;\n}());\nexport default Mapping;\nfunction addPos(toPos, line, column) {\n    return {\n        line: toPos.line + line - 1,\n        column: toPos.line === 1 ? toPos.column + column : toPos.column,\n    };\n}\nfunction subtractPos(fromPos, line, column) {\n    return {\n        line: fromPos.line - line + 1,\n        column: fromPos.line === line ? fromPos.column - column : fromPos.column,\n    };\n}\nfunction skipChars(sourceLines, sourceFromPos, targetLines, targetFromPos, targetToPos) {\n    var targetComparison = comparePos(targetFromPos, targetToPos);\n    if (targetComparison === 0) {\n        // Trivial case: no characters to skip.\n        return sourceFromPos;\n    }\n    var sourceCursor, targetCursor;\n    if (targetComparison < 0) {\n        // Skipping forward.\n        sourceCursor =\n            sourceLines.skipSpaces(sourceFromPos) || sourceLines.lastPos();\n        targetCursor =\n            targetLines.skipSpaces(targetFromPos) || targetLines.lastPos();\n        var lineDiff = targetToPos.line - targetCursor.line;\n        sourceCursor.line += lineDiff;\n        targetCursor.line += lineDiff;\n        if (lineDiff > 0) {\n            // If jumping to later lines, reset columns to the beginnings\n            // of those lines.\n            sourceCursor.column = 0;\n            targetCursor.column = 0;\n        }\n        else {\n            assert.strictEqual(lineDiff, 0);\n        }\n        while (comparePos(targetCursor, targetToPos) < 0 &&\n            targetLines.nextPos(targetCursor, true)) {\n            assert.ok(sourceLines.nextPos(sourceCursor, true));\n            assert.strictEqual(sourceLines.charAt(sourceCursor), targetLines.charAt(targetCursor));\n        }\n    }\n    else {\n        // Skipping backward.\n        sourceCursor =\n            sourceLines.skipSpaces(sourceFromPos, true) || sourceLines.firstPos();\n        targetCursor =\n            targetLines.skipSpaces(targetFromPos, true) || targetLines.firstPos();\n        var lineDiff = targetToPos.line - targetCursor.line;\n        sourceCursor.line += lineDiff;\n        targetCursor.line += lineDiff;\n        if (lineDiff < 0) {\n            // If jumping to earlier lines, reset columns to the ends of\n            // those lines.\n            sourceCursor.column = sourceLines.getLineLength(sourceCursor.line);\n            targetCursor.column = targetLines.getLineLength(targetCursor.line);\n        }\n        else {\n            assert.strictEqual(lineDiff, 0);\n        }\n        while (comparePos(targetToPos, targetCursor) < 0 &&\n            targetLines.prevPos(targetCursor, true)) {\n            assert.ok(sourceLines.prevPos(sourceCursor, true));\n            assert.strictEqual(sourceLines.charAt(sourceCursor), targetLines.charAt(targetCursor));\n        }\n    }\n    return sourceCursor;\n}\n", "import assert from \"assert\";\nimport * as types from \"ast-types\";\nvar n = types.namedTypes;\nvar isArray = types.builtInTypes.array;\nvar isObject = types.builtInTypes.object;\nimport { Lines, concat } from \"./lines.js\";\nimport { comparePos, fixFaultyLocations } from \"./util.js\";\nvar childNodesCache = new WeakMap();\n// TODO Move a non-caching implementation of this function into ast-types,\n// and implement a caching wrapper function here.\nfunction getSortedChildNodes(node, lines, resultArray) {\n    if (!node) {\n        return resultArray;\n    }\n    // The .loc checks below are sensitive to some of the problems that\n    // are fixed by this utility function. Specifically, if it decides to\n    // set node.loc to null, indicating that the node's .loc information\n    // is unreliable, then we don't want to add node to the resultArray.\n    fixFaultyLocations(node, lines);\n    if (resultArray) {\n        if (n.Node.check(node) && n.SourceLocation.check(node.loc)) {\n            // This reverse insertion sort almost always takes constant\n            // time because we almost always (maybe always?) append the\n            // nodes in order anyway.\n            var i = resultArray.length - 1;\n            for (; i >= 0; --i) {\n                var child = resultArray[i];\n                if (child &&\n                    child.loc &&\n                    comparePos(child.loc.end, node.loc.start) <= 0) {\n                    break;\n                }\n            }\n            resultArray.splice(i + 1, 0, node);\n            return resultArray;\n        }\n    }\n    else {\n        var childNodes = childNodesCache.get(node);\n        if (childNodes) {\n            return childNodes;\n        }\n    }\n    var names;\n    if (isArray.check(node)) {\n        names = Object.keys(node);\n    }\n    else if (isObject.check(node)) {\n        names = types.getFieldNames(node);\n    }\n    else {\n        return resultArray;\n    }\n    if (!resultArray) {\n        childNodesCache.set(node, (resultArray = []));\n    }\n    for (var i = 0, nameCount = names.length; i < nameCount; ++i) {\n        getSortedChildNodes(node[names[i]], lines, resultArray);\n    }\n    return resultArray;\n}\n// As efficiently as possible, decorate the comment object with\n// .precedingNode, .enclosingNode, and/or .followingNode properties, at\n// least one of which is guaranteed to be defined.\nfunction decorateComment(node, comment, lines) {\n    var childNodes = getSortedChildNodes(node, lines);\n    // Time to dust off the old binary search robes and wizard hat.\n    var left = 0;\n    var right = childNodes && childNodes.length;\n    var precedingNode;\n    var followingNode;\n    while (typeof right === \"number\" && left < right) {\n        var middle = (left + right) >> 1;\n        var child = childNodes[middle];\n        if (comparePos(child.loc.start, comment.loc.start) <= 0 &&\n            comparePos(comment.loc.end, child.loc.end) <= 0) {\n            // The comment is completely contained by this child node.\n            decorateComment((comment.enclosingNode = child), comment, lines);\n            return; // Abandon the binary search at this level.\n        }\n        if (comparePos(child.loc.end, comment.loc.start) <= 0) {\n            // This child node falls completely before the comment.\n            // Because we will never consider this node or any nodes\n            // before it again, this node must be the closest preceding\n            // node we have encountered so far.\n            precedingNode = child;\n            left = middle + 1;\n            continue;\n        }\n        if (comparePos(comment.loc.end, child.loc.start) <= 0) {\n            // This child node falls completely after the comment.\n            // Because we will never consider this node or any nodes after\n            // it again, this node must be the closest following node we\n            // have encountered so far.\n            followingNode = child;\n            right = middle;\n            continue;\n        }\n        throw new Error(\"Comment location overlaps with node location\");\n    }\n    if (precedingNode) {\n        comment.precedingNode = precedingNode;\n    }\n    if (followingNode) {\n        comment.followingNode = followingNode;\n    }\n}\nexport function attach(comments, ast, lines) {\n    if (!isArray.check(comments)) {\n        return;\n    }\n    var tiesToBreak = [];\n    comments.forEach(function (comment) {\n        comment.loc.lines = lines;\n        decorateComment(ast, comment, lines);\n        var pn = comment.precedingNode;\n        var en = comment.enclosingNode;\n        var fn = comment.followingNode;\n        if (pn && fn) {\n            var tieCount = tiesToBreak.length;\n            if (tieCount > 0) {\n                var lastTie = tiesToBreak[tieCount - 1];\n                assert.strictEqual(lastTie.precedingNode === comment.precedingNode, lastTie.followingNode === comment.followingNode);\n                if (lastTie.followingNode !== comment.followingNode) {\n                    breakTies(tiesToBreak, lines);\n                }\n            }\n            tiesToBreak.push(comment);\n        }\n        else if (pn) {\n            // No contest: we have a trailing comment.\n            breakTies(tiesToBreak, lines);\n            addTrailingComment(pn, comment);\n        }\n        else if (fn) {\n            // No contest: we have a leading comment.\n            breakTies(tiesToBreak, lines);\n            addLeadingComment(fn, comment);\n        }\n        else if (en) {\n            // The enclosing node has no child nodes at all, so what we\n            // have here is a dangling comment, e.g. [/* crickets */].\n            breakTies(tiesToBreak, lines);\n            addDanglingComment(en, comment);\n        }\n        else {\n            throw new Error(\"AST contains no nodes at all?\");\n        }\n    });\n    breakTies(tiesToBreak, lines);\n    comments.forEach(function (comment) {\n        // These node references were useful for breaking ties, but we\n        // don't need them anymore, and they create cycles in the AST that\n        // may lead to infinite recursion if we don't delete them here.\n        delete comment.precedingNode;\n        delete comment.enclosingNode;\n        delete comment.followingNode;\n    });\n}\nfunction breakTies(tiesToBreak, lines) {\n    var tieCount = tiesToBreak.length;\n    if (tieCount === 0) {\n        return;\n    }\n    var pn = tiesToBreak[0].precedingNode;\n    var fn = tiesToBreak[0].followingNode;\n    var gapEndPos = fn.loc.start;\n    // Iterate backwards through tiesToBreak, examining the gaps\n    // between the tied comments. In order to qualify as leading, a\n    // comment must be separated from fn by an unbroken series of\n    // whitespace-only gaps (or other comments).\n    var indexOfFirstLeadingComment = tieCount;\n    var comment;\n    for (; indexOfFirstLeadingComment > 0; --indexOfFirstLeadingComment) {\n        comment = tiesToBreak[indexOfFirstLeadingComment - 1];\n        assert.strictEqual(comment.precedingNode, pn);\n        assert.strictEqual(comment.followingNode, fn);\n        var gap = lines.sliceString(comment.loc.end, gapEndPos);\n        if (/\\S/.test(gap)) {\n            // The gap string contained something other than whitespace.\n            break;\n        }\n        gapEndPos = comment.loc.start;\n    }\n    while (indexOfFirstLeadingComment <= tieCount &&\n        (comment = tiesToBreak[indexOfFirstLeadingComment]) &&\n        // If the comment is a //-style comment and indented more\n        // deeply than the node itself, reconsider it as trailing.\n        (comment.type === \"Line\" || comment.type === \"CommentLine\") &&\n        comment.loc.start.column > fn.loc.start.column) {\n        ++indexOfFirstLeadingComment;\n    }\n    tiesToBreak.forEach(function (comment, i) {\n        if (i < indexOfFirstLeadingComment) {\n            addTrailingComment(pn, comment);\n        }\n        else {\n            addLeadingComment(fn, comment);\n        }\n    });\n    tiesToBreak.length = 0;\n}\nfunction addCommentHelper(node, comment) {\n    var comments = node.comments || (node.comments = []);\n    comments.push(comment);\n}\nfunction addLeadingComment(node, comment) {\n    comment.leading = true;\n    comment.trailing = false;\n    addCommentHelper(node, comment);\n}\nfunction addDanglingComment(node, comment) {\n    comment.leading = false;\n    comment.trailing = false;\n    addCommentHelper(node, comment);\n}\nfunction addTrailingComment(node, comment) {\n    comment.leading = false;\n    comment.trailing = true;\n    addCommentHelper(node, comment);\n}\nfunction printLeadingComment(commentPath, print) {\n    var comment = commentPath.getValue();\n    n.Comment.assert(comment);\n    var loc = comment.loc;\n    var lines = loc && loc.lines;\n    var parts = [print(commentPath)];\n    if (comment.trailing) {\n        // When we print trailing comments as leading comments, we don't\n        // want to bring any trailing spaces along.\n        parts.push(\"\\n\");\n    }\n    else if (lines instanceof Lines) {\n        var trailingSpace = lines.slice(loc.end, lines.skipSpaces(loc.end) || lines.lastPos());\n        if (trailingSpace.length === 1) {\n            // If the trailing space contains no newlines, then we want to\n            // preserve it exactly as we found it.\n            parts.push(trailingSpace);\n        }\n        else {\n            // If the trailing space contains newlines, then replace it\n            // with just that many newlines, with all other spaces removed.\n            parts.push(new Array(trailingSpace.length).join(\"\\n\"));\n        }\n    }\n    else {\n        parts.push(\"\\n\");\n    }\n    return concat(parts);\n}\nfunction printTrailingComment(commentPath, print) {\n    var comment = commentPath.getValue(commentPath);\n    n.Comment.assert(comment);\n    var loc = comment.loc;\n    var lines = loc && loc.lines;\n    var parts = [];\n    if (lines instanceof Lines) {\n        var fromPos = lines.skipSpaces(loc.start, true) || lines.firstPos();\n        var leadingSpace = lines.slice(fromPos, loc.start);\n        if (leadingSpace.length === 1) {\n            // If the leading space contains no newlines, then we want to\n            // preserve it exactly as we found it.\n            parts.push(leadingSpace);\n        }\n        else {\n            // If the leading space contains newlines, then replace it\n            // with just that many newlines, sans all other spaces.\n            parts.push(new Array(leadingSpace.length).join(\"\\n\"));\n        }\n    }\n    parts.push(print(commentPath));\n    return concat(parts);\n}\nexport function printComments(path, print) {\n    var value = path.getValue();\n    var innerLines = print(path);\n    var comments = n.Node.check(value) && types.getFieldValue(value, \"comments\");\n    if (!comments || comments.length === 0) {\n        return innerLines;\n    }\n    var leadingParts = [];\n    var trailingParts = [innerLines];\n    path.each(function (commentPath) {\n        var comment = commentPath.getValue();\n        var leading = types.getFieldValue(comment, \"leading\");\n        var trailing = types.getFieldValue(comment, \"trailing\");\n        if (leading ||\n            (trailing &&\n                !(n.Statement.check(value) ||\n                    comment.type === \"Block\" ||\n                    comment.type === \"CommentBlock\"))) {\n            leadingParts.push(printLeadingComment(commentPath, print));\n        }\n        else if (trailing) {\n            trailingParts.push(printTrailingComment(commentPath, print));\n        }\n    }, \"comments\");\n    leadingParts.push.apply(leadingParts, trailingParts);\n    return concat(leadingParts);\n}\n", "import { __spreadArray } from \"tslib\";\nimport assert from \"assert\";\nimport * as types from \"ast-types\";\nimport { printComments } from \"./comments.js\";\nimport FastPath from \"./fast-path.js\";\nimport { concat, fromString } from \"./lines.js\";\nimport { normalize as normalizeOptions } from \"./options.js\";\nimport { getReprinter } from \"./patcher.js\";\nimport * as util from \"./util.js\";\nvar namedTypes = types.namedTypes;\nvar isString = types.builtInTypes.string;\nvar isObject = types.builtInTypes.object;\nvar PrintResult = function PrintResult(code, sourceMap) {\n    assert.ok(this instanceof PrintResult);\n    isString.assert(code);\n    this.code = code;\n    if (sourceMap) {\n        isObject.assert(sourceMap);\n        this.map = sourceMap;\n    }\n};\nvar PRp = PrintResult.prototype;\nvar warnedAboutToString = false;\nPRp.toString = function () {\n    if (!warnedAboutToString) {\n        console.warn(\"Deprecation warning: recast.print now returns an object with \" +\n            \"a .code property. You appear to be treating the object as a \" +\n            \"string, which might still work but is strongly discouraged.\");\n        warnedAboutToString = true;\n    }\n    return this.code;\n};\nvar emptyPrintResult = new PrintResult(\"\");\nvar Printer = function Printer(config) {\n    assert.ok(this instanceof Printer);\n    var explicitTabWidth = config && config.tabWidth;\n    config = normalizeOptions(config);\n    // It's common for client code to pass the same options into both\n    // recast.parse and recast.print, but the Printer doesn't need (and\n    // can be confused by) config.sourceFileName, so we null it out.\n    config.sourceFileName = null;\n    // Non-destructively modifies options with overrides, and returns a\n    // new print function that uses the modified options.\n    function makePrintFunctionWith(options, overrides) {\n        options = Object.assign({}, options, overrides);\n        return function (path) { return print(path, options); };\n    }\n    function print(path, options) {\n        assert.ok(path instanceof FastPath);\n        options = options || {};\n        if (options.includeComments) {\n            return printComments(path, makePrintFunctionWith(options, {\n                includeComments: false,\n            }));\n        }\n        var oldTabWidth = config.tabWidth;\n        if (!explicitTabWidth) {\n            var loc = path.getNode().loc;\n            if (loc && loc.lines && loc.lines.guessTabWidth) {\n                config.tabWidth = loc.lines.guessTabWidth();\n            }\n        }\n        var reprinter = getReprinter(path);\n        var lines = reprinter\n            ? // Since the print function that we pass to the reprinter will\n                // be used to print \"new\" nodes, it's tempting to think we\n                // should pass printRootGenerically instead of print, to avoid\n                // calling maybeReprint again, but that would be a mistake\n                // because the new nodes might not be entirely new, but merely\n                // moved from elsewhere in the AST. The print function is the\n                // right choice because it gives us the opportunity to reprint\n                // such nodes using their original source.\n                reprinter(print)\n            : genericPrint(path, config, options, makePrintFunctionWith(options, {\n                includeComments: true,\n                avoidRootParens: false,\n            }));\n        config.tabWidth = oldTabWidth;\n        return lines;\n    }\n    this.print = function (ast) {\n        if (!ast) {\n            return emptyPrintResult;\n        }\n        var lines = print(FastPath.from(ast), {\n            includeComments: true,\n            avoidRootParens: false,\n        });\n        return new PrintResult(lines.toString(config), util.composeSourceMaps(config.inputSourceMap, lines.getSourceMap(config.sourceMapName, config.sourceRoot)));\n    };\n    this.printGenerically = function (ast) {\n        if (!ast) {\n            return emptyPrintResult;\n        }\n        // Print the entire AST generically.\n        function printGenerically(path) {\n            return printComments(path, function (path) {\n                return genericPrint(path, config, {\n                    includeComments: true,\n                    avoidRootParens: false,\n                }, printGenerically);\n            });\n        }\n        var path = FastPath.from(ast);\n        var oldReuseWhitespace = config.reuseWhitespace;\n        // Do not reuse whitespace (or anything else, for that matter)\n        // when printing generically.\n        config.reuseWhitespace = false;\n        // TODO Allow printing of comments?\n        var pr = new PrintResult(printGenerically(path).toString(config));\n        config.reuseWhitespace = oldReuseWhitespace;\n        return pr;\n    };\n};\nexport { Printer };\nfunction genericPrint(path, config, options, printPath) {\n    assert.ok(path instanceof FastPath);\n    var node = path.getValue();\n    var parts = [];\n    var linesWithoutParens = genericPrintNoParens(path, config, printPath);\n    if (!node || linesWithoutParens.isEmpty()) {\n        return linesWithoutParens;\n    }\n    var shouldAddParens = false;\n    var decoratorsLines = printDecorators(path, printPath);\n    if (decoratorsLines.isEmpty()) {\n        // Nodes with decorators can't have parentheses, so we can avoid\n        // computing path.needsParens() except in this case.\n        if (!options.avoidRootParens) {\n            shouldAddParens = path.needsParens();\n        }\n    }\n    else {\n        parts.push(decoratorsLines);\n    }\n    if (shouldAddParens) {\n        parts.unshift(\"(\");\n    }\n    parts.push(linesWithoutParens);\n    if (shouldAddParens) {\n        parts.push(\")\");\n    }\n    return concat(parts);\n}\n// Note that the `options` parameter of this function is what other\n// functions in this file call the `config` object (that is, the\n// configuration object originally passed into the Printer constructor).\n// Its properties are documented in lib/options.js.\nfunction genericPrintNoParens(path, options, print) {\n    var n = path.getValue();\n    if (!n) {\n        return fromString(\"\");\n    }\n    if (typeof n === \"string\") {\n        return fromString(n, options);\n    }\n    namedTypes.Printable.assert(n);\n    var parts = [];\n    switch (n.type) {\n        case \"File\":\n            return path.call(print, \"program\");\n        case \"Program\":\n            // Babel 6\n            if (n.directives) {\n                path.each(function (childPath) {\n                    parts.push(print(childPath), \";\\n\");\n                }, \"directives\");\n            }\n            if (n.interpreter) {\n                parts.push(path.call(print, \"interpreter\"));\n            }\n            parts.push(path.call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\"));\n            return concat(parts);\n        case \"Noop\": // Babel extension.\n        case \"EmptyStatement\":\n            return fromString(\"\");\n        case \"ExpressionStatement\":\n            return concat([path.call(print, \"expression\"), \";\"]);\n        case \"ParenthesizedExpression\": // Babel extension.\n            return concat([\"(\", path.call(print, \"expression\"), \")\"]);\n        case \"BinaryExpression\":\n        case \"LogicalExpression\":\n        case \"AssignmentExpression\":\n            return fromString(\" \").join([\n                path.call(print, \"left\"),\n                n.operator,\n                path.call(print, \"right\"),\n            ]);\n        case \"AssignmentPattern\":\n            return concat([\n                path.call(print, \"left\"),\n                \" = \",\n                path.call(print, \"right\"),\n            ]);\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\": {\n            parts.push(path.call(print, \"object\"));\n            var property = path.call(print, \"property\");\n            // Like n.optional, except with defaults applied, so optional\n            // defaults to true for OptionalMemberExpression nodes.\n            var optional = types.getFieldValue(n, \"optional\");\n            if (n.computed) {\n                parts.push(optional ? \"?.[\" : \"[\", property, \"]\");\n            }\n            else {\n                parts.push(optional ? \"?.\" : \".\", property);\n            }\n            return concat(parts);\n        }\n        case \"ChainExpression\":\n            return path.call(print, \"expression\");\n        case \"MetaProperty\":\n            return concat([\n                path.call(print, \"meta\"),\n                \".\",\n                path.call(print, \"property\"),\n            ]);\n        case \"BindExpression\":\n            if (n.object) {\n                parts.push(path.call(print, \"object\"));\n            }\n            parts.push(\"::\", path.call(print, \"callee\"));\n            return concat(parts);\n        case \"Path\":\n            return fromString(\".\").join(n.body);\n        case \"Identifier\":\n            return concat([\n                fromString(n.name, options),\n                n.optional ? \"?\" : \"\",\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"SpreadElement\":\n        case \"SpreadElementPattern\":\n        case \"RestProperty\": // Babel 6 for ObjectPattern\n        case \"SpreadProperty\":\n        case \"SpreadPropertyPattern\":\n        case \"ObjectTypeSpreadProperty\":\n        case \"RestElement\":\n            return concat([\n                \"...\",\n                path.call(print, \"argument\"),\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"FunctionDeclaration\":\n        case \"FunctionExpression\":\n        case \"TSDeclareFunction\":\n            if (n.declare) {\n                parts.push(\"declare \");\n            }\n            if (n.async) {\n                parts.push(\"async \");\n            }\n            parts.push(\"function\");\n            if (n.generator)\n                parts.push(\"*\");\n            if (n.id) {\n                parts.push(\" \", path.call(print, \"id\"), path.call(print, \"typeParameters\"));\n            }\n            else {\n                if (n.typeParameters) {\n                    parts.push(path.call(print, \"typeParameters\"));\n                }\n            }\n            parts.push(\"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"returnType\"));\n            if (n.body) {\n                parts.push(\" \", path.call(print, \"body\"));\n            }\n            return concat(parts);\n        case \"ArrowFunctionExpression\":\n            if (n.async) {\n                parts.push(\"async \");\n            }\n            if (n.typeParameters) {\n                parts.push(path.call(print, \"typeParameters\"));\n            }\n            if (!options.arrowParensAlways &&\n                n.params.length === 1 &&\n                !n.rest &&\n                n.params[0].type === \"Identifier\" &&\n                !n.params[0].typeAnnotation &&\n                !n.returnType) {\n                parts.push(path.call(print, \"params\", 0));\n            }\n            else {\n                parts.push(\"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"returnType\"));\n            }\n            parts.push(\" => \", path.call(print, \"body\"));\n            return concat(parts);\n        case \"MethodDefinition\":\n            return printMethod(path, options, print);\n        case \"YieldExpression\":\n            parts.push(\"yield\");\n            if (n.delegate)\n                parts.push(\"*\");\n            if (n.argument)\n                parts.push(\" \", path.call(print, \"argument\"));\n            return concat(parts);\n        case \"AwaitExpression\":\n            parts.push(\"await\");\n            if (n.all)\n                parts.push(\"*\");\n            if (n.argument)\n                parts.push(\" \", path.call(print, \"argument\"));\n            return concat(parts);\n        case \"ModuleExpression\":\n            return concat([\n                \"module {\\n\",\n                path.call(print, \"body\").indent(options.tabWidth),\n                \"\\n}\",\n            ]);\n        case \"ModuleDeclaration\":\n            parts.push(\"module\", path.call(print, \"id\"));\n            if (n.source) {\n                assert.ok(!n.body);\n                parts.push(\"from\", path.call(print, \"source\"));\n            }\n            else {\n                parts.push(path.call(print, \"body\"));\n            }\n            return fromString(\" \").join(parts);\n        case \"ImportSpecifier\":\n            if (n.importKind && n.importKind !== \"value\") {\n                parts.push(n.importKind + \" \");\n            }\n            if (n.imported) {\n                parts.push(path.call(print, \"imported\"));\n                if (n.local && n.local.name !== n.imported.name) {\n                    parts.push(\" as \", path.call(print, \"local\"));\n                }\n            }\n            else if (n.id) {\n                parts.push(path.call(print, \"id\"));\n                if (n.name) {\n                    parts.push(\" as \", path.call(print, \"name\"));\n                }\n            }\n            return concat(parts);\n        case \"ExportSpecifier\":\n            if (n.local) {\n                parts.push(path.call(print, \"local\"));\n                if (n.exported && n.exported.name !== n.local.name) {\n                    parts.push(\" as \", path.call(print, \"exported\"));\n                }\n            }\n            else if (n.id) {\n                parts.push(path.call(print, \"id\"));\n                if (n.name) {\n                    parts.push(\" as \", path.call(print, \"name\"));\n                }\n            }\n            return concat(parts);\n        case \"ExportBatchSpecifier\":\n            return fromString(\"*\");\n        case \"ImportNamespaceSpecifier\":\n            parts.push(\"* as \");\n            if (n.local) {\n                parts.push(path.call(print, \"local\"));\n            }\n            else if (n.id) {\n                parts.push(path.call(print, \"id\"));\n            }\n            return concat(parts);\n        case \"ImportDefaultSpecifier\":\n            if (n.local) {\n                return path.call(print, \"local\");\n            }\n            return path.call(print, \"id\");\n        case \"TSExportAssignment\":\n            return concat([\"export = \", path.call(print, \"expression\")]);\n        case \"ExportDeclaration\":\n        case \"ExportDefaultDeclaration\":\n        case \"ExportNamedDeclaration\":\n            return printExportDeclaration(path, options, print);\n        case \"ExportAllDeclaration\":\n            parts.push(\"export *\");\n            if (n.exported) {\n                parts.push(\" as \", path.call(print, \"exported\"));\n            }\n            parts.push(\" from \", path.call(print, \"source\"), \";\");\n            return concat(parts);\n        case \"TSNamespaceExportDeclaration\":\n            parts.push(\"export as namespace \", path.call(print, \"id\"));\n            return maybeAddSemicolon(concat(parts));\n        case \"ExportNamespaceSpecifier\":\n            return concat([\"* as \", path.call(print, \"exported\")]);\n        case \"ExportDefaultSpecifier\":\n            return path.call(print, \"exported\");\n        case \"Import\":\n            return fromString(\"import\", options);\n        // Recast and ast-types currently support dynamic import(...) using\n        // either this dedicated ImportExpression type or a CallExpression\n        // whose callee has type Import.\n        // https://github.com/benjamn/ast-types/pull/365#issuecomment-605214486\n        case \"ImportExpression\":\n            return concat([\"import(\", path.call(print, \"source\"), \")\"]);\n        case \"ImportDeclaration\": {\n            parts.push(\"import \");\n            if (n.importKind && n.importKind !== \"value\") {\n                parts.push(n.importKind + \" \");\n            }\n            if (n.specifiers && n.specifiers.length > 0) {\n                var unbracedSpecifiers_1 = [];\n                var bracedSpecifiers_1 = [];\n                path.each(function (specifierPath) {\n                    var spec = specifierPath.getValue();\n                    if (spec.type === \"ImportSpecifier\") {\n                        bracedSpecifiers_1.push(print(specifierPath));\n                    }\n                    else if (spec.type === \"ImportDefaultSpecifier\" ||\n                        spec.type === \"ImportNamespaceSpecifier\") {\n                        unbracedSpecifiers_1.push(print(specifierPath));\n                    }\n                }, \"specifiers\");\n                unbracedSpecifiers_1.forEach(function (lines, i) {\n                    if (i > 0) {\n                        parts.push(\", \");\n                    }\n                    parts.push(lines);\n                });\n                if (bracedSpecifiers_1.length > 0) {\n                    var lines = fromString(\", \").join(bracedSpecifiers_1);\n                    if (lines.getLineLength(1) > options.wrapColumn) {\n                        lines = concat([\n                            fromString(\",\\n\").join(bracedSpecifiers_1).indent(options.tabWidth),\n                            \",\",\n                        ]);\n                    }\n                    if (unbracedSpecifiers_1.length > 0) {\n                        parts.push(\", \");\n                    }\n                    if (lines.length > 1) {\n                        parts.push(\"{\\n\", lines, \"\\n}\");\n                    }\n                    else if (options.objectCurlySpacing) {\n                        parts.push(\"{ \", lines, \" }\");\n                    }\n                    else {\n                        parts.push(\"{\", lines, \"}\");\n                    }\n                }\n                parts.push(\" from \");\n            }\n            parts.push(path.call(print, \"source\"), maybePrintImportAssertions(path, options, print), \";\");\n            return concat(parts);\n        }\n        case \"ImportAttribute\":\n            return concat([path.call(print, \"key\"), \": \", path.call(print, \"value\")]);\n        case \"StaticBlock\":\n            parts.push(\"static \");\n        // Intentionally fall through to BlockStatement below.\n        case \"BlockStatement\": {\n            var naked_1 = path.call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\");\n            if (naked_1.isEmpty()) {\n                if (!n.directives || n.directives.length === 0) {\n                    parts.push(\"{}\");\n                    return concat(parts);\n                }\n            }\n            parts.push(\"{\\n\");\n            // Babel 6\n            if (n.directives) {\n                path.each(function (childPath) {\n                    parts.push(maybeAddSemicolon(print(childPath).indent(options.tabWidth)), n.directives.length > 1 || !naked_1.isEmpty() ? \"\\n\" : \"\");\n                }, \"directives\");\n            }\n            parts.push(naked_1.indent(options.tabWidth));\n            parts.push(\"\\n}\");\n            return concat(parts);\n        }\n        case \"ReturnStatement\": {\n            parts.push(\"return\");\n            if (n.argument) {\n                var argLines = path.call(print, \"argument\");\n                if (argLines.startsWithComment() ||\n                    (argLines.length > 1 &&\n                        namedTypes.JSXElement &&\n                        namedTypes.JSXElement.check(n.argument))) {\n                    parts.push(\" (\\n\", argLines.indent(options.tabWidth), \"\\n)\");\n                }\n                else {\n                    parts.push(\" \", argLines);\n                }\n            }\n            parts.push(\";\");\n            return concat(parts);\n        }\n        case \"CallExpression\":\n        case \"OptionalCallExpression\":\n            parts.push(path.call(print, \"callee\"));\n            if (n.typeParameters) {\n                parts.push(path.call(print, \"typeParameters\"));\n            }\n            if (n.typeArguments) {\n                parts.push(path.call(print, \"typeArguments\"));\n            }\n            // Like n.optional, but defaults to true for OptionalCallExpression\n            // nodes that are missing an n.optional property (unusual),\n            // according to the OptionalCallExpression definition in ast-types.\n            if (types.getFieldValue(n, \"optional\")) {\n                parts.push(\"?.\");\n            }\n            parts.push(printArgumentsList(path, options, print));\n            return concat(parts);\n        case \"RecordExpression\":\n            parts.push(\"#\");\n        // Intentionally fall through to printing the object literal...\n        case \"ObjectExpression\":\n        case \"ObjectPattern\":\n        case \"ObjectTypeAnnotation\": {\n            var isTypeAnnotation_1 = n.type === \"ObjectTypeAnnotation\";\n            var separator_1 = options.flowObjectCommas\n                ? \",\"\n                : isTypeAnnotation_1\n                    ? \";\"\n                    : \",\";\n            var fields = [];\n            var allowBreak_1 = false;\n            if (isTypeAnnotation_1) {\n                fields.push(\"indexers\", \"callProperties\");\n                if (n.internalSlots != null) {\n                    fields.push(\"internalSlots\");\n                }\n            }\n            fields.push(\"properties\");\n            var len_1 = 0;\n            fields.forEach(function (field) {\n                len_1 += n[field].length;\n            });\n            var oneLine_1 = (isTypeAnnotation_1 && len_1 === 1) || len_1 === 0;\n            var leftBrace = n.exact ? \"{|\" : \"{\";\n            var rightBrace = n.exact ? \"|}\" : \"}\";\n            parts.push(oneLine_1 ? leftBrace : leftBrace + \"\\n\");\n            var leftBraceIndex = parts.length - 1;\n            var i_1 = 0;\n            fields.forEach(function (field) {\n                path.each(function (childPath) {\n                    var lines = print(childPath);\n                    if (!oneLine_1) {\n                        lines = lines.indent(options.tabWidth);\n                    }\n                    var multiLine = !isTypeAnnotation_1 && lines.length > 1;\n                    if (multiLine && allowBreak_1) {\n                        // Similar to the logic for BlockStatement.\n                        parts.push(\"\\n\");\n                    }\n                    parts.push(lines);\n                    if (i_1 < len_1 - 1) {\n                        // Add an extra line break if the previous object property\n                        // had a multi-line value.\n                        parts.push(separator_1 + (multiLine ? \"\\n\\n\" : \"\\n\"));\n                        allowBreak_1 = !multiLine;\n                    }\n                    else if (len_1 !== 1 && isTypeAnnotation_1) {\n                        parts.push(separator_1);\n                    }\n                    else if (!oneLine_1 &&\n                        util.isTrailingCommaEnabled(options, \"objects\") &&\n                        childPath.getValue().type !== \"RestElement\") {\n                        parts.push(separator_1);\n                    }\n                    i_1++;\n                }, field);\n            });\n            if (n.inexact) {\n                var line = fromString(\"...\", options);\n                if (oneLine_1) {\n                    if (len_1 > 0) {\n                        parts.push(separator_1, \" \");\n                    }\n                    parts.push(line);\n                }\n                else {\n                    // No trailing separator after ... to maintain parity with prettier.\n                    parts.push(\"\\n\", line.indent(options.tabWidth));\n                }\n            }\n            parts.push(oneLine_1 ? rightBrace : \"\\n\" + rightBrace);\n            if (i_1 !== 0 && oneLine_1 && options.objectCurlySpacing) {\n                parts[leftBraceIndex] = leftBrace + \" \";\n                parts[parts.length - 1] = \" \" + rightBrace;\n            }\n            if (n.typeAnnotation) {\n                parts.push(path.call(print, \"typeAnnotation\"));\n            }\n            return concat(parts);\n        }\n        case \"PropertyPattern\":\n            return concat([\n                path.call(print, \"key\"),\n                \": \",\n                path.call(print, \"pattern\"),\n            ]);\n        case \"ObjectProperty\": // Babel 6\n        case \"Property\": {\n            // Non-standard AST node type.\n            if (n.method || n.kind === \"get\" || n.kind === \"set\") {\n                return printMethod(path, options, print);\n            }\n            if (n.shorthand && n.value.type === \"AssignmentPattern\") {\n                return path.call(print, \"value\");\n            }\n            var key = path.call(print, \"key\");\n            if (n.computed) {\n                parts.push(\"[\", key, \"]\");\n            }\n            else {\n                parts.push(key);\n            }\n            if (!n.shorthand || n.key.name !== n.value.name) {\n                parts.push(\": \", path.call(print, \"value\"));\n            }\n            return concat(parts);\n        }\n        case \"ClassMethod\": // Babel 6\n        case \"ObjectMethod\": // Babel 6\n        case \"ClassPrivateMethod\":\n        case \"TSDeclareMethod\":\n            return printMethod(path, options, print);\n        case \"PrivateName\":\n            return concat([\"#\", path.call(print, \"id\")]);\n        case \"Decorator\":\n            return concat([\"@\", path.call(print, \"expression\")]);\n        case \"TupleExpression\":\n            parts.push(\"#\");\n        // Intentionally fall through to printing the tuple elements...\n        case \"ArrayExpression\":\n        case \"ArrayPattern\": {\n            var elems = n.elements;\n            var len_2 = elems.length;\n            var printed_1 = path.map(print, \"elements\");\n            var joined = fromString(\", \").join(printed_1);\n            var oneLine_2 = joined.getLineLength(1) <= options.wrapColumn;\n            if (oneLine_2) {\n                if (options.arrayBracketSpacing) {\n                    parts.push(\"[ \");\n                }\n                else {\n                    parts.push(\"[\");\n                }\n            }\n            else {\n                parts.push(\"[\\n\");\n            }\n            path.each(function (elemPath) {\n                var i = elemPath.getName();\n                var elem = elemPath.getValue();\n                if (!elem) {\n                    // If the array expression ends with a hole, that hole\n                    // will be ignored by the interpreter, but if it ends with\n                    // two (or more) holes, we need to write out two (or more)\n                    // commas so that the resulting code is interpreted with\n                    // both (all) of the holes.\n                    parts.push(\",\");\n                }\n                else {\n                    var lines = printed_1[i];\n                    if (oneLine_2) {\n                        if (i > 0)\n                            parts.push(\" \");\n                    }\n                    else {\n                        lines = lines.indent(options.tabWidth);\n                    }\n                    parts.push(lines);\n                    if (i < len_2 - 1 ||\n                        (!oneLine_2 && util.isTrailingCommaEnabled(options, \"arrays\")))\n                        parts.push(\",\");\n                    if (!oneLine_2)\n                        parts.push(\"\\n\");\n                }\n            }, \"elements\");\n            if (oneLine_2 && options.arrayBracketSpacing) {\n                parts.push(\" ]\");\n            }\n            else {\n                parts.push(\"]\");\n            }\n            if (n.typeAnnotation) {\n                parts.push(path.call(print, \"typeAnnotation\"));\n            }\n            return concat(parts);\n        }\n        case \"SequenceExpression\":\n            return fromString(\", \").join(path.map(print, \"expressions\"));\n        case \"ThisExpression\":\n            return fromString(\"this\");\n        case \"Super\":\n            return fromString(\"super\");\n        case \"NullLiteral\": // Babel 6 Literal split\n            return fromString(\"null\");\n        case \"RegExpLiteral\": // Babel 6 Literal split\n            return fromString(getPossibleRaw(n) || \"/\".concat(n.pattern, \"/\").concat(n.flags || \"\"), options);\n        case \"BigIntLiteral\": // Babel 7 Literal split\n            return fromString(getPossibleRaw(n) || n.value + \"n\", options);\n        case \"NumericLiteral\": // Babel 6 Literal Split\n            return fromString(getPossibleRaw(n) || n.value, options);\n        case \"DecimalLiteral\":\n            return fromString(getPossibleRaw(n) || n.value + \"m\", options);\n        case \"StringLiteral\":\n            return fromString(nodeStr(n.value, options));\n        case \"BooleanLiteral\": // Babel 6 Literal split\n        case \"Literal\":\n            return fromString(getPossibleRaw(n) ||\n                (typeof n.value === \"string\" ? nodeStr(n.value, options) : n.value), options);\n        case \"Directive\": // Babel 6\n            return path.call(print, \"value\");\n        case \"DirectiveLiteral\": // Babel 6\n            return fromString(getPossibleRaw(n) || nodeStr(n.value, options), options);\n        case \"InterpreterDirective\":\n            return fromString(\"#!\".concat(n.value, \"\\n\"), options);\n        case \"ModuleSpecifier\":\n            if (n.local) {\n                throw new Error(\"The ESTree ModuleSpecifier type should be abstract\");\n            }\n            // The Esprima ModuleSpecifier type is just a string-valued\n            // Literal identifying the imported-from module.\n            return fromString(nodeStr(n.value, options), options);\n        case \"UnaryExpression\":\n            parts.push(n.operator);\n            if (/[a-z]$/.test(n.operator))\n                parts.push(\" \");\n            parts.push(path.call(print, \"argument\"));\n            return concat(parts);\n        case \"UpdateExpression\":\n            parts.push(path.call(print, \"argument\"), n.operator);\n            if (n.prefix)\n                parts.reverse();\n            return concat(parts);\n        case \"ConditionalExpression\":\n            return concat([\n                path.call(print, \"test\"),\n                \" ? \",\n                path.call(print, \"consequent\"),\n                \" : \",\n                path.call(print, \"alternate\"),\n            ]);\n        case \"NewExpression\": {\n            parts.push(\"new \", path.call(print, \"callee\"));\n            if (n.typeParameters) {\n                parts.push(path.call(print, \"typeParameters\"));\n            }\n            if (n.typeArguments) {\n                parts.push(path.call(print, \"typeArguments\"));\n            }\n            var args = n.arguments;\n            if (args) {\n                parts.push(printArgumentsList(path, options, print));\n            }\n            return concat(parts);\n        }\n        case \"VariableDeclaration\": {\n            if (n.declare) {\n                parts.push(\"declare \");\n            }\n            parts.push(n.kind, \" \");\n            var maxLen_1 = 0;\n            var printed = path.map(function (childPath) {\n                var lines = print(childPath);\n                maxLen_1 = Math.max(lines.length, maxLen_1);\n                return lines;\n            }, \"declarations\");\n            if (maxLen_1 === 1) {\n                parts.push(fromString(\", \").join(printed));\n            }\n            else if (printed.length > 1) {\n                parts.push(fromString(\",\\n\")\n                    .join(printed)\n                    .indentTail(n.kind.length + 1));\n            }\n            else {\n                parts.push(printed[0]);\n            }\n            // We generally want to terminate all variable declarations with a\n            // semicolon, except when they are children of for loops.\n            var parentNode = path.getParentNode();\n            if (!namedTypes.ForStatement.check(parentNode) &&\n                !namedTypes.ForInStatement.check(parentNode) &&\n                !(namedTypes.ForOfStatement &&\n                    namedTypes.ForOfStatement.check(parentNode)) &&\n                !(namedTypes.ForAwaitStatement &&\n                    namedTypes.ForAwaitStatement.check(parentNode))) {\n                parts.push(\";\");\n            }\n            return concat(parts);\n        }\n        case \"VariableDeclarator\":\n            return n.init\n                ? fromString(\" = \").join([\n                    path.call(print, \"id\"),\n                    path.call(print, \"init\"),\n                ])\n                : path.call(print, \"id\");\n        case \"WithStatement\":\n            return concat([\n                \"with (\",\n                path.call(print, \"object\"),\n                \") \",\n                path.call(print, \"body\"),\n            ]);\n        case \"IfStatement\": {\n            var con = adjustClause(path.call(print, \"consequent\"), options);\n            parts.push(\"if (\", path.call(print, \"test\"), \")\", con);\n            if (n.alternate)\n                parts.push(endsWithBrace(con) ? \" else\" : \"\\nelse\", adjustClause(path.call(print, \"alternate\"), options));\n            return concat(parts);\n        }\n        case \"ForStatement\": {\n            // TODO Get the for (;;) case right.\n            var init = path.call(print, \"init\");\n            var sep = init.length > 1 ? \";\\n\" : \"; \";\n            var forParen = \"for (\";\n            var indented = fromString(sep)\n                .join([init, path.call(print, \"test\"), path.call(print, \"update\")])\n                .indentTail(forParen.length);\n            var head = concat([forParen, indented, \")\"]);\n            var clause = adjustClause(path.call(print, \"body\"), options);\n            parts.push(head);\n            if (head.length > 1) {\n                parts.push(\"\\n\");\n                clause = clause.trimLeft();\n            }\n            parts.push(clause);\n            return concat(parts);\n        }\n        case \"WhileStatement\":\n            return concat([\n                \"while (\",\n                path.call(print, \"test\"),\n                \")\",\n                adjustClause(path.call(print, \"body\"), options),\n            ]);\n        case \"ForInStatement\":\n            // Note: esprima can't actually parse \"for each (\".\n            return concat([\n                n.each ? \"for each (\" : \"for (\",\n                path.call(print, \"left\"),\n                \" in \",\n                path.call(print, \"right\"),\n                \")\",\n                adjustClause(path.call(print, \"body\"), options),\n            ]);\n        case \"ForOfStatement\":\n        case \"ForAwaitStatement\":\n            parts.push(\"for \");\n            if (n.await || n.type === \"ForAwaitStatement\") {\n                parts.push(\"await \");\n            }\n            parts.push(\"(\", path.call(print, \"left\"), \" of \", path.call(print, \"right\"), \")\", adjustClause(path.call(print, \"body\"), options));\n            return concat(parts);\n        case \"DoWhileStatement\": {\n            var doBody = concat([\n                \"do\",\n                adjustClause(path.call(print, \"body\"), options),\n            ]);\n            parts.push(doBody);\n            if (endsWithBrace(doBody))\n                parts.push(\" while\");\n            else\n                parts.push(\"\\nwhile\");\n            parts.push(\" (\", path.call(print, \"test\"), \");\");\n            return concat(parts);\n        }\n        case \"DoExpression\": {\n            var statements = path.call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\");\n            return concat([\"do {\\n\", statements.indent(options.tabWidth), \"\\n}\"]);\n        }\n        case \"BreakStatement\":\n            parts.push(\"break\");\n            if (n.label)\n                parts.push(\" \", path.call(print, \"label\"));\n            parts.push(\";\");\n            return concat(parts);\n        case \"ContinueStatement\":\n            parts.push(\"continue\");\n            if (n.label)\n                parts.push(\" \", path.call(print, \"label\"));\n            parts.push(\";\");\n            return concat(parts);\n        case \"LabeledStatement\":\n            return concat([\n                path.call(print, \"label\"),\n                \":\\n\",\n                path.call(print, \"body\"),\n            ]);\n        case \"TryStatement\":\n            parts.push(\"try \", path.call(print, \"block\"));\n            if (n.handler) {\n                parts.push(\" \", path.call(print, \"handler\"));\n            }\n            else if (n.handlers) {\n                path.each(function (handlerPath) {\n                    parts.push(\" \", print(handlerPath));\n                }, \"handlers\");\n            }\n            if (n.finalizer) {\n                parts.push(\" finally \", path.call(print, \"finalizer\"));\n            }\n            return concat(parts);\n        case \"CatchClause\":\n            parts.push(\"catch \");\n            if (n.param) {\n                parts.push(\"(\", path.call(print, \"param\"));\n            }\n            if (n.guard) {\n                // Note: esprima does not recognize conditional catch clauses.\n                parts.push(\" if \", path.call(print, \"guard\"));\n            }\n            if (n.param) {\n                parts.push(\") \");\n            }\n            parts.push(path.call(print, \"body\"));\n            return concat(parts);\n        case \"ThrowStatement\":\n            return concat([\"throw \", path.call(print, \"argument\"), \";\"]);\n        case \"SwitchStatement\":\n            return concat([\n                \"switch (\",\n                path.call(print, \"discriminant\"),\n                \") {\\n\",\n                fromString(\"\\n\").join(path.map(print, \"cases\")),\n                \"\\n}\",\n            ]);\n        // Note: ignoring n.lexical because it has no printing consequences.\n        case \"SwitchCase\":\n            if (n.test)\n                parts.push(\"case \", path.call(print, \"test\"), \":\");\n            else\n                parts.push(\"default:\");\n            if (n.consequent.length > 0) {\n                parts.push(\"\\n\", path\n                    .call(function (consequentPath) {\n                    return printStatementSequence(consequentPath, options, print);\n                }, \"consequent\")\n                    .indent(options.tabWidth));\n            }\n            return concat(parts);\n        case \"DebuggerStatement\":\n            return fromString(\"debugger;\");\n        // JSX extensions below.\n        case \"JSXAttribute\":\n            parts.push(path.call(print, \"name\"));\n            if (n.value)\n                parts.push(\"=\", path.call(print, \"value\"));\n            return concat(parts);\n        case \"JSXIdentifier\":\n            return fromString(n.name, options);\n        case \"JSXNamespacedName\":\n            return fromString(\":\").join([\n                path.call(print, \"namespace\"),\n                path.call(print, \"name\"),\n            ]);\n        case \"JSXMemberExpression\":\n            return fromString(\".\").join([\n                path.call(print, \"object\"),\n                path.call(print, \"property\"),\n            ]);\n        case \"JSXSpreadAttribute\":\n            return concat([\"{...\", path.call(print, \"argument\"), \"}\"]);\n        case \"JSXSpreadChild\":\n            return concat([\"{...\", path.call(print, \"expression\"), \"}\"]);\n        case \"JSXExpressionContainer\":\n            return concat([\"{\", path.call(print, \"expression\"), \"}\"]);\n        case \"JSXElement\":\n        case \"JSXFragment\": {\n            var openingPropName = \"opening\" + (n.type === \"JSXElement\" ? \"Element\" : \"Fragment\");\n            var closingPropName = \"closing\" + (n.type === \"JSXElement\" ? \"Element\" : \"Fragment\");\n            var openingLines = path.call(print, openingPropName);\n            if (n[openingPropName].selfClosing) {\n                assert.ok(!n[closingPropName], \"unexpected \" +\n                    closingPropName +\n                    \" element in self-closing \" +\n                    n.type);\n                return openingLines;\n            }\n            var childLines = concat(path.map(function (childPath) {\n                var child = childPath.getValue();\n                if (namedTypes.Literal.check(child) &&\n                    typeof child.value === \"string\") {\n                    if (/\\S/.test(child.value)) {\n                        return child.value.replace(/^\\s+|\\s+$/g, \"\");\n                    }\n                    else if (/\\n/.test(child.value)) {\n                        return \"\\n\";\n                    }\n                }\n                return print(childPath);\n            }, \"children\")).indentTail(options.tabWidth);\n            var closingLines = path.call(print, closingPropName);\n            return concat([openingLines, childLines, closingLines]);\n        }\n        case \"JSXOpeningElement\": {\n            parts.push(\"<\", path.call(print, \"name\"));\n            var attrParts_1 = [];\n            path.each(function (attrPath) {\n                attrParts_1.push(\" \", print(attrPath));\n            }, \"attributes\");\n            var attrLines = concat(attrParts_1);\n            var needLineWrap = attrLines.length > 1 || attrLines.getLineLength(1) > options.wrapColumn;\n            if (needLineWrap) {\n                attrParts_1.forEach(function (part, i) {\n                    if (part === \" \") {\n                        assert.strictEqual(i % 2, 0);\n                        attrParts_1[i] = \"\\n\";\n                    }\n                });\n                attrLines = concat(attrParts_1).indentTail(options.tabWidth);\n            }\n            parts.push(attrLines, n.selfClosing ? \" />\" : \">\");\n            return concat(parts);\n        }\n        case \"JSXClosingElement\":\n            return concat([\"</\", path.call(print, \"name\"), \">\"]);\n        case \"JSXOpeningFragment\":\n            return fromString(\"<>\");\n        case \"JSXClosingFragment\":\n            return fromString(\"</>\");\n        case \"JSXText\":\n            return fromString(n.value, options);\n        case \"JSXEmptyExpression\":\n            return fromString(\"\");\n        case \"TypeAnnotatedIdentifier\":\n            return concat([\n                path.call(print, \"annotation\"),\n                \" \",\n                path.call(print, \"identifier\"),\n            ]);\n        case \"ClassBody\":\n            if (n.body.length === 0) {\n                return fromString(\"{}\");\n            }\n            return concat([\n                \"{\\n\",\n                path\n                    .call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\")\n                    .indent(options.tabWidth),\n                \"\\n}\",\n            ]);\n        case \"ClassPropertyDefinition\":\n            parts.push(\"static \", path.call(print, \"definition\"));\n            if (!namedTypes.MethodDefinition.check(n.definition))\n                parts.push(\";\");\n            return concat(parts);\n        case \"ClassProperty\": {\n            if (n.declare) {\n                parts.push(\"declare \");\n            }\n            var access = n.accessibility || n.access;\n            if (typeof access === \"string\") {\n                parts.push(access, \" \");\n            }\n            if (n.static) {\n                parts.push(\"static \");\n            }\n            if (n.abstract) {\n                parts.push(\"abstract \");\n            }\n            if (n.readonly) {\n                parts.push(\"readonly \");\n            }\n            var key = path.call(print, \"key\");\n            if (n.computed) {\n                key = concat([\"[\", key, \"]\"]);\n            }\n            if (n.variance) {\n                key = concat([printVariance(path, print), key]);\n            }\n            parts.push(key);\n            if (n.optional) {\n                parts.push(\"?\");\n            }\n            if (n.definite) {\n                parts.push(\"!\");\n            }\n            if (n.typeAnnotation) {\n                parts.push(path.call(print, \"typeAnnotation\"));\n            }\n            if (n.value) {\n                parts.push(\" = \", path.call(print, \"value\"));\n            }\n            parts.push(\";\");\n            return concat(parts);\n        }\n        case \"ClassPrivateProperty\":\n            if (n.static) {\n                parts.push(\"static \");\n            }\n            parts.push(path.call(print, \"key\"));\n            if (n.typeAnnotation) {\n                parts.push(path.call(print, \"typeAnnotation\"));\n            }\n            if (n.value) {\n                parts.push(\" = \", path.call(print, \"value\"));\n            }\n            parts.push(\";\");\n            return concat(parts);\n        case \"ClassAccessorProperty\": {\n            parts.push.apply(parts, __spreadArray(__spreadArray([], printClassMemberModifiers(n), false), [\"accessor \"], false));\n            if (n.computed) {\n                parts.push(\"[\", path.call(print, \"key\"), \"]\");\n            }\n            else {\n                parts.push(path.call(print, \"key\"));\n            }\n            if (n.optional) {\n                parts.push(\"?\");\n            }\n            if (n.definite) {\n                parts.push(\"!\");\n            }\n            if (n.typeAnnotation) {\n                parts.push(path.call(print, \"typeAnnotation\"));\n            }\n            if (n.value) {\n                parts.push(\" = \", path.call(print, \"value\"));\n            }\n            parts.push(\";\");\n            return concat(parts);\n        }\n        case \"ClassDeclaration\":\n        case \"ClassExpression\":\n        case \"DeclareClass\":\n            if (n.declare) {\n                parts.push(\"declare \");\n            }\n            if (n.abstract) {\n                parts.push(\"abstract \");\n            }\n            parts.push(\"class\");\n            if (n.id) {\n                parts.push(\" \", path.call(print, \"id\"));\n            }\n            if (n.typeParameters) {\n                parts.push(path.call(print, \"typeParameters\"));\n            }\n            if (n.superClass) {\n                // ClassDeclaration and ClassExpression only\n                parts.push(\" extends \", path.call(print, \"superClass\"), path.call(print, \"superTypeParameters\"));\n            }\n            if (n.extends && n.extends.length > 0) {\n                // DeclareClass only\n                parts.push(\" extends \", fromString(\", \").join(path.map(print, \"extends\")));\n            }\n            if (n[\"implements\"] && n[\"implements\"].length > 0) {\n                parts.push(\" implements \", fromString(\", \").join(path.map(print, \"implements\")));\n            }\n            parts.push(\" \", path.call(print, \"body\"));\n            if (n.type === \"DeclareClass\") {\n                return printFlowDeclaration(path, parts);\n            }\n            else {\n                return concat(parts);\n            }\n        case \"TemplateElement\":\n            return fromString(n.value.raw, options).lockIndentTail();\n        case \"TemplateLiteral\": {\n            var expressions_1 = path.map(print, \"expressions\");\n            parts.push(\"`\");\n            path.each(function (childPath) {\n                var i = childPath.getName();\n                parts.push(print(childPath));\n                if (i < expressions_1.length) {\n                    parts.push(\"${\", expressions_1[i], \"}\");\n                }\n            }, \"quasis\");\n            parts.push(\"`\");\n            return concat(parts).lockIndentTail();\n        }\n        case \"TaggedTemplateExpression\":\n            return concat([path.call(print, \"tag\"), path.call(print, \"quasi\")]);\n        // These types are unprintable because they serve as abstract\n        // supertypes for other (printable) types.\n        case \"Node\":\n        case \"Printable\":\n        case \"SourceLocation\":\n        case \"Position\":\n        case \"Statement\":\n        case \"Function\":\n        case \"Pattern\":\n        case \"Expression\":\n        case \"Declaration\":\n        case \"Specifier\":\n        case \"NamedSpecifier\":\n        case \"Comment\": // Supertype of Block and Line\n        case \"Flow\": // Supertype of all Flow AST node types\n        case \"FlowType\": // Supertype of all Flow types\n        case \"FlowPredicate\": // Supertype of InferredPredicate and DeclaredPredicate\n        case \"MemberTypeAnnotation\": // Flow\n        case \"Type\": // Flow\n        case \"TSHasOptionalTypeParameterInstantiation\":\n        case \"TSHasOptionalTypeParameters\":\n        case \"TSHasOptionalTypeAnnotation\":\n        case \"ChainElement\": // Supertype of MemberExpression and CallExpression\n            throw new Error(\"unprintable type: \" + JSON.stringify(n.type));\n        case \"CommentBlock\": // Babel block comment.\n        case \"Block\": // Esprima block comment.\n            return concat([\"/*\", fromString(n.value, options), \"*/\"]);\n        case \"CommentLine\": // Babel line comment.\n        case \"Line\": // Esprima line comment.\n            return concat([\"//\", fromString(n.value, options)]);\n        // Type Annotations for Facebook Flow, typically stripped out or\n        // transformed away before printing.\n        case \"TypeAnnotation\":\n            if (n.typeAnnotation) {\n                if (n.typeAnnotation.type !== \"FunctionTypeAnnotation\") {\n                    parts.push(\": \");\n                }\n                parts.push(path.call(print, \"typeAnnotation\"));\n                return concat(parts);\n            }\n            return fromString(\"\");\n        case \"ExistentialTypeParam\":\n        case \"ExistsTypeAnnotation\":\n            return fromString(\"*\", options);\n        case \"EmptyTypeAnnotation\":\n            return fromString(\"empty\", options);\n        case \"AnyTypeAnnotation\":\n            return fromString(\"any\", options);\n        case \"MixedTypeAnnotation\":\n            return fromString(\"mixed\", options);\n        case \"ArrayTypeAnnotation\":\n            return concat([path.call(print, \"elementType\"), \"[]\"]);\n        case \"TupleTypeAnnotation\": {\n            var printed_2 = path.map(print, \"types\");\n            var joined = fromString(\", \").join(printed_2);\n            var oneLine_3 = joined.getLineLength(1) <= options.wrapColumn;\n            if (oneLine_3) {\n                if (options.arrayBracketSpacing) {\n                    parts.push(\"[ \");\n                }\n                else {\n                    parts.push(\"[\");\n                }\n            }\n            else {\n                parts.push(\"[\\n\");\n            }\n            path.each(function (elemPath) {\n                var i = elemPath.getName();\n                var elem = elemPath.getValue();\n                if (!elem) {\n                    // If the array expression ends with a hole, that hole\n                    // will be ignored by the interpreter, but if it ends with\n                    // two (or more) holes, we need to write out two (or more)\n                    // commas so that the resulting code is interpreted with\n                    // both (all) of the holes.\n                    parts.push(\",\");\n                }\n                else {\n                    var lines = printed_2[i];\n                    if (oneLine_3) {\n                        if (i > 0)\n                            parts.push(\" \");\n                    }\n                    else {\n                        lines = lines.indent(options.tabWidth);\n                    }\n                    parts.push(lines);\n                    if (i < n.types.length - 1 ||\n                        (!oneLine_3 && util.isTrailingCommaEnabled(options, \"arrays\")))\n                        parts.push(\",\");\n                    if (!oneLine_3)\n                        parts.push(\"\\n\");\n                }\n            }, \"types\");\n            if (oneLine_3 && options.arrayBracketSpacing) {\n                parts.push(\" ]\");\n            }\n            else {\n                parts.push(\"]\");\n            }\n            return concat(parts);\n        }\n        case \"BooleanTypeAnnotation\":\n            return fromString(\"boolean\", options);\n        case \"BooleanLiteralTypeAnnotation\":\n            assert.strictEqual(typeof n.value, \"boolean\");\n            return fromString(\"\" + n.value, options);\n        case \"InterfaceTypeAnnotation\":\n            parts.push(\"interface\");\n            if (n.extends && n.extends.length > 0) {\n                parts.push(\" extends \", fromString(\", \").join(path.map(print, \"extends\")));\n            }\n            parts.push(\" \", path.call(print, \"body\"));\n            return concat(parts);\n        case \"DeclareFunction\":\n            return printFlowDeclaration(path, [\n                \"function \",\n                path.call(print, \"id\"),\n                \";\",\n            ]);\n        case \"DeclareModule\":\n            return printFlowDeclaration(path, [\n                \"module \",\n                path.call(print, \"id\"),\n                \" \",\n                path.call(print, \"body\"),\n            ]);\n        case \"DeclareModuleExports\":\n            return printFlowDeclaration(path, [\n                \"module.exports\",\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"DeclareVariable\":\n            return printFlowDeclaration(path, [\"var \", path.call(print, \"id\"), \";\"]);\n        case \"DeclareExportDeclaration\":\n        case \"DeclareExportAllDeclaration\":\n            return concat([\"declare \", printExportDeclaration(path, options, print)]);\n        case \"EnumDeclaration\":\n            return concat([\n                \"enum \",\n                path.call(print, \"id\"),\n                path.call(print, \"body\"),\n            ]);\n        case \"EnumBooleanBody\":\n        case \"EnumNumberBody\":\n        case \"EnumStringBody\":\n        case \"EnumSymbolBody\": {\n            if (n.type === \"EnumSymbolBody\" || n.explicitType) {\n                parts.push(\" of \", \n                // EnumBooleanBody => boolean, etc.\n                n.type.slice(4, -4).toLowerCase());\n            }\n            parts.push(\" {\\n\", fromString(\"\\n\")\n                .join(path.map(print, \"members\"))\n                .indent(options.tabWidth), \"\\n}\");\n            return concat(parts);\n        }\n        case \"EnumDefaultedMember\":\n            return concat([path.call(print, \"id\"), \",\"]);\n        case \"EnumBooleanMember\":\n        case \"EnumNumberMember\":\n        case \"EnumStringMember\":\n            return concat([\n                path.call(print, \"id\"),\n                \" = \",\n                path.call(print, \"init\"),\n                \",\",\n            ]);\n        case \"InferredPredicate\":\n            return fromString(\"%checks\", options);\n        case \"DeclaredPredicate\":\n            return concat([\"%checks(\", path.call(print, \"value\"), \")\"]);\n        case \"FunctionTypeAnnotation\": {\n            // FunctionTypeAnnotation is ambiguous:\n            // declare function(a: B): void; OR\n            // const A: (a: B) => void;\n            var parent = path.getParentNode(0);\n            var isArrowFunctionTypeAnnotation = !(namedTypes.ObjectTypeCallProperty.check(parent) ||\n                (namedTypes.ObjectTypeInternalSlot.check(parent) && parent.method) ||\n                namedTypes.DeclareFunction.check(path.getParentNode(2)));\n            var needsColon = isArrowFunctionTypeAnnotation &&\n                !namedTypes.FunctionTypeParam.check(parent) &&\n                !namedTypes.TypeAlias.check(parent);\n            if (needsColon) {\n                parts.push(\": \");\n            }\n            var hasTypeParameters = !!n.typeParameters;\n            var needsParens = hasTypeParameters || n.params.length !== 1 || n.params[0].name;\n            parts.push(hasTypeParameters ? path.call(print, \"typeParameters\") : \"\", needsParens ? \"(\" : \"\", printFunctionParams(path, options, print), needsParens ? \")\" : \"\");\n            // The returnType is not wrapped in a TypeAnnotation, so the colon\n            // needs to be added separately.\n            if (n.returnType) {\n                parts.push(isArrowFunctionTypeAnnotation ? \" => \" : \": \", path.call(print, \"returnType\"));\n            }\n            return concat(parts);\n        }\n        case \"FunctionTypeParam\": {\n            var name = path.call(print, \"name\");\n            parts.push(name);\n            if (n.optional) {\n                parts.push(\"?\");\n            }\n            if (name.infos[0].line) {\n                parts.push(\": \");\n            }\n            parts.push(path.call(print, \"typeAnnotation\"));\n            return concat(parts);\n        }\n        case \"GenericTypeAnnotation\":\n            return concat([\n                path.call(print, \"id\"),\n                path.call(print, \"typeParameters\"),\n            ]);\n        case \"DeclareInterface\":\n            parts.push(\"declare \");\n        // Fall through to InterfaceDeclaration...\n        case \"InterfaceDeclaration\":\n        case \"TSInterfaceDeclaration\":\n            if (n.declare) {\n                parts.push(\"declare \");\n            }\n            parts.push(\"interface \", path.call(print, \"id\"), path.call(print, \"typeParameters\"), \" \");\n            if (n[\"extends\"] && n[\"extends\"].length > 0) {\n                parts.push(\"extends \", fromString(\", \").join(path.map(print, \"extends\")), \" \");\n            }\n            if (n.body) {\n                parts.push(path.call(print, \"body\"));\n            }\n            return concat(parts);\n        case \"ClassImplements\":\n        case \"InterfaceExtends\":\n            return concat([\n                path.call(print, \"id\"),\n                path.call(print, \"typeParameters\"),\n            ]);\n        case \"IntersectionTypeAnnotation\":\n            return fromString(\" & \").join(path.map(print, \"types\"));\n        case \"NullableTypeAnnotation\":\n            return concat([\"?\", path.call(print, \"typeAnnotation\")]);\n        case \"NullLiteralTypeAnnotation\":\n            return fromString(\"null\", options);\n        case \"ThisTypeAnnotation\":\n            return fromString(\"this\", options);\n        case \"NumberTypeAnnotation\":\n            return fromString(\"number\", options);\n        case \"ObjectTypeCallProperty\":\n            return path.call(print, \"value\");\n        case \"ObjectTypeIndexer\":\n            if (n.static) {\n                parts.push(\"static \");\n            }\n            parts.push(printVariance(path, print), \"[\");\n            if (n.id) {\n                parts.push(path.call(print, \"id\"), \": \");\n            }\n            parts.push(path.call(print, \"key\"), \"]: \", path.call(print, \"value\"));\n            return concat(parts);\n        case \"ObjectTypeProperty\":\n            return concat([\n                printVariance(path, print),\n                path.call(print, \"key\"),\n                n.optional ? \"?\" : \"\",\n                \": \",\n                path.call(print, \"value\"),\n            ]);\n        case \"ObjectTypeInternalSlot\":\n            return concat([\n                n.static ? \"static \" : \"\",\n                \"[[\",\n                path.call(print, \"id\"),\n                \"]]\",\n                n.optional ? \"?\" : \"\",\n                n.value.type !== \"FunctionTypeAnnotation\" ? \": \" : \"\",\n                path.call(print, \"value\"),\n            ]);\n        case \"QualifiedTypeIdentifier\":\n            return concat([\n                path.call(print, \"qualification\"),\n                \".\",\n                path.call(print, \"id\"),\n            ]);\n        case \"StringLiteralTypeAnnotation\":\n            return fromString(nodeStr(n.value, options), options);\n        case \"NumberLiteralTypeAnnotation\":\n        case \"NumericLiteralTypeAnnotation\":\n            assert.strictEqual(typeof n.value, \"number\");\n            return fromString(JSON.stringify(n.value), options);\n        case \"BigIntLiteralTypeAnnotation\":\n            return fromString(n.raw, options);\n        case \"StringTypeAnnotation\":\n            return fromString(\"string\", options);\n        case \"DeclareTypeAlias\":\n            parts.push(\"declare \");\n        // Fall through to TypeAlias...\n        case \"TypeAlias\":\n            return concat([\n                \"type \",\n                path.call(print, \"id\"),\n                path.call(print, \"typeParameters\"),\n                \" = \",\n                path.call(print, \"right\"),\n                \";\",\n            ]);\n        case \"DeclareOpaqueType\":\n            parts.push(\"declare \");\n        // Fall through to OpaqueType...\n        case \"OpaqueType\":\n            parts.push(\"opaque type \", path.call(print, \"id\"), path.call(print, \"typeParameters\"));\n            if (n[\"supertype\"]) {\n                parts.push(\": \", path.call(print, \"supertype\"));\n            }\n            if (n[\"impltype\"]) {\n                parts.push(\" = \", path.call(print, \"impltype\"));\n            }\n            parts.push(\";\");\n            return concat(parts);\n        case \"TypeCastExpression\":\n            return concat([\n                \"(\",\n                path.call(print, \"expression\"),\n                path.call(print, \"typeAnnotation\"),\n                \")\",\n            ]);\n        case \"TypeParameterDeclaration\":\n        case \"TypeParameterInstantiation\":\n            return concat([\n                \"<\",\n                fromString(\", \").join(path.map(print, \"params\")),\n                \">\",\n            ]);\n        case \"Variance\":\n            if (n.kind === \"plus\") {\n                return fromString(\"+\");\n            }\n            if (n.kind === \"minus\") {\n                return fromString(\"-\");\n            }\n            return fromString(\"\");\n        case \"TypeParameter\":\n            if (n.variance) {\n                parts.push(printVariance(path, print));\n            }\n            parts.push(path.call(print, \"name\"));\n            if (n.bound) {\n                parts.push(path.call(print, \"bound\"));\n            }\n            if (n[\"default\"]) {\n                parts.push(\"=\", path.call(print, \"default\"));\n            }\n            return concat(parts);\n        case \"TypeofTypeAnnotation\":\n            return concat([\n                fromString(\"typeof \", options),\n                path.call(print, \"argument\"),\n            ]);\n        case \"IndexedAccessType\":\n        case \"OptionalIndexedAccessType\":\n            return concat([\n                path.call(print, \"objectType\"),\n                n.optional ? \"?.\" : \"\",\n                \"[\",\n                path.call(print, \"indexType\"),\n                \"]\",\n            ]);\n        case \"UnionTypeAnnotation\":\n            return fromString(\" | \").join(path.map(print, \"types\"));\n        case \"VoidTypeAnnotation\":\n            return fromString(\"void\", options);\n        case \"NullTypeAnnotation\":\n            return fromString(\"null\", options);\n        case \"SymbolTypeAnnotation\":\n            return fromString(\"symbol\", options);\n        case \"BigIntTypeAnnotation\":\n            return fromString(\"bigint\", options);\n        // Type Annotations for TypeScript (when using Babylon as parser)\n        case \"TSType\":\n            throw new Error(\"unprintable type: \" + JSON.stringify(n.type));\n        case \"TSNumberKeyword\":\n            return fromString(\"number\", options);\n        case \"TSBigIntKeyword\":\n            return fromString(\"bigint\", options);\n        case \"TSObjectKeyword\":\n            return fromString(\"object\", options);\n        case \"TSBooleanKeyword\":\n            return fromString(\"boolean\", options);\n        case \"TSStringKeyword\":\n            return fromString(\"string\", options);\n        case \"TSSymbolKeyword\":\n            return fromString(\"symbol\", options);\n        case \"TSAnyKeyword\":\n            return fromString(\"any\", options);\n        case \"TSVoidKeyword\":\n            return fromString(\"void\", options);\n        case \"TSIntrinsicKeyword\":\n            return fromString(\"intrinsic\", options);\n        case \"TSThisType\":\n            return fromString(\"this\", options);\n        case \"TSNullKeyword\":\n            return fromString(\"null\", options);\n        case \"TSUndefinedKeyword\":\n            return fromString(\"undefined\", options);\n        case \"TSUnknownKeyword\":\n            return fromString(\"unknown\", options);\n        case \"TSNeverKeyword\":\n            return fromString(\"never\", options);\n        case \"TSArrayType\":\n            return concat([path.call(print, \"elementType\"), \"[]\"]);\n        case \"TSLiteralType\":\n            return path.call(print, \"literal\");\n        case \"TSUnionType\":\n            return fromString(\" | \").join(path.map(print, \"types\"));\n        case \"TSIntersectionType\":\n            return fromString(\" & \").join(path.map(print, \"types\"));\n        case \"TSConditionalType\":\n            parts.push(path.call(print, \"checkType\"), \" extends \", path.call(print, \"extendsType\"), \" ? \", path.call(print, \"trueType\"), \" : \", path.call(print, \"falseType\"));\n            return concat(parts);\n        case \"TSInferType\":\n            parts.push(\"infer \", path.call(print, \"typeParameter\"));\n            return concat(parts);\n        case \"TSParenthesizedType\":\n            return concat([\"(\", path.call(print, \"typeAnnotation\"), \")\"]);\n        case \"TSFunctionType\":\n            return concat([\n                path.call(print, \"typeParameters\"),\n                \"(\",\n                printFunctionParams(path, options, print),\n                \") => \",\n                path.call(print, \"typeAnnotation\", \"typeAnnotation\"),\n            ]);\n        case \"TSConstructorType\":\n            return concat([\n                \"new \",\n                path.call(print, \"typeParameters\"),\n                \"(\",\n                printFunctionParams(path, options, print),\n                \") => \",\n                path.call(print, \"typeAnnotation\", \"typeAnnotation\"),\n            ]);\n        case \"TSMappedType\": {\n            parts.push(n.readonly ? \"readonly \" : \"\", \"[\", path.call(print, \"typeParameter\"), \"]\", n.optional ? \"?\" : \"\");\n            if (n.typeAnnotation) {\n                parts.push(\": \", path.call(print, \"typeAnnotation\"), \";\");\n            }\n            return concat([\"{\\n\", concat(parts).indent(options.tabWidth), \"\\n}\"]);\n        }\n        case \"TSTupleType\":\n            return concat([\n                \"[\",\n                fromString(\", \").join(path.map(print, \"elementTypes\")),\n                \"]\",\n            ]);\n        case \"TSNamedTupleMember\":\n            parts.push(path.call(print, \"label\"));\n            if (n.optional) {\n                parts.push(\"?\");\n            }\n            parts.push(\": \", path.call(print, \"elementType\"));\n            return concat(parts);\n        case \"TSRestType\":\n            return concat([\"...\", path.call(print, \"typeAnnotation\")]);\n        case \"TSOptionalType\":\n            return concat([path.call(print, \"typeAnnotation\"), \"?\"]);\n        case \"TSIndexedAccessType\":\n            return concat([\n                path.call(print, \"objectType\"),\n                \"[\",\n                path.call(print, \"indexType\"),\n                \"]\",\n            ]);\n        case \"TSTypeOperator\":\n            return concat([\n                path.call(print, \"operator\"),\n                \" \",\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"TSTypeLiteral\": {\n            var members = fromString(\"\\n\").join(path.map(print, \"members\").map(function (member) {\n                if (lastNonSpaceCharacter(member) !== \";\") {\n                    return member.concat(\";\");\n                }\n                return member;\n            }));\n            if (members.isEmpty()) {\n                return fromString(\"{}\", options);\n            }\n            parts.push(\"{\\n\", members.indent(options.tabWidth), \"\\n}\");\n            return concat(parts);\n        }\n        case \"TSEnumMember\":\n            parts.push(path.call(print, \"id\"));\n            if (n.initializer) {\n                parts.push(\" = \", path.call(print, \"initializer\"));\n            }\n            return concat(parts);\n        case \"TSTypeQuery\":\n            return concat([\"typeof \", path.call(print, \"exprName\")]);\n        case \"TSParameterProperty\":\n            if (n.accessibility) {\n                parts.push(n.accessibility, \" \");\n            }\n            if (n.export) {\n                parts.push(\"export \");\n            }\n            if (n.static) {\n                parts.push(\"static \");\n            }\n            if (n.readonly) {\n                parts.push(\"readonly \");\n            }\n            parts.push(path.call(print, \"parameter\"));\n            return concat(parts);\n        case \"TSTypeReference\":\n            return concat([\n                path.call(print, \"typeName\"),\n                path.call(print, \"typeParameters\"),\n            ]);\n        case \"TSQualifiedName\":\n            return concat([path.call(print, \"left\"), \".\", path.call(print, \"right\")]);\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n            {\n                var expression = path.call(print, \"expression\");\n                parts.push(expression, n.type === \"TSSatisfiesExpression\" ? \" satisfies \" : \" as \", path.call(print, \"typeAnnotation\"));\n                return concat(parts);\n            }\n        case \"TSTypeCastExpression\":\n            return concat([\n                path.call(print, \"expression\"),\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"TSNonNullExpression\":\n            return concat([path.call(print, \"expression\"), \"!\"]);\n        case \"TSTypeAnnotation\":\n            return concat([\": \", path.call(print, \"typeAnnotation\")]);\n        case \"TSIndexSignature\":\n            return concat([\n                n.readonly ? \"readonly \" : \"\",\n                \"[\",\n                path.map(print, \"parameters\"),\n                \"]\",\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"TSPropertySignature\":\n            parts.push(printVariance(path, print), n.readonly ? \"readonly \" : \"\");\n            if (n.computed) {\n                parts.push(\"[\", path.call(print, \"key\"), \"]\");\n            }\n            else {\n                parts.push(path.call(print, \"key\"));\n            }\n            parts.push(n.optional ? \"?\" : \"\", path.call(print, \"typeAnnotation\"));\n            return concat(parts);\n        case \"TSMethodSignature\":\n            if (n.computed) {\n                parts.push(\"[\", path.call(print, \"key\"), \"]\");\n            }\n            else {\n                parts.push(path.call(print, \"key\"));\n            }\n            if (n.optional) {\n                parts.push(\"?\");\n            }\n            parts.push(path.call(print, \"typeParameters\"), \"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"typeAnnotation\"));\n            return concat(parts);\n        case \"TSTypePredicate\":\n            if (n.asserts) {\n                parts.push(\"asserts \");\n            }\n            parts.push(path.call(print, \"parameterName\"));\n            if (n.typeAnnotation) {\n                parts.push(\" is \", path.call(print, \"typeAnnotation\", \"typeAnnotation\"));\n            }\n            return concat(parts);\n        case \"TSCallSignatureDeclaration\":\n            return concat([\n                path.call(print, \"typeParameters\"),\n                \"(\",\n                printFunctionParams(path, options, print),\n                \")\",\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"TSConstructSignatureDeclaration\":\n            if (n.typeParameters) {\n                parts.push(\"new\", path.call(print, \"typeParameters\"));\n            }\n            else {\n                parts.push(\"new \");\n            }\n            parts.push(\"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"typeAnnotation\"));\n            return concat(parts);\n        case \"TSTypeAliasDeclaration\":\n            return concat([\n                n.declare ? \"declare \" : \"\",\n                \"type \",\n                path.call(print, \"id\"),\n                path.call(print, \"typeParameters\"),\n                \" = \",\n                path.call(print, \"typeAnnotation\"),\n                \";\",\n            ]);\n        case \"TSTypeParameter\": {\n            parts.push(path.call(print, \"name\"));\n            // ambiguous because of TSMappedType\n            var parent = path.getParentNode(0);\n            var isInMappedType = namedTypes.TSMappedType.check(parent);\n            if (n.constraint) {\n                parts.push(isInMappedType ? \" in \" : \" extends \", path.call(print, \"constraint\"));\n            }\n            if (n[\"default\"]) {\n                parts.push(\" = \", path.call(print, \"default\"));\n            }\n            return concat(parts);\n        }\n        case \"TSTypeAssertion\": {\n            parts.push(\"<\", path.call(print, \"typeAnnotation\"), \"> \", path.call(print, \"expression\"));\n            return concat(parts);\n        }\n        case \"TSTypeParameterDeclaration\":\n        case \"TSTypeParameterInstantiation\":\n            return concat([\n                \"<\",\n                fromString(\", \").join(path.map(print, \"params\")),\n                \">\",\n            ]);\n        case \"TSEnumDeclaration\": {\n            parts.push(n.declare ? \"declare \" : \"\", n.const ? \"const \" : \"\", \"enum \", path.call(print, \"id\"));\n            var memberLines = fromString(\",\\n\").join(path.map(print, \"members\"));\n            if (memberLines.isEmpty()) {\n                parts.push(\" {}\");\n            }\n            else {\n                parts.push(\" {\\n\", memberLines.indent(options.tabWidth), \"\\n}\");\n            }\n            return concat(parts);\n        }\n        case \"TSExpressionWithTypeArguments\":\n            return concat([\n                path.call(print, \"expression\"),\n                path.call(print, \"typeParameters\"),\n            ]);\n        case \"TSInterfaceBody\": {\n            var lines = fromString(\"\\n\").join(path.map(print, \"body\").map(function (element) {\n                if (lastNonSpaceCharacter(element) !== \";\") {\n                    return element.concat(\";\");\n                }\n                return element;\n            }));\n            if (lines.isEmpty()) {\n                return fromString(\"{}\", options);\n            }\n            return concat([\"{\\n\", lines.indent(options.tabWidth), \"\\n}\"]);\n        }\n        case \"TSImportType\":\n            parts.push(\"import(\", path.call(print, \"argument\"), \")\");\n            if (n.qualifier) {\n                parts.push(\".\", path.call(print, \"qualifier\"));\n            }\n            if (n.typeParameters) {\n                parts.push(path.call(print, \"typeParameters\"));\n            }\n            return concat(parts);\n        case \"TSImportEqualsDeclaration\":\n            if (n.isExport) {\n                parts.push(\"export \");\n            }\n            parts.push(\"import \", path.call(print, \"id\"), \" = \", path.call(print, \"moduleReference\"));\n            return maybeAddSemicolon(concat(parts));\n        case \"TSExternalModuleReference\":\n            return concat([\"require(\", path.call(print, \"expression\"), \")\"]);\n        case \"TSModuleDeclaration\": {\n            var parent = path.getParentNode();\n            if (parent.type === \"TSModuleDeclaration\") {\n                parts.push(\".\");\n            }\n            else {\n                if (n.declare) {\n                    parts.push(\"declare \");\n                }\n                if (!n.global) {\n                    var isExternal = n.id.type === \"StringLiteral\" ||\n                        (n.id.type === \"Literal\" && typeof n.id.value === \"string\");\n                    if (isExternal) {\n                        parts.push(\"module \");\n                    }\n                    else if (n.loc && n.loc.lines && n.id.loc) {\n                        var prefix = n.loc.lines.sliceString(n.loc.start, n.id.loc.start);\n                        // These keywords are fundamentally ambiguous in the\n                        // Babylon parser, and not reflected in the AST, so\n                        // the best we can do is to match the original code,\n                        // when possible.\n                        if (prefix.indexOf(\"module\") >= 0) {\n                            parts.push(\"module \");\n                        }\n                        else {\n                            parts.push(\"namespace \");\n                        }\n                    }\n                    else {\n                        parts.push(\"namespace \");\n                    }\n                }\n            }\n            parts.push(path.call(print, \"id\"));\n            if (n.body) {\n                parts.push(\" \");\n                parts.push(path.call(print, \"body\"));\n            }\n            return concat(parts);\n        }\n        case \"TSModuleBlock\": {\n            var naked = path.call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\");\n            if (naked.isEmpty()) {\n                parts.push(\"{}\");\n            }\n            else {\n                parts.push(\"{\\n\", naked.indent(options.tabWidth), \"\\n}\");\n            }\n            return concat(parts);\n        }\n        case \"TSInstantiationExpression\": {\n            parts.push(path.call(print, \"expression\"), path.call(print, \"typeParameters\"));\n            return concat(parts);\n        }\n        // https://github.com/babel/babel/pull/10148\n        case \"V8IntrinsicIdentifier\":\n            return concat([\"%\", path.call(print, \"name\")]);\n        // https://github.com/babel/babel/pull/13191\n        case \"TopicReference\":\n            return fromString(\"#\");\n        // Unhandled types below. If encountered, nodes of these types should\n        // be either left alone or desugared into AST types that are fully\n        // supported by the pretty-printer.\n        case \"ClassHeritage\": // TODO\n        case \"ComprehensionBlock\": // TODO\n        case \"ComprehensionExpression\": // TODO\n        case \"Glob\": // TODO\n        case \"GeneratorExpression\": // TODO\n        case \"LetStatement\": // TODO\n        case \"LetExpression\": // TODO\n        case \"GraphExpression\": // TODO\n        case \"GraphIndexExpression\": // TODO\n        case \"XMLDefaultDeclaration\":\n        case \"XMLAnyName\":\n        case \"XMLQualifiedIdentifier\":\n        case \"XMLFunctionQualifiedIdentifier\":\n        case \"XMLAttributeSelector\":\n        case \"XMLFilterExpression\":\n        case \"XML\":\n        case \"XMLElement\":\n        case \"XMLList\":\n        case \"XMLEscape\":\n        case \"XMLText\":\n        case \"XMLStartTag\":\n        case \"XMLEndTag\":\n        case \"XMLPointTag\":\n        case \"XMLName\":\n        case \"XMLAttribute\":\n        case \"XMLCdata\":\n        case \"XMLComment\":\n        case \"XMLProcessingInstruction\":\n        default:\n            debugger;\n            throw new Error(\"unknown type: \" + JSON.stringify(n.type));\n    }\n}\nfunction printDecorators(path, printPath) {\n    var parts = [];\n    var node = path.getValue();\n    if (node.decorators &&\n        node.decorators.length > 0 &&\n        // If the parent node is an export declaration, it will be\n        // responsible for printing node.decorators.\n        !util.getParentExportDeclaration(path)) {\n        path.each(function (decoratorPath) {\n            parts.push(printPath(decoratorPath), \"\\n\");\n        }, \"decorators\");\n    }\n    else if (util.isExportDeclaration(node) &&\n        node.declaration &&\n        node.declaration.decorators) {\n        // Export declarations are responsible for printing any decorators\n        // that logically apply to node.declaration.\n        path.each(function (decoratorPath) {\n            parts.push(printPath(decoratorPath), \"\\n\");\n        }, \"declaration\", \"decorators\");\n    }\n    return concat(parts);\n}\nfunction printStatementSequence(path, options, print) {\n    var filtered = [];\n    var sawComment = false;\n    var sawStatement = false;\n    path.each(function (stmtPath) {\n        var stmt = stmtPath.getValue();\n        // Just in case the AST has been modified to contain falsy\n        // \"statements,\" it's safer simply to skip them.\n        if (!stmt) {\n            return;\n        }\n        // Skip printing EmptyStatement nodes to avoid leaving stray\n        // semicolons lying around.\n        if (stmt.type === \"EmptyStatement\" &&\n            !(stmt.comments && stmt.comments.length > 0)) {\n            return;\n        }\n        if (namedTypes.Comment.check(stmt)) {\n            // The pretty printer allows a dangling Comment node to act as\n            // a Statement when the Comment can't be attached to any other\n            // non-Comment node in the tree.\n            sawComment = true;\n        }\n        else if (namedTypes.Statement.check(stmt)) {\n            sawStatement = true;\n        }\n        else {\n            // When the pretty printer encounters a string instead of an\n            // AST node, it just prints the string. This behavior can be\n            // useful for fine-grained formatting decisions like inserting\n            // blank lines.\n            isString.assert(stmt);\n        }\n        // We can't hang onto stmtPath outside of this function, because\n        // it's just a reference to a mutable FastPath object, so we have\n        // to go ahead and print it here.\n        filtered.push({\n            node: stmt,\n            printed: print(stmtPath),\n        });\n    });\n    if (sawComment) {\n        assert.strictEqual(sawStatement, false, \"Comments may appear as statements in otherwise empty statement \" +\n            \"lists, but may not coexist with non-Comment nodes.\");\n    }\n    var prevTrailingSpace = null;\n    var len = filtered.length;\n    var parts = [];\n    filtered.forEach(function (info, i) {\n        var printed = info.printed;\n        var stmt = info.node;\n        var multiLine = printed.length > 1;\n        var notFirst = i > 0;\n        var notLast = i < len - 1;\n        var leadingSpace;\n        var trailingSpace;\n        var lines = stmt && stmt.loc && stmt.loc.lines;\n        var trueLoc = lines && options.reuseWhitespace && util.getTrueLoc(stmt, lines);\n        if (notFirst) {\n            if (trueLoc) {\n                var beforeStart = lines.skipSpaces(trueLoc.start, true);\n                var beforeStartLine = beforeStart ? beforeStart.line : 1;\n                var leadingGap = trueLoc.start.line - beforeStartLine;\n                leadingSpace = Array(leadingGap + 1).join(\"\\n\");\n            }\n            else {\n                leadingSpace = multiLine ? \"\\n\\n\" : \"\\n\";\n            }\n        }\n        else {\n            leadingSpace = \"\";\n        }\n        if (notLast) {\n            if (trueLoc) {\n                var afterEnd = lines.skipSpaces(trueLoc.end);\n                var afterEndLine = afterEnd ? afterEnd.line : lines.length;\n                var trailingGap = afterEndLine - trueLoc.end.line;\n                trailingSpace = Array(trailingGap + 1).join(\"\\n\");\n            }\n            else {\n                trailingSpace = multiLine ? \"\\n\\n\" : \"\\n\";\n            }\n        }\n        else {\n            trailingSpace = \"\";\n        }\n        parts.push(maxSpace(prevTrailingSpace, leadingSpace), printed);\n        if (notLast) {\n            prevTrailingSpace = trailingSpace;\n        }\n        else if (trailingSpace) {\n            parts.push(trailingSpace);\n        }\n    });\n    return concat(parts);\n}\nfunction maxSpace(s1, s2) {\n    if (!s1 && !s2) {\n        return fromString(\"\");\n    }\n    if (!s1) {\n        return fromString(s2);\n    }\n    if (!s2) {\n        return fromString(s1);\n    }\n    var spaceLines1 = fromString(s1);\n    var spaceLines2 = fromString(s2);\n    if (spaceLines2.length > spaceLines1.length) {\n        return spaceLines2;\n    }\n    return spaceLines1;\n}\nfunction printClassMemberModifiers(node) {\n    var parts = [];\n    if (node.declare) {\n        parts.push(\"declare \");\n    }\n    var access = node.accessibility || node.access;\n    if (typeof access === \"string\") {\n        parts.push(access, \" \");\n    }\n    if (node.static) {\n        parts.push(\"static \");\n    }\n    if (node.override) {\n        parts.push(\"override \");\n    }\n    if (node.abstract) {\n        parts.push(\"abstract \");\n    }\n    if (node.readonly) {\n        parts.push(\"readonly \");\n    }\n    return parts;\n}\nfunction printMethod(path, options, print) {\n    var node = path.getNode();\n    var kind = node.kind;\n    var parts = [];\n    var nodeValue = node.value;\n    if (!namedTypes.FunctionExpression.check(nodeValue)) {\n        nodeValue = node;\n    }\n    parts.push.apply(parts, printClassMemberModifiers(node));\n    if (nodeValue.async) {\n        parts.push(\"async \");\n    }\n    if (nodeValue.generator) {\n        parts.push(\"*\");\n    }\n    if (kind === \"get\" || kind === \"set\") {\n        parts.push(kind, \" \");\n    }\n    var key = path.call(print, \"key\");\n    if (node.computed) {\n        key = concat([\"[\", key, \"]\"]);\n    }\n    parts.push(key);\n    if (node.optional) {\n        parts.push(\"?\");\n    }\n    if (node === nodeValue) {\n        parts.push(path.call(print, \"typeParameters\"), \"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"returnType\"));\n        if (node.body) {\n            parts.push(\" \", path.call(print, \"body\"));\n        }\n        else {\n            parts.push(\";\");\n        }\n    }\n    else {\n        parts.push(path.call(print, \"value\", \"typeParameters\"), \"(\", path.call(function (valuePath) { return printFunctionParams(valuePath, options, print); }, \"value\"), \")\", path.call(print, \"value\", \"returnType\"));\n        if (nodeValue.body) {\n            parts.push(\" \", path.call(print, \"value\", \"body\"));\n        }\n        else {\n            parts.push(\";\");\n        }\n    }\n    return concat(parts);\n}\nfunction printArgumentsList(path, options, print) {\n    var printed = path.map(print, \"arguments\");\n    var trailingComma = util.isTrailingCommaEnabled(options, \"parameters\");\n    var joined = fromString(\", \").join(printed);\n    if (joined.getLineLength(1) > options.wrapColumn) {\n        joined = fromString(\",\\n\").join(printed);\n        return concat([\n            \"(\\n\",\n            joined.indent(options.tabWidth),\n            trailingComma ? \",\\n)\" : \"\\n)\",\n        ]);\n    }\n    return concat([\"(\", joined, \")\"]);\n}\nfunction printFunctionParams(path, options, print) {\n    var fun = path.getValue();\n    var params;\n    var printed = [];\n    if (fun.params) {\n        params = fun.params;\n        printed = path.map(print, \"params\");\n    }\n    else if (fun.parameters) {\n        params = fun.parameters;\n        printed = path.map(print, \"parameters\");\n    }\n    if (fun.defaults) {\n        path.each(function (defExprPath) {\n            var i = defExprPath.getName();\n            var p = printed[i];\n            if (p && defExprPath.getValue()) {\n                printed[i] = concat([p, \" = \", print(defExprPath)]);\n            }\n        }, \"defaults\");\n    }\n    if (fun.rest) {\n        printed.push(concat([\"...\", path.call(print, \"rest\")]));\n    }\n    var joined = fromString(\", \").join(printed);\n    if (joined.length > 1 || joined.getLineLength(1) > options.wrapColumn) {\n        joined = fromString(\",\\n\").join(printed);\n        if (util.isTrailingCommaEnabled(options, \"parameters\") &&\n            !fun.rest &&\n            params[params.length - 1].type !== \"RestElement\") {\n            joined = concat([joined, \",\\n\"]);\n        }\n        else {\n            joined = concat([joined, \"\\n\"]);\n        }\n        return concat([\"\\n\", joined.indent(options.tabWidth)]);\n    }\n    return joined;\n}\nfunction maybePrintImportAssertions(path, options, print) {\n    var n = path.getValue();\n    if (n.assertions && n.assertions.length > 0) {\n        var parts = [\" assert {\"];\n        var printed = path.map(print, \"assertions\");\n        var flat = fromString(\", \").join(printed);\n        if (flat.length > 1 || flat.getLineLength(1) > options.wrapColumn) {\n            parts.push(\"\\n\", fromString(\",\\n\").join(printed).indent(options.tabWidth), \"\\n}\");\n        }\n        else {\n            parts.push(\" \", flat, \" }\");\n        }\n        return concat(parts);\n    }\n    return fromString(\"\");\n}\nfunction printExportDeclaration(path, options, print) {\n    var decl = path.getValue();\n    var parts = [\"export \"];\n    if (decl.exportKind && decl.exportKind === \"type\") {\n        if (!decl.declaration) {\n            parts.push(\"type \");\n        }\n    }\n    var shouldPrintSpaces = options.objectCurlySpacing;\n    namedTypes.Declaration.assert(decl);\n    if (decl[\"default\"] || decl.type === \"ExportDefaultDeclaration\") {\n        parts.push(\"default \");\n    }\n    if (decl.declaration) {\n        parts.push(path.call(print, \"declaration\"));\n    }\n    else if (decl.specifiers) {\n        if (decl.specifiers.length === 1 &&\n            decl.specifiers[0].type === \"ExportBatchSpecifier\") {\n            parts.push(\"*\");\n        }\n        else if (decl.specifiers.length === 0) {\n            parts.push(\"{}\");\n        }\n        else if (decl.specifiers[0].type === \"ExportDefaultSpecifier\") {\n            var unbracedSpecifiers_2 = [];\n            var bracedSpecifiers_2 = [];\n            path.each(function (specifierPath) {\n                var spec = specifierPath.getValue();\n                if (spec.type === \"ExportDefaultSpecifier\") {\n                    unbracedSpecifiers_2.push(print(specifierPath));\n                }\n                else {\n                    bracedSpecifiers_2.push(print(specifierPath));\n                }\n            }, \"specifiers\");\n            unbracedSpecifiers_2.forEach(function (lines, i) {\n                if (i > 0) {\n                    parts.push(\", \");\n                }\n                parts.push(lines);\n            });\n            if (bracedSpecifiers_2.length > 0) {\n                var lines_1 = fromString(\", \").join(bracedSpecifiers_2);\n                if (lines_1.getLineLength(1) > options.wrapColumn) {\n                    lines_1 = concat([\n                        fromString(\",\\n\").join(bracedSpecifiers_2).indent(options.tabWidth),\n                        \",\",\n                    ]);\n                }\n                if (unbracedSpecifiers_2.length > 0) {\n                    parts.push(\", \");\n                }\n                if (lines_1.length > 1) {\n                    parts.push(\"{\\n\", lines_1, \"\\n}\");\n                }\n                else if (options.objectCurlySpacing) {\n                    parts.push(\"{ \", lines_1, \" }\");\n                }\n                else {\n                    parts.push(\"{\", lines_1, \"}\");\n                }\n            }\n        }\n        else {\n            parts.push(shouldPrintSpaces ? \"{ \" : \"{\", fromString(\", \").join(path.map(print, \"specifiers\")), shouldPrintSpaces ? \" }\" : \"}\");\n        }\n        if (decl.source) {\n            parts.push(\" from \", path.call(print, \"source\"), maybePrintImportAssertions(path, options, print));\n        }\n    }\n    var lines = concat(parts);\n    if (lastNonSpaceCharacter(lines) !== \";\" &&\n        !(decl.declaration &&\n            (decl.declaration.type === \"FunctionDeclaration\" ||\n                decl.declaration.type === \"ClassDeclaration\" ||\n                decl.declaration.type === \"TSModuleDeclaration\" ||\n                decl.declaration.type === \"TSInterfaceDeclaration\" ||\n                decl.declaration.type === \"TSEnumDeclaration\"))) {\n        lines = concat([lines, \";\"]);\n    }\n    return lines;\n}\nfunction printFlowDeclaration(path, parts) {\n    var parentExportDecl = util.getParentExportDeclaration(path);\n    if (parentExportDecl) {\n        assert.strictEqual(parentExportDecl.type, \"DeclareExportDeclaration\");\n    }\n    else {\n        // If the parent node has type DeclareExportDeclaration, then it\n        // will be responsible for printing the \"declare\" token. Otherwise\n        // it needs to be printed with this non-exported declaration node.\n        parts.unshift(\"declare \");\n    }\n    return concat(parts);\n}\nfunction printVariance(path, print) {\n    return path.call(function (variancePath) {\n        var value = variancePath.getValue();\n        if (value) {\n            if (value === \"plus\") {\n                return fromString(\"+\");\n            }\n            if (value === \"minus\") {\n                return fromString(\"-\");\n            }\n            return print(variancePath);\n        }\n        return fromString(\"\");\n    }, \"variance\");\n}\nfunction adjustClause(clause, options) {\n    if (clause.length > 1)\n        return concat([\" \", clause]);\n    return concat([\"\\n\", maybeAddSemicolon(clause).indent(options.tabWidth)]);\n}\nfunction lastNonSpaceCharacter(lines) {\n    var pos = lines.lastPos();\n    do {\n        var ch = lines.charAt(pos);\n        if (/\\S/.test(ch))\n            return ch;\n    } while (lines.prevPos(pos));\n}\nfunction endsWithBrace(lines) {\n    return lastNonSpaceCharacter(lines) === \"}\";\n}\nfunction swapQuotes(str) {\n    return str.replace(/['\"]/g, function (m) { return (m === '\"' ? \"'\" : '\"'); });\n}\nfunction getPossibleRaw(node) {\n    var value = types.getFieldValue(node, \"value\");\n    var extra = types.getFieldValue(node, \"extra\");\n    if (extra && typeof extra.raw === \"string\" && value == extra.rawValue) {\n        return extra.raw;\n    }\n    if (node.type === \"Literal\") {\n        var raw = node.raw;\n        if (typeof raw === \"string\" && value == raw) {\n            return raw;\n        }\n    }\n}\nfunction jsSafeStringify(str) {\n    return JSON.stringify(str).replace(/[\\u2028\\u2029]/g, function (m) {\n        return \"\\\\u\" + m.charCodeAt(0).toString(16);\n    });\n}\nfunction nodeStr(str, options) {\n    isString.assert(str);\n    switch (options.quote) {\n        case \"auto\": {\n            var double = jsSafeStringify(str);\n            var single = swapQuotes(jsSafeStringify(swapQuotes(str)));\n            return double.length > single.length ? single : double;\n        }\n        case \"single\":\n            return swapQuotes(jsSafeStringify(swapQuotes(str)));\n        case \"double\":\n        default:\n            return jsSafeStringify(str);\n    }\n}\nfunction maybeAddSemicolon(lines) {\n    var eoc = lastNonSpaceCharacter(lines);\n    if (!eoc || \"\\n};\".indexOf(eoc) < 0)\n        return concat([lines, \";\"]);\n    return lines;\n}\n", "import assert from \"assert\";\nimport * as types from \"ast-types\";\nimport * as util from \"./util.js\";\nvar n = types.namedTypes;\nvar isArray = types.builtInTypes.array;\nvar isNumber = types.builtInTypes.number;\nvar PRECEDENCE = {};\n[\n    [\"??\"],\n    [\"||\"],\n    [\"&&\"],\n    [\"|\"],\n    [\"^\"],\n    [\"&\"],\n    [\"==\", \"===\", \"!=\", \"!==\"],\n    [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n    [\">>\", \"<<\", \">>>\"],\n    [\"+\", \"-\"],\n    [\"*\", \"/\", \"%\"],\n    [\"**\"],\n].forEach(function (tier, i) {\n    tier.forEach(function (op) {\n        PRECEDENCE[op] = i;\n    });\n});\nvar FastPath = function FastPath(value) {\n    assert.ok(this instanceof FastPath);\n    this.stack = [value];\n};\nvar FPp = FastPath.prototype;\n// Static convenience function for coercing a value to a FastPath.\nFastPath.from = function (obj) {\n    if (obj instanceof FastPath) {\n        // Return a defensive copy of any existing FastPath instances.\n        return obj.copy();\n    }\n    if (obj instanceof types.NodePath) {\n        // For backwards compatibility, unroll NodePath instances into\n        // lightweight FastPath [..., name, value] stacks.\n        var copy = Object.create(FastPath.prototype);\n        var stack = [obj.value];\n        for (var pp = void 0; (pp = obj.parentPath); obj = pp)\n            stack.push(obj.name, pp.value);\n        copy.stack = stack.reverse();\n        return copy;\n    }\n    // Otherwise use obj as the value of the new FastPath instance.\n    return new FastPath(obj);\n};\nFPp.copy = function copy() {\n    var copy = Object.create(FastPath.prototype);\n    copy.stack = this.stack.slice(0);\n    return copy;\n};\n// The name of the current property is always the penultimate element of\n// this.stack, and always a String.\nFPp.getName = function getName() {\n    var s = this.stack;\n    var len = s.length;\n    if (len > 1) {\n        return s[len - 2];\n    }\n    // Since the name is always a string, null is a safe sentinel value to\n    // return if we do not know the name of the (root) value.\n    return null;\n};\n// The value of the current property is always the final element of\n// this.stack.\nFPp.getValue = function getValue() {\n    var s = this.stack;\n    return s[s.length - 1];\n};\nFPp.valueIsDuplicate = function () {\n    var s = this.stack;\n    var valueIndex = s.length - 1;\n    return s.lastIndexOf(s[valueIndex], valueIndex - 1) >= 0;\n};\nfunction getNodeHelper(path, count) {\n    var s = path.stack;\n    for (var i = s.length - 1; i >= 0; i -= 2) {\n        var value = s[i];\n        if (n.Node.check(value) && --count < 0) {\n            return value;\n        }\n    }\n    return null;\n}\nFPp.getNode = function getNode(count) {\n    if (count === void 0) { count = 0; }\n    return getNodeHelper(this, ~~count);\n};\nFPp.getParentNode = function getParentNode(count) {\n    if (count === void 0) { count = 0; }\n    return getNodeHelper(this, ~~count + 1);\n};\n// The length of the stack can be either even or odd, depending on whether\n// or not we have a name for the root value. The difference between the\n// index of the root value and the index of the final value is always\n// even, though, which allows us to return the root value in constant time\n// (i.e. without iterating backwards through the stack).\nFPp.getRootValue = function getRootValue() {\n    var s = this.stack;\n    if (s.length % 2 === 0) {\n        return s[1];\n    }\n    return s[0];\n};\n// Temporarily push properties named by string arguments given after the\n// callback function onto this.stack, then call the callback with a\n// reference to this (modified) FastPath object. Note that the stack will\n// be restored to its original state after the callback is finished, so it\n// is probably a mistake to retain a reference to the path.\nFPp.call = function call(callback /*, name1, name2, ... */) {\n    var s = this.stack;\n    var origLen = s.length;\n    var value = s[origLen - 1];\n    var argc = arguments.length;\n    for (var i = 1; i < argc; ++i) {\n        var name = arguments[i];\n        value = value[name];\n        s.push(name, value);\n    }\n    var result = callback(this);\n    s.length = origLen;\n    return result;\n};\n// Similar to FastPath.prototype.call, except that the value obtained by\n// accessing this.getValue()[name1][name2]... should be array-like. The\n// callback will be called with a reference to this path object for each\n// element of the array.\nFPp.each = function each(callback /*, name1, name2, ... */) {\n    var s = this.stack;\n    var origLen = s.length;\n    var value = s[origLen - 1];\n    var argc = arguments.length;\n    for (var i = 1; i < argc; ++i) {\n        var name = arguments[i];\n        value = value[name];\n        s.push(name, value);\n    }\n    for (var i = 0; i < value.length; ++i) {\n        if (i in value) {\n            s.push(i, value[i]);\n            // If the callback needs to know the value of i, call\n            // path.getName(), assuming path is the parameter name.\n            callback(this);\n            s.length -= 2;\n        }\n    }\n    s.length = origLen;\n};\n// Similar to FastPath.prototype.each, except that the results of the\n// callback function invocations are stored in an array and returned at\n// the end of the iteration.\nFPp.map = function map(callback /*, name1, name2, ... */) {\n    var s = this.stack;\n    var origLen = s.length;\n    var value = s[origLen - 1];\n    var argc = arguments.length;\n    for (var i = 1; i < argc; ++i) {\n        var name = arguments[i];\n        value = value[name];\n        s.push(name, value);\n    }\n    var result = new Array(value.length);\n    for (var i = 0; i < value.length; ++i) {\n        if (i in value) {\n            s.push(i, value[i]);\n            result[i] = callback(this, i);\n            s.length -= 2;\n        }\n    }\n    s.length = origLen;\n    return result;\n};\n// Returns true if the node at the tip of the path is wrapped with\n// parentheses, OR if the only reason the node needed parentheses was that\n// it couldn't be the first expression in the enclosing statement (see\n// FastPath#canBeFirstInStatement), and it has an opening `(` character.\n// For example, the FunctionExpression in `(function(){}())` appears to\n// need parentheses only because it's the first expression in the AST, but\n// since it happens to be preceded by a `(` (which is not apparent from\n// the AST but can be determined using FastPath#getPrevToken), there is no\n// ambiguity about how to parse it, so it counts as having parentheses,\n// even though it is not immediately followed by a `)`.\nFPp.hasParens = function () {\n    var node = this.getNode();\n    var prevToken = this.getPrevToken(node);\n    if (!prevToken) {\n        return false;\n    }\n    var nextToken = this.getNextToken(node);\n    if (!nextToken) {\n        return false;\n    }\n    if (prevToken.value === \"(\") {\n        if (nextToken.value === \")\") {\n            // If the node preceded by a `(` token and followed by a `)` token,\n            // then of course it has parentheses.\n            return true;\n        }\n        // If this is one of the few Expression types that can't come first in\n        // the enclosing statement because of parsing ambiguities (namely,\n        // FunctionExpression, ObjectExpression, and ClassExpression) and\n        // this.firstInStatement() returns true, and the node would not need\n        // parentheses in an expression context because this.needsParens(true)\n        // returns false, then it just needs an opening parenthesis to resolve\n        // the parsing ambiguity that made it appear to need parentheses.\n        var justNeedsOpeningParen = !this.canBeFirstInStatement() &&\n            this.firstInStatement() &&\n            !this.needsParens(true);\n        if (justNeedsOpeningParen) {\n            return true;\n        }\n    }\n    return false;\n};\nFPp.getPrevToken = function (node) {\n    node = node || this.getNode();\n    var loc = node && node.loc;\n    var tokens = loc && loc.tokens;\n    if (tokens && loc.start.token > 0) {\n        var token = tokens[loc.start.token - 1];\n        if (token) {\n            // Do not return tokens that fall outside the root subtree.\n            var rootLoc = this.getRootValue().loc;\n            if (util.comparePos(rootLoc.start, token.loc.start) <= 0) {\n                return token;\n            }\n        }\n    }\n    return null;\n};\nFPp.getNextToken = function (node) {\n    node = node || this.getNode();\n    var loc = node && node.loc;\n    var tokens = loc && loc.tokens;\n    if (tokens && loc.end.token < tokens.length) {\n        var token = tokens[loc.end.token];\n        if (token) {\n            // Do not return tokens that fall outside the root subtree.\n            var rootLoc = this.getRootValue().loc;\n            if (util.comparePos(token.loc.end, rootLoc.end) <= 0) {\n                return token;\n            }\n        }\n    }\n    return null;\n};\n// Inspired by require(\"ast-types\").NodePath.prototype.needsParens, but\n// more efficient because we're iterating backwards through a stack.\nFPp.needsParens = function (assumeExpressionContext) {\n    var node = this.getNode();\n    // This needs to come before `if (!parent) { return false }` because\n    // an object destructuring assignment requires parens for\n    // correctness even when it's the topmost expression.\n    if (node.type === \"AssignmentExpression\" &&\n        node.left.type === \"ObjectPattern\") {\n        return true;\n    }\n    var parent = this.getParentNode();\n    var name = this.getName();\n    // If the value of this path is some child of a Node and not a Node\n    // itself, then it doesn't need parentheses. Only Node objects (in fact,\n    // only Expression nodes) need parentheses.\n    if (this.getValue() !== node) {\n        return false;\n    }\n    // Only statements don't need parentheses.\n    if (n.Statement.check(node)) {\n        return false;\n    }\n    // Identifiers never need parentheses.\n    if (node.type === \"Identifier\") {\n        return false;\n    }\n    if (parent && parent.type === \"ParenthesizedExpression\") {\n        return false;\n    }\n    if (node.extra && node.extra.parenthesized) {\n        return true;\n    }\n    if (!parent)\n        return false;\n    switch (node.type) {\n        case \"UnaryExpression\":\n        case \"SpreadElement\":\n        case \"SpreadProperty\":\n            return (parent.type === \"MemberExpression\" &&\n                name === \"object\" &&\n                parent.object === node);\n        case \"BinaryExpression\":\n        case \"LogicalExpression\":\n            switch (parent.type) {\n                case \"CallExpression\":\n                    return name === \"callee\" && parent.callee === node;\n                case \"UnaryExpression\":\n                case \"SpreadElement\":\n                case \"SpreadProperty\":\n                    return true;\n                case \"MemberExpression\":\n                    return name === \"object\" && parent.object === node;\n                case \"BinaryExpression\":\n                case \"LogicalExpression\": {\n                    var po = parent.operator;\n                    var pp = PRECEDENCE[po];\n                    var no = node.operator;\n                    var np = PRECEDENCE[no];\n                    if (pp > np) {\n                        return true;\n                    }\n                    if (pp === np && name === \"right\") {\n                        assert.strictEqual(parent.right, node);\n                        return true;\n                    }\n                    break;\n                }\n                default:\n                    return false;\n            }\n            break;\n        case \"SequenceExpression\":\n            switch (parent.type) {\n                case \"ReturnStatement\":\n                    return false;\n                case \"ForStatement\":\n                    // Although parentheses wouldn't hurt around sequence expressions in\n                    // the head of for loops, traditional style dictates that e.g. i++,\n                    // j++ should not be wrapped with parentheses.\n                    return false;\n                case \"ExpressionStatement\":\n                    return name !== \"expression\";\n                default:\n                    // Otherwise err on the side of overparenthesization, adding\n                    // explicit exceptions above if this proves overzealous.\n                    return true;\n            }\n        case \"OptionalIndexedAccessType\":\n            return node.optional && parent.type === \"IndexedAccessType\";\n        case \"IntersectionTypeAnnotation\":\n        case \"UnionTypeAnnotation\":\n            return parent.type === \"NullableTypeAnnotation\";\n        case \"Literal\":\n            return (parent.type === \"MemberExpression\" &&\n                isNumber.check(node.value) &&\n                name === \"object\" &&\n                parent.object === node);\n        // Babel 6 Literal split\n        case \"NumericLiteral\":\n            return (parent.type === \"MemberExpression\" &&\n                name === \"object\" &&\n                parent.object === node);\n        case \"YieldExpression\":\n        case \"AwaitExpression\":\n        case \"AssignmentExpression\":\n        case \"ConditionalExpression\":\n            switch (parent.type) {\n                case \"UnaryExpression\":\n                case \"SpreadElement\":\n                case \"SpreadProperty\":\n                case \"BinaryExpression\":\n                case \"LogicalExpression\":\n                    return true;\n                case \"CallExpression\":\n                case \"NewExpression\":\n                    return name === \"callee\" && parent.callee === node;\n                case \"ConditionalExpression\":\n                    return name === \"test\" && parent.test === node;\n                case \"MemberExpression\":\n                    return name === \"object\" && parent.object === node;\n                default:\n                    return false;\n            }\n        case \"ArrowFunctionExpression\":\n            if (n.CallExpression.check(parent) &&\n                name === \"callee\" &&\n                parent.callee === node) {\n                return true;\n            }\n            if (n.MemberExpression.check(parent) &&\n                name === \"object\" &&\n                parent.object === node) {\n                return true;\n            }\n            if (n.TSAsExpression &&\n                n.TSAsExpression.check(parent) &&\n                name === \"expression\" &&\n                parent.expression === node) {\n                return true;\n            }\n            return isBinary(parent);\n        case \"ObjectExpression\":\n            if (parent.type === \"ArrowFunctionExpression\" &&\n                name === \"body\" &&\n                parent.body === node) {\n                return true;\n            }\n            break;\n        case \"TSAsExpression\":\n            if (parent.type === \"ArrowFunctionExpression\" &&\n                name === \"body\" &&\n                parent.body === node &&\n                node.expression.type === \"ObjectExpression\") {\n                return true;\n            }\n            break;\n        case \"CallExpression\":\n            if (name === \"declaration\" &&\n                n.ExportDefaultDeclaration.check(parent) &&\n                n.FunctionExpression.check(node.callee)) {\n                return true;\n            }\n    }\n    if (parent.type === \"NewExpression\" &&\n        name === \"callee\" &&\n        parent.callee === node) {\n        return containsCallExpression(node);\n    }\n    if (assumeExpressionContext !== true &&\n        !this.canBeFirstInStatement() &&\n        this.firstInStatement()) {\n        return true;\n    }\n    return false;\n};\nfunction isBinary(node) {\n    return n.BinaryExpression.check(node) || n.LogicalExpression.check(node);\n}\n// @ts-ignore 'isUnaryLike' is declared but its value is never read. [6133]\nfunction isUnaryLike(node) {\n    return (n.UnaryExpression.check(node) ||\n        // I considered making SpreadElement and SpreadProperty subtypes of\n        // UnaryExpression, but they're not really Expression nodes.\n        (n.SpreadElement && n.SpreadElement.check(node)) ||\n        (n.SpreadProperty && n.SpreadProperty.check(node)));\n}\nfunction containsCallExpression(node) {\n    if (n.CallExpression.check(node)) {\n        return true;\n    }\n    if (isArray.check(node)) {\n        return node.some(containsCallExpression);\n    }\n    if (n.Node.check(node)) {\n        return types.someField(node, function (_name, child) {\n            return containsCallExpression(child);\n        });\n    }\n    return false;\n}\nFPp.canBeFirstInStatement = function () {\n    var node = this.getNode();\n    if (n.FunctionExpression.check(node)) {\n        return false;\n    }\n    if (n.ObjectExpression.check(node)) {\n        return false;\n    }\n    if (n.ClassExpression.check(node)) {\n        return false;\n    }\n    return true;\n};\nFPp.firstInStatement = function () {\n    var s = this.stack;\n    var parentName, parent;\n    var childName, child;\n    for (var i = s.length - 1; i >= 0; i -= 2) {\n        if (n.Node.check(s[i])) {\n            childName = parentName;\n            child = parent;\n            parentName = s[i - 1];\n            parent = s[i];\n        }\n        if (!parent || !child) {\n            continue;\n        }\n        if (n.BlockStatement.check(parent) &&\n            parentName === \"body\" &&\n            childName === 0) {\n            assert.strictEqual(parent.body[0], child);\n            return true;\n        }\n        if (n.ExpressionStatement.check(parent) && childName === \"expression\") {\n            assert.strictEqual(parent.expression, child);\n            return true;\n        }\n        if (n.AssignmentExpression.check(parent) && childName === \"left\") {\n            assert.strictEqual(parent.left, child);\n            return true;\n        }\n        if (n.ArrowFunctionExpression.check(parent) && childName === \"body\") {\n            assert.strictEqual(parent.body, child);\n            return true;\n        }\n        // s[i + 1] and s[i + 2] represent the array between the parent\n        // SequenceExpression node and its child nodes\n        if (n.SequenceExpression.check(parent) &&\n            s[i + 1] === \"expressions\" &&\n            childName === 0) {\n            assert.strictEqual(parent.expressions[0], child);\n            continue;\n        }\n        if (n.CallExpression.check(parent) && childName === \"callee\") {\n            assert.strictEqual(parent.callee, child);\n            continue;\n        }\n        if (n.MemberExpression.check(parent) && childName === \"object\") {\n            assert.strictEqual(parent.object, child);\n            continue;\n        }\n        if (n.ConditionalExpression.check(parent) && childName === \"test\") {\n            assert.strictEqual(parent.test, child);\n            continue;\n        }\n        if (isBinary(parent) && childName === \"left\") {\n            assert.strictEqual(parent.left, child);\n            continue;\n        }\n        if (n.UnaryExpression.check(parent) &&\n            !parent.prefix &&\n            childName === \"argument\") {\n            assert.strictEqual(parent.argument, child);\n            continue;\n        }\n        return false;\n    }\n    return true;\n};\nexport default FastPath;\n", "import assert from \"assert\";\nimport * as linesModule from \"./lines.js\";\nimport * as types from \"ast-types\";\nvar Printable = types.namedTypes.Printable;\nvar Expression = types.namedTypes.Expression;\nvar ReturnStatement = types.namedTypes.ReturnStatement;\nvar SourceLocation = types.namedTypes.SourceLocation;\nimport { comparePos, copyPos, getUnionOfKeys } from \"./util.js\";\nimport FastPath from \"./fast-path.js\";\nvar isObject = types.builtInTypes.object;\nvar isArray = types.builtInTypes.array;\nvar isString = types.builtInTypes.string;\nvar riskyAdjoiningCharExp = /[0-9a-z_$]/i;\nvar Patcher = function Patcher(lines) {\n    assert.ok(this instanceof Patcher);\n    assert.ok(lines instanceof linesModule.Lines);\n    var self = this, replacements = [];\n    self.replace = function (loc, lines) {\n        if (isString.check(lines))\n            lines = linesModule.fromString(lines);\n        replacements.push({\n            lines: lines,\n            start: loc.start,\n            end: loc.end,\n        });\n    };\n    self.get = function (loc) {\n        // If no location is provided, return the complete Lines object.\n        loc = loc || {\n            start: { line: 1, column: 0 },\n            end: { line: lines.length, column: lines.getLineLength(lines.length) },\n        };\n        var sliceFrom = loc.start, toConcat = [];\n        function pushSlice(from, to) {\n            assert.ok(comparePos(from, to) <= 0);\n            toConcat.push(lines.slice(from, to));\n        }\n        replacements\n            .sort(function (a, b) { return comparePos(a.start, b.start); })\n            .forEach(function (rep) {\n            if (comparePos(sliceFrom, rep.start) > 0) {\n                // Ignore nested replacement ranges.\n            }\n            else {\n                pushSlice(sliceFrom, rep.start);\n                toConcat.push(rep.lines);\n                sliceFrom = rep.end;\n            }\n        });\n        pushSlice(sliceFrom, loc.end);\n        return linesModule.concat(toConcat);\n    };\n};\nexport { Patcher };\nvar Pp = Patcher.prototype;\nPp.tryToReprintComments = function (newNode, oldNode, print) {\n    var patcher = this;\n    if (!newNode.comments && !oldNode.comments) {\n        // We were (vacuously) able to reprint all the comments!\n        return true;\n    }\n    var newPath = FastPath.from(newNode);\n    var oldPath = FastPath.from(oldNode);\n    newPath.stack.push(\"comments\", getSurroundingComments(newNode));\n    oldPath.stack.push(\"comments\", getSurroundingComments(oldNode));\n    var reprints = [];\n    var ableToReprintComments = findArrayReprints(newPath, oldPath, reprints);\n    // No need to pop anything from newPath.stack or oldPath.stack, since\n    // newPath and oldPath are fresh local variables.\n    if (ableToReprintComments && reprints.length > 0) {\n        reprints.forEach(function (reprint) {\n            var oldComment = reprint.oldPath.getValue();\n            assert.ok(oldComment.leading || oldComment.trailing);\n            patcher.replace(oldComment.loc, \n            // Comments can't have .comments, so it doesn't matter whether we\n            // print with comments or without.\n            print(reprint.newPath).indentTail(oldComment.loc.indent));\n        });\n    }\n    return ableToReprintComments;\n};\n// Get all comments that are either leading or trailing, ignoring any\n// comments that occur inside node.loc. Returns an empty array for nodes\n// with no leading or trailing comments.\nfunction getSurroundingComments(node) {\n    var result = [];\n    if (node.comments && node.comments.length > 0) {\n        node.comments.forEach(function (comment) {\n            if (comment.leading || comment.trailing) {\n                result.push(comment);\n            }\n        });\n    }\n    return result;\n}\nPp.deleteComments = function (node) {\n    if (!node.comments) {\n        return;\n    }\n    var patcher = this;\n    node.comments.forEach(function (comment) {\n        if (comment.leading) {\n            // Delete leading comments along with any trailing whitespace they\n            // might have.\n            patcher.replace({\n                start: comment.loc.start,\n                end: node.loc.lines.skipSpaces(comment.loc.end, false, false),\n            }, \"\");\n        }\n        else if (comment.trailing) {\n            // Delete trailing comments along with any leading whitespace they\n            // might have.\n            patcher.replace({\n                start: node.loc.lines.skipSpaces(comment.loc.start, true, false),\n                end: comment.loc.end,\n            }, \"\");\n        }\n    });\n};\nexport function getReprinter(path) {\n    assert.ok(path instanceof FastPath);\n    // Make sure that this path refers specifically to a Node, rather than\n    // some non-Node subproperty of a Node.\n    var node = path.getValue();\n    if (!Printable.check(node))\n        return;\n    var orig = node.original;\n    var origLoc = orig && orig.loc;\n    var lines = origLoc && origLoc.lines;\n    var reprints = [];\n    if (!lines || !findReprints(path, reprints))\n        return;\n    return function (print) {\n        var patcher = new Patcher(lines);\n        reprints.forEach(function (reprint) {\n            var newNode = reprint.newPath.getValue();\n            var oldNode = reprint.oldPath.getValue();\n            SourceLocation.assert(oldNode.loc, true);\n            var needToPrintNewPathWithComments = !patcher.tryToReprintComments(newNode, oldNode, print);\n            if (needToPrintNewPathWithComments) {\n                // Since we were not able to preserve all leading/trailing\n                // comments, we delete oldNode's comments, print newPath with\n                // comments, and then patch the resulting lines where oldNode used\n                // to be.\n                patcher.deleteComments(oldNode);\n            }\n            var newLines = print(reprint.newPath, {\n                includeComments: needToPrintNewPathWithComments,\n                // If the oldNode we're replacing already had parentheses, we may\n                // not need to print the new node with any extra parentheses,\n                // because the existing parentheses will suffice. However, if the\n                // newNode has a different type than the oldNode, let the printer\n                // decide if reprint.newPath needs parentheses, as usual.\n                avoidRootParens: oldNode.type === newNode.type && reprint.oldPath.hasParens(),\n            }).indentTail(oldNode.loc.indent);\n            var nls = needsLeadingSpace(lines, oldNode.loc, newLines);\n            var nts = needsTrailingSpace(lines, oldNode.loc, newLines);\n            // If we try to replace the argument of a ReturnStatement like\n            // return\"asdf\" with e.g. a literal null expression, we run the risk\n            // of ending up with returnnull, so we need to add an extra leading\n            // space in situations where that might happen. Likewise for\n            // \"asdf\"in obj. See #170.\n            if (nls || nts) {\n                var newParts = [];\n                nls && newParts.push(\" \");\n                newParts.push(newLines);\n                nts && newParts.push(\" \");\n                newLines = linesModule.concat(newParts);\n            }\n            patcher.replace(oldNode.loc, newLines);\n        });\n        // Recall that origLoc is the .loc of an ancestor node that is\n        // guaranteed to contain all the reprinted nodes and comments.\n        var patchedLines = patcher.get(origLoc).indentTail(-orig.loc.indent);\n        if (path.needsParens()) {\n            return linesModule.concat([\"(\", patchedLines, \")\"]);\n        }\n        return patchedLines;\n    };\n}\n// If the last character before oldLoc and the first character of newLines\n// are both identifier characters, they must be separated by a space,\n// otherwise they will most likely get fused together into a single token.\nfunction needsLeadingSpace(oldLines, oldLoc, newLines) {\n    var posBeforeOldLoc = copyPos(oldLoc.start);\n    // The character just before the location occupied by oldNode.\n    var charBeforeOldLoc = oldLines.prevPos(posBeforeOldLoc) && oldLines.charAt(posBeforeOldLoc);\n    // First character of the reprinted node.\n    var newFirstChar = newLines.charAt(newLines.firstPos());\n    return (charBeforeOldLoc &&\n        riskyAdjoiningCharExp.test(charBeforeOldLoc) &&\n        newFirstChar &&\n        riskyAdjoiningCharExp.test(newFirstChar));\n}\n// If the last character of newLines and the first character after oldLoc\n// are both identifier characters, they must be separated by a space,\n// otherwise they will most likely get fused together into a single token.\nfunction needsTrailingSpace(oldLines, oldLoc, newLines) {\n    // The character just after the location occupied by oldNode.\n    var charAfterOldLoc = oldLines.charAt(oldLoc.end);\n    var newLastPos = newLines.lastPos();\n    // Last character of the reprinted node.\n    var newLastChar = newLines.prevPos(newLastPos) && newLines.charAt(newLastPos);\n    return (newLastChar &&\n        riskyAdjoiningCharExp.test(newLastChar) &&\n        charAfterOldLoc &&\n        riskyAdjoiningCharExp.test(charAfterOldLoc));\n}\nfunction findReprints(newPath, reprints) {\n    var newNode = newPath.getValue();\n    Printable.assert(newNode);\n    var oldNode = newNode.original;\n    Printable.assert(oldNode);\n    assert.deepEqual(reprints, []);\n    if (newNode.type !== oldNode.type) {\n        return false;\n    }\n    var oldPath = new FastPath(oldNode);\n    var canReprint = findChildReprints(newPath, oldPath, reprints);\n    if (!canReprint) {\n        // Make absolutely sure the calling code does not attempt to reprint\n        // any nodes.\n        reprints.length = 0;\n    }\n    return canReprint;\n}\nfunction findAnyReprints(newPath, oldPath, reprints) {\n    var newNode = newPath.getValue();\n    var oldNode = oldPath.getValue();\n    if (newNode === oldNode)\n        return true;\n    if (isArray.check(newNode))\n        return findArrayReprints(newPath, oldPath, reprints);\n    if (isObject.check(newNode))\n        return findObjectReprints(newPath, oldPath, reprints);\n    return false;\n}\nfunction findArrayReprints(newPath, oldPath, reprints) {\n    var newNode = newPath.getValue();\n    var oldNode = oldPath.getValue();\n    if (newNode === oldNode ||\n        newPath.valueIsDuplicate() ||\n        oldPath.valueIsDuplicate()) {\n        return true;\n    }\n    isArray.assert(newNode);\n    var len = newNode.length;\n    if (!(isArray.check(oldNode) && oldNode.length === len))\n        return false;\n    for (var i = 0; i < len; ++i) {\n        newPath.stack.push(i, newNode[i]);\n        oldPath.stack.push(i, oldNode[i]);\n        var canReprint = findAnyReprints(newPath, oldPath, reprints);\n        newPath.stack.length -= 2;\n        oldPath.stack.length -= 2;\n        if (!canReprint) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction findObjectReprints(newPath, oldPath, reprints) {\n    var newNode = newPath.getValue();\n    isObject.assert(newNode);\n    if (newNode.original === null) {\n        // If newNode.original node was set to null, reprint the node.\n        return false;\n    }\n    var oldNode = oldPath.getValue();\n    if (!isObject.check(oldNode))\n        return false;\n    if (newNode === oldNode ||\n        newPath.valueIsDuplicate() ||\n        oldPath.valueIsDuplicate()) {\n        return true;\n    }\n    if (Printable.check(newNode)) {\n        if (!Printable.check(oldNode)) {\n            return false;\n        }\n        var newParentNode = newPath.getParentNode();\n        var oldParentNode = oldPath.getParentNode();\n        if (oldParentNode !== null &&\n            oldParentNode.type === \"FunctionTypeAnnotation\" &&\n            newParentNode !== null &&\n            newParentNode.type === \"FunctionTypeAnnotation\") {\n            var oldNeedsParens = oldParentNode.params.length !== 1 || !!oldParentNode.params[0].name;\n            var newNeedParens = newParentNode.params.length !== 1 || !!newParentNode.params[0].name;\n            if (!oldNeedsParens && newNeedParens) {\n                return false;\n            }\n        }\n        // Here we need to decide whether the reprinted code for newNode is\n        // appropriate for patching into the location of oldNode.\n        if (newNode.type === oldNode.type) {\n            var childReprints = [];\n            if (findChildReprints(newPath, oldPath, childReprints)) {\n                reprints.push.apply(reprints, childReprints);\n            }\n            else if (oldNode.loc) {\n                // If we have no .loc information for oldNode, then we won't be\n                // able to reprint it.\n                reprints.push({\n                    oldPath: oldPath.copy(),\n                    newPath: newPath.copy(),\n                });\n            }\n            else {\n                return false;\n            }\n            return true;\n        }\n        if (Expression.check(newNode) &&\n            Expression.check(oldNode) &&\n            // If we have no .loc information for oldNode, then we won't be\n            // able to reprint it.\n            oldNode.loc) {\n            // If both nodes are subtypes of Expression, then we should be able\n            // to fill the location occupied by the old node with code printed\n            // for the new node with no ill consequences.\n            reprints.push({\n                oldPath: oldPath.copy(),\n                newPath: newPath.copy(),\n            });\n            return true;\n        }\n        // The nodes have different types, and at least one of the types is\n        // not a subtype of the Expression type, so we cannot safely assume\n        // the nodes are syntactically interchangeable.\n        return false;\n    }\n    return findChildReprints(newPath, oldPath, reprints);\n}\nfunction findChildReprints(newPath, oldPath, reprints) {\n    var newNode = newPath.getValue();\n    var oldNode = oldPath.getValue();\n    isObject.assert(newNode);\n    isObject.assert(oldNode);\n    if (newNode.original === null) {\n        // If newNode.original node was set to null, reprint the node.\n        return false;\n    }\n    // If this node needs parentheses and will not be wrapped with\n    // parentheses when reprinted, then return false to skip reprinting and\n    // let it be printed generically.\n    if (newPath.needsParens() && !oldPath.hasParens()) {\n        return false;\n    }\n    var keys = getUnionOfKeys(oldNode, newNode);\n    if (oldNode.type === \"File\" || newNode.type === \"File\") {\n        // Don't bother traversing file.tokens, an often very large array\n        // returned by Babylon, and useless for our purposes.\n        delete keys.tokens;\n    }\n    // Don't bother traversing .loc objects looking for reprintable nodes.\n    delete keys.loc;\n    var originalReprintCount = reprints.length;\n    for (var k in keys) {\n        if (k.charAt(0) === \"_\") {\n            // Ignore \"private\" AST properties added by e.g. Babel plugins and\n            // parsers like Babylon.\n            continue;\n        }\n        newPath.stack.push(k, types.getFieldValue(newNode, k));\n        oldPath.stack.push(k, types.getFieldValue(oldNode, k));\n        var canReprint = findAnyReprints(newPath, oldPath, reprints);\n        newPath.stack.length -= 2;\n        oldPath.stack.length -= 2;\n        if (!canReprint) {\n            return false;\n        }\n    }\n    // Return statements might end up running into ASI issues due to\n    // comments inserted deep within the tree, so reprint them if anything\n    // changed within them.\n    if (ReturnStatement.check(newPath.getNode()) &&\n        reprints.length > originalReprintCount) {\n        return false;\n    }\n    return true;\n}\n", "import * as recast from 'recast';\nimport { parse, print } from 'recast';\nimport { promises } from 'node:fs';\nimport * as babelParser from '@babel/parser';\n\nlet _babelParser;\nfunction getBabelParser() {\n  if (_babelParser) {\n    return _babelParser;\n  }\n  const babelOptions = _getBabelOptions();\n  _babelParser = {\n    parse(source, options) {\n      return babelParser.parse(source, {\n        ...babelOptions,\n        ...options\n      });\n    }\n  };\n  return _babelParser;\n}\nfunction _getBabelOptions() {\n  return {\n    sourceType: \"module\",\n    strictMode: false,\n    allowImportExportEverywhere: true,\n    allowReturnOutsideFunction: true,\n    startLine: 1,\n    tokens: true,\n    plugins: [\n      \"asyncGenerators\",\n      \"bigInt\",\n      \"classPrivateMethods\",\n      \"classPrivateProperties\",\n      \"classProperties\",\n      \"classStaticBlock\",\n      \"decimal\",\n      \"decorators-legacy\",\n      \"doExpressions\",\n      \"dynamicImport\",\n      \"exportDefaultFrom\",\n      \"exportExtensions\",\n      \"exportNamespaceFrom\",\n      \"functionBind\",\n      \"functionSent\",\n      \"importAssertions\",\n      \"importMeta\",\n      \"nullishCoalescingOperator\",\n      \"numericSeparator\",\n      \"objectRestSpread\",\n      \"optionalCatchBinding\",\n      \"optionalChaining\",\n      [\n        \"pipelineOperator\",\n        {\n          proposal: \"minimal\"\n        }\n      ],\n      [\n        \"recordAndTuple\",\n        {\n          syntaxType: \"hash\"\n        }\n      ],\n      \"throwExpressions\",\n      \"topLevelAwait\",\n      \"v8intrinsic\",\n      \"jsx\",\n      \"typescript\"\n    ]\n  };\n}\n\nclass MagicastError extends Error {\n  constructor(message, options) {\n    super(\"\");\n    this.name = \"MagicastError\";\n    this.rawMessage = message;\n    this.options = options;\n    if (options?.ast && options?.code && options.ast.loc) {\n      const { line, column } = options.ast.loc.start;\n      const lines = options.code.split(\"\\n\");\n      const start = Math.max(0, line - 3);\n      const end = Math.min(lines.length, line + 3);\n      const codeFrame = lines.slice(start, end).map((lineCode, i) => {\n        const number = (start + i + 1).toString().padStart(3, \" \");\n        lineCode = `${number} | ${lineCode}`;\n        if (start + i === line - 1) {\n          lineCode += `\n${\" \".repeat(6 + column)}^`;\n        }\n        return lineCode;\n      });\n      message += `\n\n${codeFrame.join(\"\\n\")}\n`;\n    }\n    this.message = message;\n  }\n}\n\nconst LITERALS_AST = /* @__PURE__ */ new Set([\n  \"Literal\",\n  \"StringLiteral\",\n  \"NumericLiteral\",\n  \"BooleanLiteral\",\n  \"NullLiteral\",\n  \"RegExpLiteral\",\n  \"BigIntLiteral\"\n]);\nconst LITERALS_TYPEOF = /* @__PURE__ */ new Set([\n  \"string\",\n  \"number\",\n  \"boolean\",\n  \"bigint\",\n  \"symbol\",\n  \"undefined\"\n]);\nconst b$4 = recast.types.builders;\nfunction isValidPropName(name) {\n  return /^[$A-Z_a-z][\\w$]*$/.test(name);\n}\nconst PROXY_KEY = \"__magicast_proxy\";\nfunction literalToAst(value, seen = /* @__PURE__ */ new Set()) {\n  if (value === void 0) {\n    return b$4.identifier(\"undefined\");\n  }\n  if (value === null) {\n    return b$4.literal(null);\n  }\n  if (LITERALS_TYPEOF.has(typeof value)) {\n    return b$4.literal(value);\n  }\n  if (seen.has(value)) {\n    throw new MagicastError(\"Can not serialize circular reference\");\n  }\n  seen.add(value);\n  if (value[PROXY_KEY]) {\n    return value.$ast;\n  }\n  if (value instanceof RegExp) {\n    const regex = b$4.regExpLiteral(value.source, value.flags);\n    delete regex.extra.raw;\n    return regex;\n  }\n  if (value instanceof Set) {\n    return b$4.newExpression(b$4.identifier(\"Set\"), [\n      b$4.arrayExpression([...value].map((n) => literalToAst(n, seen)))\n    ]);\n  }\n  if (value instanceof Date) {\n    return b$4.newExpression(b$4.identifier(\"Date\"), [\n      b$4.literal(value.toISOString())\n    ]);\n  }\n  if (value instanceof Map) {\n    return b$4.newExpression(b$4.identifier(\"Map\"), [\n      b$4.arrayExpression(\n        [...value].map(([key, value2]) => {\n          return b$4.arrayExpression([\n            literalToAst(key, seen),\n            literalToAst(value2, seen)\n          ]);\n        })\n      )\n    ]);\n  }\n  if (Array.isArray(value)) {\n    return b$4.arrayExpression(\n      value.map((n) => literalToAst(n, seen))\n    );\n  }\n  if (typeof value === \"object\") {\n    return b$4.objectExpression(\n      Object.entries(value).map(([key, value2]) => {\n        return b$4.property(\n          \"init\",\n          b$4.identifier(key),\n          literalToAst(value2, seen)\n        );\n      })\n    );\n  }\n  return b$4.literal(value);\n}\nfunction makeProxyUtils(node, extend = {}) {\n  const obj = extend;\n  obj[PROXY_KEY] = true;\n  obj.$ast = node;\n  obj.$type || (obj.$type = \"object\");\n  return obj;\n}\nconst propertyDescriptor = {\n  enumerable: true,\n  configurable: true\n};\nfunction createProxy(node, extend, handler) {\n  const utils = makeProxyUtils(node, extend);\n  return new Proxy(\n    {},\n    {\n      ownKeys() {\n        return Object.keys(utils).filter(\n          (i) => i !== PROXY_KEY && !i.startsWith(\"$\")\n        );\n      },\n      getOwnPropertyDescriptor() {\n        return propertyDescriptor;\n      },\n      ...handler,\n      get(target, key, receiver) {\n        if (key in utils) {\n          return utils[key];\n        }\n        if (handler.get) {\n          return handler.get(target, key, receiver);\n        }\n      },\n      set(target, key, value, receiver) {\n        if (key in utils) {\n          utils[key] = value;\n          return true;\n        }\n        if (handler.set) {\n          return handler.set(target, key, value, receiver);\n        }\n        return false;\n      }\n    }\n  );\n}\n\nconst b$3 = recast.types.builders;\nconst _importProxyCache = /* @__PURE__ */ new WeakMap();\nfunction creatImportProxy(node, specifier, root) {\n  if (_importProxyCache.has(specifier)) {\n    return _importProxyCache.get(specifier);\n  }\n  const proxy = createProxy(\n    specifier,\n    {\n      get $declaration() {\n        return node;\n      },\n      get imported() {\n        if (specifier.type === \"ImportDefaultSpecifier\") {\n          return \"default\";\n        }\n        if (specifier.type === \"ImportNamespaceSpecifier\") {\n          return \"*\";\n        }\n        if (specifier.imported.type === \"Identifier\") {\n          return specifier.imported.name;\n        }\n        return specifier.imported.value;\n      },\n      set imported(value) {\n        if (specifier.type !== \"ImportSpecifier\") {\n          throw new MagicastError(\n            \"Changing import name is not yet implemented\"\n          );\n        }\n        if (specifier.imported.type === \"Identifier\") {\n          specifier.imported.name = value;\n        } else {\n          specifier.imported.value = value;\n        }\n      },\n      get local() {\n        return specifier.local.name;\n      },\n      set local(value) {\n        specifier.local.name = value;\n      },\n      get from() {\n        return node.source.value;\n      },\n      set from(value) {\n        if (value === node.source.value) {\n          return;\n        }\n        node.specifiers = node.specifiers.filter((s) => s !== specifier);\n        if (node.specifiers.length === 0) {\n          root.body = root.body.filter((s) => s !== node);\n        }\n        const declaration = root.body.find(\n          (i) => i.type === \"ImportDeclaration\" && i.source.value === value\n        );\n        if (!declaration) {\n          root.body.unshift(\n            b$3.importDeclaration(\n              [specifier],\n              b$3.stringLiteral(value)\n            )\n          );\n        } else {\n          declaration.specifiers.push(specifier);\n        }\n      },\n      toJSON() {\n        return {\n          imported: this.imported,\n          local: this.local,\n          from: this.from\n        };\n      }\n    },\n    {\n      ownKeys() {\n        return [\"imported\", \"local\", \"from\", \"toJSON\"];\n      }\n    }\n  );\n  _importProxyCache.set(specifier, proxy);\n  return proxy;\n}\nfunction createImportsProxy(root, mod) {\n  const getAllImports = () => {\n    const imports = [];\n    for (const n of root.body) {\n      if (n.type === \"ImportDeclaration\") {\n        for (const specifier of n.specifiers) {\n          imports.push(creatImportProxy(n, specifier, root));\n        }\n      }\n    }\n    return imports;\n  };\n  const updateImport = (key, value) => {\n    const imports = getAllImports();\n    const item = imports.find((i) => i.local === key);\n    const local = value.local || key;\n    if (item) {\n      item.imported = value.imported;\n      item.local = local;\n      item.from = value.from;\n      return true;\n    }\n    const specifier = value.imported === \"default\" ? b$3.importDefaultSpecifier(b$3.identifier(local)) : value.imported === \"*\" ? b$3.importNamespaceSpecifier(b$3.identifier(local)) : b$3.importSpecifier(b$3.identifier(value.imported), b$3.identifier(local));\n    const declaration = imports.find(\n      (i) => i.from === value.from\n    )?.$declaration;\n    if (!declaration) {\n      root.body.unshift(\n        b$3.importDeclaration([specifier], b$3.stringLiteral(value.from))\n      );\n    } else {\n      declaration.specifiers.push(specifier);\n    }\n    return true;\n  };\n  const removeImport = (key) => {\n    const item = getAllImports().find((i) => i.local === key);\n    if (!item) {\n      return false;\n    }\n    const node = item.$declaration;\n    const specifier = item.$ast;\n    node.specifiers = node.specifiers.filter((s) => s !== specifier);\n    if (node.specifiers.length === 0) {\n      root.body = root.body.filter((n) => n !== node);\n    }\n    return true;\n  };\n  const proxy = createProxy(\n    root,\n    {\n      $type: \"imports\",\n      $add(item) {\n        proxy[item.local || item.imported] = item;\n      },\n      get $items() {\n        return getAllImports();\n      },\n      toJSON() {\n        return getAllImports().reduce((acc, i) => {\n          acc[i.local] = i;\n          return acc;\n        }, {});\n      }\n    },\n    {\n      get(_, prop) {\n        return getAllImports().find((i) => i.local === prop);\n      },\n      set(_, prop, value) {\n        return updateImport(prop, value);\n      },\n      deleteProperty(_, prop) {\n        return removeImport(prop);\n      },\n      ownKeys() {\n        return getAllImports().map((i) => i.local);\n      },\n      has(_, prop) {\n        return getAllImports().some((i) => i.local === prop);\n      }\n    }\n  );\n  return proxy;\n}\n\nfunction proxifyArrayElements(node, elements, mod) {\n  const getItem = (key) => {\n    return elements[key];\n  };\n  const replaceItem = (key, value) => {\n    elements[key] = value;\n  };\n  return createProxy(\n    node,\n    {\n      $type: \"array\",\n      push(value) {\n        elements.push(literalToAst(value));\n      },\n      pop() {\n        return proxify(elements.pop(), mod);\n      },\n      unshift(value) {\n        elements.unshift(literalToAst(value));\n      },\n      shift() {\n        return proxify(elements.shift(), mod);\n      },\n      splice(start, deleteCount, ...items) {\n        const deleted = elements.splice(\n          start,\n          deleteCount,\n          ...items.map((n) => literalToAst(n))\n        );\n        return deleted.map((n) => proxify(n, mod));\n      },\n      find(predicate) {\n        return elements.map((n) => proxify(n, mod)).find(predicate);\n      },\n      findIndex(predicate) {\n        return elements.map((n) => proxify(n, mod)).findIndex(predicate);\n      },\n      includes(value) {\n        return elements.map((n) => proxify(n, mod)).includes(value);\n      },\n      toJSON() {\n        return elements.map((n) => proxify(n, mod));\n      }\n    },\n    {\n      get(_, key) {\n        if (key === \"length\") {\n          return elements.length;\n        }\n        if (key === Symbol.iterator) {\n          return function* () {\n            for (const item of elements) {\n              yield proxify(item, mod);\n            }\n          };\n        }\n        if (typeof key === \"symbol\") {\n          return;\n        }\n        const index = +key;\n        if (Number.isNaN(index)) {\n          return;\n        }\n        const prop = getItem(index);\n        if (prop) {\n          return proxify(prop, mod);\n        }\n      },\n      set(_, key, value) {\n        if (typeof key === \"symbol\") {\n          return false;\n        }\n        const index = +key;\n        if (Number.isNaN(index)) {\n          return false;\n        }\n        replaceItem(index, literalToAst(value));\n        return true;\n      },\n      deleteProperty(_, key) {\n        if (typeof key === \"symbol\") {\n          return false;\n        }\n        const index = +key;\n        if (Number.isNaN(index)) {\n          return false;\n        }\n        elements[index] = literalToAst(void 0);\n        return true;\n      },\n      ownKeys() {\n        return [\"length\", ...elements.map((_, i) => i.toString())];\n      }\n    }\n  );\n}\nfunction proxifyArray(node, mod) {\n  if (!(\"elements\" in node)) {\n    return void 0;\n  }\n  return proxifyArrayElements(node, node.elements, mod);\n}\n\nfunction proxifyFunctionCall(node, mod) {\n  if (node.type !== \"CallExpression\") {\n    throw new MagicastError(\"Not a function call\");\n  }\n  function stringifyExpression(node2) {\n    if (node2.type === \"Identifier\") {\n      return node2.name;\n    }\n    if (node2.type === \"MemberExpression\") {\n      return `${stringifyExpression(node2.object)}.${stringifyExpression(\n        node2.property\n      )}`;\n    }\n    throw new MagicastError(\"Not implemented\");\n  }\n  const argumentsProxy = proxifyArrayElements(node, node.arguments, mod);\n  return createProxy(\n    node,\n    {\n      $type: \"function-call\",\n      $callee: stringifyExpression(node.callee),\n      $args: argumentsProxy\n    },\n    {}\n  );\n}\n\nconst b$2 = recast.types.builders;\nfunction proxifyObject(node, mod) {\n  if (!(\"properties\" in node)) {\n    return void 0;\n  }\n  const getProp = (key) => {\n    for (const prop of node.properties) {\n      if (\"key\" in prop && \"name\" in prop.key && prop.key.name === key) {\n        return prop.value;\n      }\n      if (prop.type === \"ObjectProperty\" && prop.key.type === \"StringLiteral\" && prop.key.value === key) {\n        return prop.value.value;\n      }\n    }\n  };\n  const getPropName = (prop, throwError = false) => {\n    if (\"key\" in prop && \"name\" in prop.key) {\n      return prop.key.name;\n    }\n    if (prop.type === \"ObjectProperty\" && prop.key.type === \"StringLiteral\") {\n      return prop.key.value;\n    }\n    if (throwError) {\n      throw new MagicastError(`Casting \"${prop.type}\" is not supported`, {\n        ast: prop,\n        code: mod?.$code\n      });\n    }\n  };\n  const replaceOrAddProp = (key, value) => {\n    const prop = node.properties.find(\n      (prop2) => getPropName(prop2) === key\n    );\n    if (prop) {\n      prop.value = value;\n    } else if (isValidPropName(key)) {\n      node.properties.push({\n        type: \"Property\",\n        key: {\n          type: \"Identifier\",\n          name: key\n        },\n        value\n      });\n    } else {\n      node.properties.push({\n        type: \"ObjectProperty\",\n        key: b$2.stringLiteral(key),\n        value\n      });\n    }\n  };\n  return createProxy(\n    node,\n    {\n      $type: \"object\",\n      toJSON() {\n        return node.properties.reduce((acc, prop) => {\n          if (\"key\" in prop && \"name\" in prop.key) {\n            acc[prop.key.name] = proxify(prop.value, mod);\n          }\n          return acc;\n        }, {});\n      }\n    },\n    {\n      get(_, key) {\n        const prop = getProp(key);\n        if (prop) {\n          return proxify(prop, mod);\n        }\n      },\n      set(_, key, value) {\n        if (typeof key !== \"string\") {\n          key = String(key);\n        }\n        replaceOrAddProp(key, literalToAst(value));\n        return true;\n      },\n      deleteProperty(_, key) {\n        if (typeof key !== \"string\") {\n          key = String(key);\n        }\n        const index = node.properties.findIndex(\n          (prop) => \"key\" in prop && \"name\" in prop.key && prop.key.name === key\n        );\n        if (index !== -1) {\n          node.properties.splice(index, 1);\n        }\n        return true;\n      },\n      ownKeys() {\n        return node.properties.map((prop) => getPropName(prop, true)).filter(Boolean);\n      }\n    }\n  );\n}\n\nfunction proxifyNewExpression(node, mod) {\n  if (node.type !== \"NewExpression\") {\n    throw new MagicastError(\"Not a new expression\");\n  }\n  function stringifyExpression(node2) {\n    if (node2.type === \"Identifier\") {\n      return node2.name;\n    }\n    if (node2.type === \"MemberExpression\") {\n      return `${stringifyExpression(node2.object)}.${stringifyExpression(\n        node2.property\n      )}`;\n    }\n    throw new MagicastError(\"Not implemented\");\n  }\n  const argumentsProxy = proxifyArrayElements(node, node.arguments, mod);\n  return createProxy(\n    node,\n    {\n      $type: \"new-expression\",\n      $callee: stringifyExpression(node.callee),\n      $args: argumentsProxy\n    },\n    {}\n  );\n}\n\nfunction proxifyIdentifier(node) {\n  if (node.type !== \"Identifier\") {\n    throw new MagicastError(\"Not an identifier\");\n  }\n  return createProxy(\n    node,\n    {\n      $type: \"identifier\",\n      $name: node.name\n    },\n    {}\n  );\n}\n\nconst _cache = /* @__PURE__ */ new WeakMap();\nfunction proxify(node, mod) {\n  if (LITERALS_TYPEOF.has(typeof node)) {\n    return node;\n  }\n  if (LITERALS_AST.has(node.type)) {\n    return node.value;\n  }\n  if (_cache.has(node)) {\n    return _cache.get(node);\n  }\n  let proxy;\n  switch (node.type) {\n    case \"ObjectExpression\": {\n      proxy = proxifyObject(node, mod);\n      break;\n    }\n    case \"ArrayExpression\": {\n      proxy = proxifyArray(node, mod);\n      break;\n    }\n    case \"CallExpression\": {\n      proxy = proxifyFunctionCall(node, mod);\n      break;\n    }\n    case \"NewExpression\": {\n      proxy = proxifyNewExpression(node, mod);\n      break;\n    }\n    case \"Identifier\": {\n      proxy = proxifyIdentifier(node);\n      break;\n    }\n    default:\n      throw new MagicastError(`Casting \"${node.type}\" is not supported`, {\n        ast: node,\n        code: mod?.$code\n      });\n  }\n  _cache.set(node, proxy);\n  return proxy;\n}\n\nconst b$1 = recast.types.builders;\nfunction createExportsProxy(root, mod) {\n  const findExport = (key) => {\n    const type = key === \"default\" ? \"ExportDefaultDeclaration\" : \"ExportNamedDeclaration\";\n    for (const n of root.body) {\n      if (n.type === type) {\n        if (key === \"default\") {\n          return n.declaration;\n        }\n        if (n.declaration && \"declarations\" in n.declaration) {\n          const dec = n.declaration.declarations[0];\n          if (\"name\" in dec.id && dec.id.name === key) {\n            return dec.init;\n          }\n        }\n      }\n    }\n  };\n  const updateOrAddExport = (key, value) => {\n    const type = key === \"default\" ? \"ExportDefaultDeclaration\" : \"ExportNamedDeclaration\";\n    const node = literalToAst(value);\n    for (const n of root.body) {\n      if (n.type === type) {\n        if (key === \"default\") {\n          n.declaration = node;\n          return;\n        }\n        if (n.declaration && \"declarations\" in n.declaration) {\n          const dec = n.declaration.declarations[0];\n          if (\"name\" in dec.id && dec.id.name === key) {\n            dec.init = node;\n            return;\n          }\n        }\n      }\n    }\n    root.body.push(\n      key === \"default\" ? b$1.exportDefaultDeclaration(node) : b$1.exportNamedDeclaration(\n        b$1.variableDeclaration(\"const\", [\n          b$1.variableDeclarator(b$1.identifier(key), node)\n        ])\n      )\n    );\n  };\n  return createProxy(\n    root,\n    {\n      $type: \"exports\"\n    },\n    {\n      get(_, prop) {\n        const node = findExport(prop);\n        if (node) {\n          return proxify(node, mod);\n        }\n      },\n      set(_, prop, value) {\n        updateOrAddExport(prop, value);\n        return true;\n      },\n      ownKeys() {\n        return root.body.flatMap((i) => {\n          if (i.type === \"ExportDefaultDeclaration\") {\n            return [\"default\"];\n          }\n          if (i.type === \"ExportNamedDeclaration\" && i.declaration && \"declarations\" in i.declaration) {\n            return i.declaration.declarations.map(\n              (d) => \"name\" in d.id ? d.id.name : \"\"\n            );\n          }\n          return [];\n        }).filter(Boolean);\n      },\n      deleteProperty(_, prop) {\n        const type = prop === \"default\" ? \"ExportDefaultDeclaration\" : \"ExportNamedDeclaration\";\n        for (let i = 0; i < root.body.length; i++) {\n          const n = root.body[i];\n          if (n.type === type) {\n            if (prop === \"default\") {\n              root.body.splice(i, 1);\n              return true;\n            }\n            if (n.declaration && \"declarations\" in n.declaration) {\n              const dec = n.declaration.declarations[0];\n              if (\"name\" in dec.id && dec.id.name === prop) {\n                root.body.splice(i, 1);\n                return true;\n              }\n            }\n          }\n        }\n        return false;\n      }\n    }\n  );\n}\n\nfunction proxifyModule(ast, code) {\n  const root = ast.program;\n  if (root.type !== \"Program\") {\n    throw new MagicastError(`Cannot proxify ${ast.type} as module`);\n  }\n  const util = {\n    $code: code,\n    $type: \"module\"\n  };\n  const mod = createProxy(root, util, {\n    ownKeys() {\n      return [\"imports\", \"exports\", \"generate\"];\n    }\n  });\n  util.exports = createExportsProxy(root, mod);\n  util.imports = createImportsProxy(root);\n  util.generate = (options) => generateCode(mod, options);\n  return mod;\n}\n\nfunction detectCodeFormat(code, userStyles = {}) {\n  const detect = {\n    wrapColumn: userStyles.wrapColumn === void 0,\n    indent: userStyles.tabWidth === void 0 || userStyles.useTabs === void 0,\n    quote: userStyles.quote === void 0,\n    arrowParens: userStyles.arrowParensAlways === void 0,\n    trailingComma: userStyles.trailingComma === void 0\n  };\n  let codeIndent = 2;\n  let tabUsages = 0;\n  let semiUsages = 0;\n  let maxLineLength = 0;\n  let multiLineTrailingCommaUsages = 0;\n  const syntaxDetectRegex = /(?<doubleQuote>\"[^\"]+\")|(?<singleQuote>'[^']+')|(?<singleParam>\\([^),]+\\)\\s*=>)|(?<trailingComma>,\\s*[\\]}])/g;\n  const syntaxUsages = {\n    doubleQuote: 0,\n    singleQuote: 0,\n    singleParam: 0,\n    trailingComma: 0\n  };\n  const lines = (code || \"\").split(\"\\n\");\n  let previousLineTrailing = false;\n  for (const line of lines) {\n    const trimmitedLine = line.trim();\n    if (trimmitedLine.length === 0) {\n      continue;\n    }\n    if (detect.wrapColumn && line.length > maxLineLength) {\n      maxLineLength = line.length;\n    }\n    if (detect.indent) {\n      const lineIndent = line.match(/^\\s+/)?.[0] || \"\";\n      if (lineIndent.length > 0) {\n        if (lineIndent.length > 0 && lineIndent.length < codeIndent) {\n          codeIndent = lineIndent.length;\n        }\n        if (lineIndent[0] === \"\t\") {\n          tabUsages++;\n        } else if (lineIndent.length > 0) {\n          tabUsages--;\n        }\n      }\n    }\n    if (trimmitedLine[trimmitedLine.length - 1] === \";\") {\n      semiUsages++;\n    } else if (trimmitedLine.length > 0) {\n      semiUsages--;\n    }\n    if (detect.quote || detect.arrowParens) {\n      const matches = trimmitedLine.matchAll(syntaxDetectRegex);\n      for (const match of matches) {\n        if (!match.groups) {\n          continue;\n        }\n        for (const key in syntaxUsages) {\n          if (match.groups[key]) {\n            syntaxUsages[key]++;\n          }\n        }\n      }\n    }\n    if (detect.trailingComma) {\n      if (line.startsWith(\"}\") || line.startsWith(\"]\")) {\n        if (previousLineTrailing) {\n          multiLineTrailingCommaUsages++;\n        } else {\n          multiLineTrailingCommaUsages--;\n        }\n      }\n      previousLineTrailing = trimmitedLine.endsWith(\",\");\n    }\n  }\n  return {\n    wrapColumn: maxLineLength,\n    useTabs: tabUsages > 0,\n    tabWidth: codeIndent,\n    quote: syntaxUsages.singleQuote > syntaxUsages.doubleQuote ? \"single\" : \"double\",\n    arrowParensAlways: syntaxUsages.singleParam > 0,\n    trailingComma: multiLineTrailingCommaUsages > 0 || syntaxUsages.trailingComma > 0,\n    useSemi: semiUsages > 0,\n    arrayBracketSpacing: void 0,\n    // TODO\n    objectCurlySpacing: void 0,\n    // TODO\n    ...userStyles\n  };\n}\n\nfunction parseModule(code, options) {\n  const node = parse(code, {\n    parser: options?.parser || getBabelParser(),\n    ...options\n  });\n  return proxifyModule(node, code);\n}\nfunction parseExpression(code, options) {\n  const root = parse(\"(\" + code + \")\", {\n    parser: options?.parser || getBabelParser(),\n    ...options\n  });\n  let body = root.program.body[0];\n  if (body.type === \"ExpressionStatement\") {\n    body = body.expression;\n  }\n  if (body.extra?.parenthesized) {\n    body.extra.parenthesized = false;\n  }\n  const mod = {\n    $ast: root,\n    $code: \" \" + code + \" \",\n    $type: \"module\"\n  };\n  return proxify(body, mod);\n}\nfunction generateCode(node, options = {}) {\n  const ast = node.$ast || node;\n  const formatOptions = options.format === false || !(\"$code\" in node) ? {} : detectCodeFormat(node.$code, options.format);\n  const { code, map } = print(ast, {\n    ...options,\n    ...formatOptions\n  });\n  return { code, map };\n}\nasync function loadFile(filename, options = {}) {\n  const contents = await promises.readFile(filename, \"utf8\");\n  options.sourceFileName = options.sourceFileName ?? filename;\n  return parseModule(contents, options);\n}\nasync function writeFile(node, filename, options) {\n  const ast = \"ast\" in node ? node.ast : node;\n  const { code, map } = generateCode(ast, options);\n  filename = filename || ast.name || \"output.js\";\n  await promises.writeFile(filename, code);\n  if (map) {\n    await promises.writeFile(filename + \".map\", map);\n  }\n}\n\nconst b = recast.types.builders;\nconst builders = {\n  /**\n   * Create a function call node.\n   */\n  functionCall(callee, ...args) {\n    const node = b.callExpression(\n      b.identifier(callee),\n      args.map((i) => literalToAst(i))\n    );\n    return proxifyFunctionCall(node);\n  },\n  /**\n   * Create a new expression node.\n   */\n  newExpression(callee, ...args) {\n    const node = b.newExpression(\n      b.identifier(callee),\n      args.map((i) => literalToAst(i))\n    );\n    return proxifyNewExpression(node);\n  },\n  /**\n   * Create a proxified version of a literal value.\n   */\n  literal(value) {\n    return literalToAst(value);\n  },\n  /**\n   * Parse a raw expression and return a proxified version of it.\n   *\n   * ```ts\n   * const obj = builders.raw(\"{ foo: 1 }\");\n   * console.log(obj.foo); // 1\n   * ```\n   */\n  raw(code) {\n    return parseExpression(code);\n  }\n};\n\nexport { MagicastError as M, parseExpression as a, builders as b, detectCodeFormat as d, generateCode as g, loadFile as l, parseModule as p, writeFile as w };\n", "export { M as MagicastError, b as builders, d as detectCodeFormat, g as generateCode, l as loadFile, a as parseExpression, p as parseModule, w as writeFile } from './shared/magicast.91b07a20.mjs';\nimport 'recast';\nimport 'node:fs';\nimport '@babel/parser';\n", "import { loadFile, type ProxifiedModule } from \"magicast\"\nimport { mkdir, readFile, writeFile, stat } from \"node:fs/promises\"\nimport { initConfig } from \"../../config/index.js\"\nimport { dedent } from \"ts-dedent\"\nimport type { InlangConfig } from \"@inlang/core/config\"\nimport { testConfigFile } from \"@inlang/core/test\"\nimport { initInlangEnvironment, InlangConfigWithSdkProps } from \"../../config/config.js\"\nimport { validateSdkConfig } from \"@inlang/sdk-js-plugin\"\n// @ts-ignore\nimport { version } from \"../../../package.json\"\nimport path from \"node:path\"\nimport { pathToFileURL } from \"node:url\"\nimport type { Config as SvelteConfig } from \"@sveltejs/kit\"\nimport { findDepPkgJsonPath } from \"vitefu\"\n\nexport const doesPathExist = async (path: string) => !!(await stat(path).catch(() => false))\n\ntype VersionString = `${number}.${number}.${number}`\n\nexport type TransformConfig = {\n\tcwdFolderPath: string\n\tdebug?: boolean\n\tlanguageInUrl: boolean\n\tisStatic: boolean\n\trootRoutesFolder: string\n\tsourceFileName?: string\n\tsourceMapName?: string\n\tinlang: InlangConfigWithSdkProps\n\tsvelteKit: {\n\t\tversion: VersionString | undefined\n\t\tusesTypeScript: boolean\n\t\tfiles: {\n\t\t\tappTemplate: string\n\t\t\troutes: string\n\t\t\tserverHooks: string\n\t\t}\n\t}\n}\n\nconst cwdFolderPath = process.cwd()\nconst inlangConfigFilePath = path.resolve(cwdFolderPath, \"inlang.config.js\")\n\nlet configPromise: Promise<TransformConfig> | undefined = undefined\n\nexport const getTransformConfig = async (): Promise<TransformConfig> => {\n\tif (configPromise) return configPromise\n\n\t// eslint-disable-next-line no-async-promise-executor\n\treturn (configPromise = new Promise<TransformConfig>(async (resolve) => {\n\t\tawait createInlangConfigIfNotPresentYet()\n\t\tawait updateSdkPluginVersion()\n\n\t\t// TODO: combine `testConfigFile` and `initConfig` functionality\n\t\tconst inlangConfigAsString = await readFile(inlangConfigFilePath, { encoding: \"utf-8\" })\n\n\t\tconst [, exception] = await testConfigFile({\n\t\t\tfile: inlangConfigAsString,\n\t\t\tenv: await initInlangEnvironment(),\n\t\t})\n\t\tif (exception) {\n\t\t\tthrow exception\n\t\t}\n\t\tconst inlangConfigModule = await import(pathToFileURL(inlangConfigFilePath).toString())\n\t\tconst inlangConfig = await initConfig(inlangConfigModule)\n\n\t\tconst { default: svelteConfig } = (await import(\n\t\t\tpathToFileURL(path.resolve(cwdFolderPath, \"svelte.config.js\")).toString()\n\t\t)) as { default: SvelteConfig }\n\t\tconst files = {\n\t\t\tappTemplate: path.resolve(\n\t\t\t\tcwdFolderPath,\n\t\t\t\tsvelteConfig.kit?.files?.appTemplate || path.resolve(\"src\", \"app.html\"),\n\t\t\t),\n\t\t\troutes: path.resolve(\n\t\t\t\tcwdFolderPath,\n\t\t\t\tsvelteConfig.kit?.files?.routes || path.resolve(\"src\", \"routes\"),\n\t\t\t),\n\t\t\tserverHooks: path.resolve(\n\t\t\t\tcwdFolderPath,\n\t\t\t\tsvelteConfig.kit?.files?.hooks?.server || path.resolve(\"src\", \"hooks.server\"),\n\t\t\t),\n\t\t}\n\n\t\tassertConfigWithSdk(inlangConfig)\n\t\tinlangConfig.sdk = validateSdkConfig(inlangConfig.sdk)\n\n\t\tconst languageInUrl =\n\t\t\tinlangConfig?.sdk?.languageNegotiation?.strategies?.some(({ type }) => type === \"url\") ||\n\t\t\tfalse\n\n\t\tconst rootRoutesFolder = path.resolve(files.routes, languageInUrl ? \"[lang]\" : \"\")\n\t\tconst isStatic =\n\t\t\t(await shouldContentBePrerendered(files.routes)) ||\n\t\t\t(await shouldContentBePrerendered(rootRoutesFolder))\n\n\t\tconst usesTypeScript = await doesPathExist(path.resolve(cwdFolderPath, \"tsconfig.json\"))\n\n\t\t// TODO: find a more reliable way (https://github.com/sveltejs/kit/issues/9937)\n\t\tconst svelteKitVersion = await getInstalledVersionOfPackage(\"@sveltejs/kit\")\n\n\t\tresolve({\n\t\t\tcwdFolderPath,\n\t\t\tdebug: !!inlangConfig.sdk?.debug,\n\t\t\tlanguageInUrl,\n\t\t\tisStatic,\n\t\t\trootRoutesFolder,\n\t\t\tinlang: inlangConfig,\n\t\t\tsvelteKit: {\n\t\t\t\tversion: svelteKitVersion,\n\t\t\t\tusesTypeScript,\n\t\t\t\tfiles,\n\t\t\t},\n\t\t})\n\t}))\n}\n\nexport const resetConfig = () => (configPromise = undefined)\n\n// ------------------------------------------------------------------------------------------------\n\nclass InlangSdkConfigError extends Error {}\n\nfunction assertConfigWithSdk(\n\tconfig: InlangConfig | undefined,\n): asserts config is InlangConfigWithSdkProps {\n\tif (!config) {\n\t\tthrow new InlangSdkConfigError(\n\t\t\t\"Could not find `inlang.config.js` in the root of your project.`\",\n\t\t)\n\t}\n\n\tif (!(\"sdk\" in config)) {\n\t\tthrow new InlangSdkConfigError(\n\t\t\t\"Invalid config. Make sure to add the `sdkPlugin` to your `inlang.config.js` file. See https://inlang.com/documentation/sdk/configuration\",\n\t\t)\n\t}\n}\n\n// ------------------------------------------------------------------------------------------------\n\nconst createInlangConfigIfNotPresentYet = async () => {\n\tconst inlangConfigExists = await doesPathExist(inlangConfigFilePath)\n\tif (inlangConfigExists) return\n\n\tawait createDemoResources()\n\n\treturn writeFile(\n\t\tinlangConfigFilePath,\n\t\t`\n/**\n * @type { import(\"@inlang/core/config\").DefineConfig }\n */\nexport async function defineConfig(env) {\n\tconst { default: jsonPlugin } = await env.$import(\n\t\t\"https://cdn.jsdelivr.net/gh/samuelstroschein/inlang-plugin-json@2/dist/index.js\"\n\t)\n\tconst { default: sdkPlugin } = await env.$import(\n\t\t\"https://cdn.jsdelivr.net/npm/@inlang/sdk-js-plugin/dist/index.js\"\n\t)\n\n\treturn {\n\t\treferenceLanguage: \"en\",\n\t\tplugins: [\n\t\t\tjsonPlugin({\n\t\t\t\tpathPattern: \"./languages/{language}.json\",\n\t\t\t}),\n\t\t\tsdkPlugin({\n\t\t\t\tlanguageNegotiation: {\n\t\t\t\t\tstrategies: [{ type: \"localStorage\" }]\n\t\t\t\t}\n\t\t\t}),\n\t\t],\n\t}\n}\n`,\n\t)\n}\n\n// TODO: do this in a better way #708\nconst createDemoResources = async () => {\n\tconst resourcesFolder = path.resolve(cwdFolderPath, \"languages\")\n\n\tif (!(await doesPathExist(resourcesFolder))) {\n\t\tawait mkdir(path.resolve(resourcesFolder))\n\t}\n\n\tawait writeFile(\n\t\tpath.resolve(resourcesFolder, \"en.json\"),\n\t\tdedent`\n\t\t{\n\t\t  \"welcome\": \"Welcome to inlang\"\n\t\t}\n\t`,\n\t\t{ encoding: \"utf-8\" },\n\t)\n\n\tawait writeFile(\n\t\tpath.resolve(resourcesFolder, \"de.json\"),\n\t\tdedent`\n\t\t{\n\t\t  \"welcome\": \"Willkommen bei inlang\"\n\t\t}\n\t`,\n\t\t{ encoding: \"utf-8\" },\n\t)\n}\n\n// ------------------------------------------------------------------------------------------------\n\nconst shouldContentBePrerendered = async (routesFolder: string) => {\n\tconst filesToLookFor = [\"+layout.server.js\", \"+layout.server.ts\", \"+layout.js\", \"+layout.ts\"]\n\n\tconst modules = (\n\t\tawait Promise.all(\n\t\t\tfilesToLookFor.map((file) =>\n\t\t\t\tloadFile(path.resolve(routesFolder, file)).catch(() => undefined),\n\t\t\t),\n\t\t)\n\t).filter(Boolean) as ProxifiedModule<any>[]\n\n\treturn modules.map((mod) => [true, \"auto\"].includes(mod.exports.prerender)).some(Boolean)\n}\n\n// ------------------------------------------------------------------------------------------------\n\nconst updateSdkPluginVersion = async () => {\n\tconst inlangConfigAsString = await readFile(inlangConfigFilePath, { encoding: \"utf-8\" })\n\n\t// this regex detects the new `https://cdn.jsdelivr.net/npm/@inlang/sdk-js-plugin/dist/index.js` as well as\n\t// the older https://cdn.jsdelivr.net/npm/@inlang/sdk-js/dist/plugin/index.js url\n\t// both urls are also detected with the optional @version identifier\n\tconst REGEX_PLUGIN_VERSION =\n\t\t/https:\\/\\/cdn\\.jsdelivr\\.net\\/npm\\/@inlang\\/sdk-js(-plugin)?@?(.*)?\\/dist(\\/plugin)?\\/index\\.js/g\n\n\tconst newConfig = inlangConfigAsString.replace(\n\t\tREGEX_PLUGIN_VERSION,\n\t\t`https://cdn.jsdelivr.net/npm/@inlang/sdk-js-plugin@${version}/dist/index.js`,\n\t)\n\n\tif (inlangConfigAsString !== newConfig) {\n\t\tconsole.info(\n\t\t\t`Updating 'inlang.config.js' to use the correct version of '@inlang/sdk-js-plugin' (${version})`,\n\t\t)\n\n\t\tawait writeFile(inlangConfigFilePath, newConfig)\n\t}\n}\n\n// ------------------------------------------------------------------------------------------------\n\nconst getInstalledVersionOfPackage = async (pkg: string) => {\n\tconst pkgJsonPath = await findDepPkgJsonPath(pkg, cwdFolderPath)\n\tif (!pkgJsonPath) return undefined\n\n\tconst pkgJson = JSON.parse(await readFile(pkgJsonPath, { encoding: \"utf-8\" }))\n\treturn pkgJson.version\n}\n", "var _TestConfigException_id;\nimport { parseConfig, ParseConfigException } from \"../config/parseConfig.js\";\n/**\n * @deprecated Use `ParseConfigException` from `@inlang/core/config` instead.\n */\nexport class TestConfigException extends Error {\n    constructor() {\n        super(...arguments);\n        _TestConfigException_id.set(this, \"TestConfigException\");\n    }\n}\n_TestConfigException_id = new WeakMap();\n/**\n * @deprecated Use `parseConfig` from `@inlang/core/config` instead.\n */\nexport const testConfig = (...args) => {\n    try {\n        return parseConfig(...args);\n    }\n    catch (error) {\n        if (error instanceof ParseConfigException)\n            throw new TestConfigException(error.message);\n        throw error;\n    }\n};\n", "import { setupConfig } from \"../config/setupConfig.js\";\nimport { parseConfig, ParseConfigException } from \"../config/parseConfig.js\";\n/**\n * Validates the inlang.config.js file.\n *\n * If you only want to validate the config object,\n * use the `testConfig` function instead.\n *\n * @example\n * const [success, error] = await testConfigFile(args)\n */\nexport async function testConfigFile(args) {\n    try {\n        const [, importKeywordUsedException] = importKeywordUsed(args.file);\n        if (importKeywordUsedException) {\n            return [undefined, importKeywordUsedException];\n        }\n        const module = await import(\"data:application/javascript;base64,\" + btoa(args.file));\n        const config = await setupConfig({ module, env: args.env });\n        const [, exception] = await parseConfig({ config });\n        if (exception) {\n            return [undefined, exception];\n        }\n        return [true, undefined];\n    }\n    catch (e) {\n        return [undefined, new ParseConfigException(e.message)];\n    }\n}\n/**\n * Detects if the import keyword is used in the config file.\n */\nfunction importKeywordUsed(configFile) {\n    // This regex uses a negative lookbehind assertion (?<!...)\n    // to match import keywords that are not immediately preceded\n    // by a dollar sign. The \\b ensures that the regex matches\n    // only complete words.\n    // $import, and JSDoc import statements are allowed\n    const regex = /(?<!(\\$)|\\{|\\{\\s|\\{\\s\\s)import\\b/;\n    const hasError = regex.test(configFile);\n    if (hasError) {\n        return [\n            undefined,\n            new ParseConfigException(\"Regular import statements are not allowed inside `inlang.config.js`. Use `$import` of the inlang environment instead. See https://inlang.com/documentation/inlang-environment.\"),\n        ];\n    }\n    return [true, undefined];\n}\n", "import { createMemoryFs, normalizePath } from \"@inlang-git/fs\";\nimport { dedent } from \"ts-dedent\";\nimport { initialize$import } from \"../environment/$import.js\";\n/**\n * Initializes a mock environment.\n *\n * The mock environment uses a virtual file system (memoryFs). If\n * testing inlang depends on files in the local file system,\n * you can copy directories into the environment by providing\n * the `copyDirectory` argument.\n *\n * @param copyDirectory - if defined, copies directories (paths) into the environment\n */\nexport async function mockEnvironment(args) {\n    const $fs = createMemoryFs();\n    const $import = initialize$import({\n        fs: $fs,\n        fetch,\n    });\n    const env = {\n        $fs,\n        $import,\n    };\n    if (args.copyDirectory) {\n        for (const path of args.copyDirectory.paths) {\n            await copyDirectory({ copyFrom: args.copyDirectory.fs, copyTo: $fs, path });\n        }\n    }\n    return env;\n}\n/**\n * Copies a directory from one fs to another.\n *\n * Useful for mocking the environment.\n */\nexport async function copyDirectory(args) {\n    try {\n        await args.copyFrom.readdir(args.path);\n    }\n    catch {\n        throw new Error(dedent `\nThe directory specified in \\`copyDirectory.path\\` \"${args.path}\" does not exist.\n\nSolution: Make sure that the \\`copyDirectory.path\\` is relative to the current working directory.\n\nContext: The path is relative to the current working directory, not the file that calls \\`mockEnvironment\\`.\n\t\t`);\n    }\n    // create directory\n    await args.copyTo.mkdir(args.path, { recursive: true });\n    const pathsInDirectory = await args.copyFrom.readdir(args.path);\n    for (const subpath of pathsInDirectory) {\n        // check if the path is a file\n        const path = normalizePath(`${args.path}/${subpath}`);\n        try {\n            const file = await args.copyFrom.readFile(path, { encoding: \"binary\" });\n            await args.copyTo.writeFile(path, file);\n        }\n        catch (err) {\n            await copyDirectory({ ...args, path });\n        }\n    }\n}\n", "var _;(function(s){s.assertEqual=r=>r;function e(r){}s.assertIs=e;function t(r){throw new Error}s.assertNever=t,s.arrayToEnum=r=>{let a={};for(let i of r)a[i]=i;return a},s.getValidEnumValues=r=>{let a=s.objectKeys(r).filter(o=>typeof r[r[o]]!=\"number\"),i={};for(let o of a)i[o]=r[o];return s.objectValues(i)},s.objectValues=r=>s.objectKeys(r).map(function(a){return r[a]}),s.objectKeys=typeof Object.keys==\"function\"?r=>Object.keys(r):r=>{let a=[];for(let i in r)Object.prototype.hasOwnProperty.call(r,i)&&a.push(i);return a},s.find=(r,a)=>{for(let i of r)if(a(i))return i},s.isInteger=typeof Number.isInteger==\"function\"?r=>Number.isInteger(r):r=>typeof r==\"number\"&&isFinite(r)&&Math.floor(r)===r;function n(r,a=\" | \"){return r.map(i=>typeof i==\"string\"?`'${i}'`:i).join(a)}s.joinValues=n,s.jsonStringifyReplacer=(r,a)=>typeof a==\"bigint\"?a.toString():a})(_||(_={}));var we;(function(s){s.mergeShapes=(e,t)=>({...e,...t})})(we||(we={}));var d=_.arrayToEnum([\"string\",\"nan\",\"number\",\"integer\",\"float\",\"boolean\",\"date\",\"bigint\",\"symbol\",\"function\",\"undefined\",\"null\",\"array\",\"object\",\"unknown\",\"promise\",\"void\",\"never\",\"map\",\"set\"]),$=s=>{switch(typeof s){case\"undefined\":return d.undefined;case\"string\":return d.string;case\"number\":return isNaN(s)?d.nan:d.number;case\"boolean\":return d.boolean;case\"function\":return d.function;case\"bigint\":return d.bigint;case\"symbol\":return d.symbol;case\"object\":return Array.isArray(s)?d.array:s===null?d.null:s.then&&typeof s.then==\"function\"&&s.catch&&typeof s.catch==\"function\"?d.promise:typeof Map<\"u\"&&s instanceof Map?d.map:typeof Set<\"u\"&&s instanceof Set?d.set:typeof Date<\"u\"&&s instanceof Date?d.date:d.object;default:return d.unknown}},c=_.arrayToEnum([\"invalid_type\",\"invalid_literal\",\"custom\",\"invalid_union\",\"invalid_union_discriminator\",\"invalid_enum_value\",\"unrecognized_keys\",\"invalid_arguments\",\"invalid_return_type\",\"invalid_date\",\"invalid_string\",\"too_small\",\"too_big\",\"invalid_intersection_types\",\"not_multiple_of\",\"not_finite\"]);var S=class extends Error{constructor(e){super(),this.issues=[],this.addIssue=n=>{this.issues=[...this.issues,n]},this.addIssues=(n=[])=>{this.issues=[...this.issues,...n]};let t=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,this.name=\"ZodError\",this.issues=e}get errors(){return this.issues}format(e){let t=e||function(a){return a.message},n={_errors:[]},r=a=>{for(let i of a.issues)if(i.code===\"invalid_union\")i.unionErrors.map(r);else if(i.code===\"invalid_return_type\")r(i.returnTypeError);else if(i.code===\"invalid_arguments\")r(i.argumentsError);else if(i.path.length===0)n._errors.push(t(i));else{let o=n,f=0;for(;f<i.path.length;){let l=i.path[f];f===i.path.length-1?(o[l]=o[l]||{_errors:[]},o[l]._errors.push(t(i))):o[l]=o[l]||{_errors:[]},o=o[l],f++}}};return r(this),n}toString(){return this.message}get message(){return JSON.stringify(this.issues,_.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(e=t=>t.message){let t={},n=[];for(let r of this.issues)r.path.length>0?(t[r.path[0]]=t[r.path[0]]||[],t[r.path[0]].push(e(r))):n.push(e(r));return{formErrors:n,fieldErrors:t}}get formErrors(){return this.flatten()}};S.create=s=>new S(s);var le=(s,e)=>{let t;switch(s.code){case c.invalid_type:s.received===d.undefined?t=\"Required\":t=`Expected ${s.expected}, received ${s.received}`;break;case c.invalid_literal:t=`Invalid literal value, expected ${JSON.stringify(s.expected,_.jsonStringifyReplacer)}`;break;case c.unrecognized_keys:t=`Unrecognized key(s) in object: ${_.joinValues(s.keys,\", \")}`;break;case c.invalid_union:t=\"Invalid input\";break;case c.invalid_union_discriminator:t=`Invalid discriminator value. Expected ${_.joinValues(s.options)}`;break;case c.invalid_enum_value:t=`Invalid enum value. Expected ${_.joinValues(s.options)}, received '${s.received}'`;break;case c.invalid_arguments:t=\"Invalid function arguments\";break;case c.invalid_return_type:t=\"Invalid function return type\";break;case c.invalid_date:t=\"Invalid date\";break;case c.invalid_string:typeof s.validation==\"object\"?\"includes\"in s.validation?(t=`Invalid input: must include \"${s.validation.includes}\"`,typeof s.validation.position==\"number\"&&(t=`${t} at one or more positions greater than or equal to ${s.validation.position}`)):\"startsWith\"in s.validation?t=`Invalid input: must start with \"${s.validation.startsWith}\"`:\"endsWith\"in s.validation?t=`Invalid input: must end with \"${s.validation.endsWith}\"`:_.assertNever(s.validation):s.validation!==\"regex\"?t=`Invalid ${s.validation}`:t=\"Invalid\";break;case c.too_small:s.type===\"array\"?t=`Array must contain ${s.exact?\"exactly\":s.inclusive?\"at least\":\"more than\"} ${s.minimum} element(s)`:s.type===\"string\"?t=`String must contain ${s.exact?\"exactly\":s.inclusive?\"at least\":\"over\"} ${s.minimum} character(s)`:s.type===\"number\"?t=`Number must be ${s.exact?\"exactly equal to \":s.inclusive?\"greater than or equal to \":\"greater than \"}${s.minimum}`:s.type===\"date\"?t=`Date must be ${s.exact?\"exactly equal to \":s.inclusive?\"greater than or equal to \":\"greater than \"}${new Date(Number(s.minimum))}`:t=\"Invalid input\";break;case c.too_big:s.type===\"array\"?t=`Array must contain ${s.exact?\"exactly\":s.inclusive?\"at most\":\"less than\"} ${s.maximum} element(s)`:s.type===\"string\"?t=`String must contain ${s.exact?\"exactly\":s.inclusive?\"at most\":\"under\"} ${s.maximum} character(s)`:s.type===\"number\"?t=`Number must be ${s.exact?\"exactly\":s.inclusive?\"less than or equal to\":\"less than\"} ${s.maximum}`:s.type===\"bigint\"?t=`BigInt must be ${s.exact?\"exactly\":s.inclusive?\"less than or equal to\":\"less than\"} ${s.maximum}`:s.type===\"date\"?t=`Date must be ${s.exact?\"exactly\":s.inclusive?\"smaller than or equal to\":\"smaller than\"} ${new Date(Number(s.maximum))}`:t=\"Invalid input\";break;case c.custom:t=\"Invalid input\";break;case c.invalid_intersection_types:t=\"Intersection results could not be merged\";break;case c.not_multiple_of:t=`Number must be a multiple of ${s.multipleOf}`;break;case c.not_finite:t=\"Number must be finite\";break;default:t=e.defaultError,_.assertNever(s)}return{message:t}},je=le;function pe(){return je}var me=s=>{let{data:e,path:t,errorMaps:n,issueData:r}=s,a=[...t,...r.path||[]],i={...r,path:a},o=\"\",f=n.filter(l=>!!l).slice().reverse();for(let l of f)o=l(i,{data:e,defaultError:o}).message;return{...r,path:a,message:r.message||o}};function u(s,e){let t=me({issueData:e,data:s.data,path:s.path,errorMaps:[s.common.contextualErrorMap,s.schemaErrorMap,pe(),le].filter(n=>!!n)});s.common.issues.push(t)}var k=class{constructor(){this.value=\"valid\"}dirty(){this.value===\"valid\"&&(this.value=\"dirty\")}abort(){this.value!==\"aborted\"&&(this.value=\"aborted\")}static mergeArray(e,t){let n=[];for(let r of t){if(r.status===\"aborted\")return m;r.status===\"dirty\"&&e.dirty(),n.push(r.value)}return{status:e.value,value:n}}static async mergeObjectAsync(e,t){let n=[];for(let r of t)n.push({key:await r.key,value:await r.value});return k.mergeObjectSync(e,n)}static mergeObjectSync(e,t){let n={};for(let r of t){let{key:a,value:i}=r;if(a.status===\"aborted\"||i.status===\"aborted\")return m;a.status===\"dirty\"&&e.dirty(),i.status===\"dirty\"&&e.dirty(),(typeof i.value<\"u\"||r.alwaysSet)&&(n[a.value]=i.value)}return{status:e.value,value:n}}},m=Object.freeze({status:\"aborted\"}),Re=s=>({status:\"dirty\",value:s}),b=s=>({status:\"valid\",value:s}),Te=s=>s.status===\"aborted\",Se=s=>s.status===\"dirty\",ge=s=>s.status===\"valid\",ye=s=>typeof Promise<\"u\"&&s instanceof Promise,h;(function(s){s.errToObj=e=>typeof e==\"string\"?{message:e}:e||{},s.toString=e=>typeof e==\"string\"?e:e?.message})(h||(h={}));var N=class{constructor(e,t,n,r){this._cachedPath=[],this.parent=e,this.data=t,this._path=n,this._key=r}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},Ce=(s,e)=>{if(ge(e))return{success:!0,data:e.value};if(!s.common.issues.length)throw new Error(\"Validation failed but no issues detected.\");return{success:!1,get error(){if(this._error)return this._error;let t=new S(s.common.issues);return this._error=t,this._error}}};function g(s){if(!s)return{};let{errorMap:e,invalid_type_error:t,required_error:n,description:r}=s;if(e&&(t||n))throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);return e?{errorMap:e,description:r}:{errorMap:(i,o)=>i.code!==\"invalid_type\"?{message:o.defaultError}:typeof o.data>\"u\"?{message:n??o.defaultError}:{message:t??o.defaultError},description:r}}var v=class{constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(e){return $(e.data)}_getOrReturnCtx(e,t){return t||{common:e.parent.common,data:e.data,parsedType:$(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new k,ctx:{common:e.parent.common,data:e.data,parsedType:$(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){let t=this._parse(e);if(ye(t))throw new Error(\"Synchronous parse encountered promise.\");return t}_parseAsync(e){let t=this._parse(e);return Promise.resolve(t)}parse(e,t){let n=this.safeParse(e,t);if(n.success)return n.data;throw n.error}safeParse(e,t){var n;let r={common:{issues:[],async:(n=t?.async)!==null&&n!==void 0?n:!1,contextualErrorMap:t?.errorMap},path:t?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:$(e)},a=this._parseSync({data:e,path:r.path,parent:r});return Ce(r,a)}async parseAsync(e,t){let n=await this.safeParseAsync(e,t);if(n.success)return n.data;throw n.error}async safeParseAsync(e,t){let n={common:{issues:[],contextualErrorMap:t?.errorMap,async:!0},path:t?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:$(e)},r=this._parse({data:e,path:n.path,parent:n}),a=await(ye(r)?r:Promise.resolve(r));return Ce(n,a)}refine(e,t){let n=r=>typeof t==\"string\"||typeof t>\"u\"?{message:t}:typeof t==\"function\"?t(r):t;return this._refinement((r,a)=>{let i=e(r),o=()=>a.addIssue({code:c.custom,...n(r)});return typeof Promise<\"u\"&&i instanceof Promise?i.then(f=>f?!0:(o(),!1)):i?!0:(o(),!1)})}refinement(e,t){return this._refinement((n,r)=>e(n)?!0:(r.addIssue(typeof t==\"function\"?t(n,r):t),!1))}_refinement(e){return new I({schema:this,typeName:p.ZodEffects,effect:{type:\"refinement\",refinement:e}})}superRefine(e){return this._refinement(e)}optional(){return j.create(this,this._def)}nullable(){return V.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return C.create(this,this._def)}promise(){return U.create(this,this._def)}or(e){return Y.create([this,e],this._def)}and(e){return H.create(this,e,this._def)}transform(e){return new I({...g(this._def),schema:this,typeName:p.ZodEffects,effect:{type:\"transform\",transform:e}})}default(e){let t=typeof e==\"function\"?e:()=>e;return new F({...g(this._def),innerType:this,defaultValue:t,typeName:p.ZodDefault})}brand(){return new _e({typeName:p.ZodBranded,type:this,...g(this._def)})}catch(e){let t=typeof e==\"function\"?e:()=>e;return new oe({...g(this._def),innerType:this,catchValue:t,typeName:p.ZodCatch})}describe(e){let t=this.constructor;return new t({...this._def,description:e})}pipe(e){return ee.create(this,e)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},Ae=/^c[^\\s-]{8,}$/i,Ze=/^[a-z][a-z0-9]*$/,Me=/[0-9A-HJKMNP-TV-Z]{26}/,Pe=/^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i,ze=/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/,Ve=/^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u,$e=/^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/,Le=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,De=s=>s.precision?s.offset?new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${s.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`):new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${s.precision}}Z$`):s.precision===0?s.offset?new RegExp(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$\"):new RegExp(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$\"):s.offset?new RegExp(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$\"):new RegExp(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$\");function Ue(s,e){return!!((e===\"v4\"||!e)&&$e.test(s)||(e===\"v6\"||!e)&&Le.test(s))}var O=class extends v{constructor(){super(...arguments),this._regex=(e,t,n)=>this.refinement(r=>e.test(r),{validation:t,code:c.invalid_string,...h.errToObj(n)}),this.nonempty=e=>this.min(1,h.errToObj(e)),this.trim=()=>new O({...this._def,checks:[...this._def.checks,{kind:\"trim\"}]}),this.toLowerCase=()=>new O({...this._def,checks:[...this._def.checks,{kind:\"toLowerCase\"}]}),this.toUpperCase=()=>new O({...this._def,checks:[...this._def.checks,{kind:\"toUpperCase\"}]})}_parse(e){if(this._def.coerce&&(e.data=String(e.data)),this._getType(e)!==d.string){let a=this._getOrReturnCtx(e);return u(a,{code:c.invalid_type,expected:d.string,received:a.parsedType}),m}let n=new k,r;for(let a of this._def.checks)if(a.kind===\"min\")e.data.length<a.value&&(r=this._getOrReturnCtx(e,r),u(r,{code:c.too_small,minimum:a.value,type:\"string\",inclusive:!0,exact:!1,message:a.message}),n.dirty());else if(a.kind===\"max\")e.data.length>a.value&&(r=this._getOrReturnCtx(e,r),u(r,{code:c.too_big,maximum:a.value,type:\"string\",inclusive:!0,exact:!1,message:a.message}),n.dirty());else if(a.kind===\"length\"){let i=e.data.length>a.value,o=e.data.length<a.value;(i||o)&&(r=this._getOrReturnCtx(e,r),i?u(r,{code:c.too_big,maximum:a.value,type:\"string\",inclusive:!0,exact:!0,message:a.message}):o&&u(r,{code:c.too_small,minimum:a.value,type:\"string\",inclusive:!0,exact:!0,message:a.message}),n.dirty())}else if(a.kind===\"email\")ze.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"email\",code:c.invalid_string,message:a.message}),n.dirty());else if(a.kind===\"emoji\")Ve.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"emoji\",code:c.invalid_string,message:a.message}),n.dirty());else if(a.kind===\"uuid\")Pe.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"uuid\",code:c.invalid_string,message:a.message}),n.dirty());else if(a.kind===\"cuid\")Ae.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"cuid\",code:c.invalid_string,message:a.message}),n.dirty());else if(a.kind===\"cuid2\")Ze.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"cuid2\",code:c.invalid_string,message:a.message}),n.dirty());else if(a.kind===\"ulid\")Me.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"ulid\",code:c.invalid_string,message:a.message}),n.dirty());else if(a.kind===\"url\")try{new URL(e.data)}catch{r=this._getOrReturnCtx(e,r),u(r,{validation:\"url\",code:c.invalid_string,message:a.message}),n.dirty()}else a.kind===\"regex\"?(a.regex.lastIndex=0,a.regex.test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"regex\",code:c.invalid_string,message:a.message}),n.dirty())):a.kind===\"trim\"?e.data=e.data.trim():a.kind===\"includes\"?e.data.includes(a.value,a.position)||(r=this._getOrReturnCtx(e,r),u(r,{code:c.invalid_string,validation:{includes:a.value,position:a.position},message:a.message}),n.dirty()):a.kind===\"toLowerCase\"?e.data=e.data.toLowerCase():a.kind===\"toUpperCase\"?e.data=e.data.toUpperCase():a.kind===\"startsWith\"?e.data.startsWith(a.value)||(r=this._getOrReturnCtx(e,r),u(r,{code:c.invalid_string,validation:{startsWith:a.value},message:a.message}),n.dirty()):a.kind===\"endsWith\"?e.data.endsWith(a.value)||(r=this._getOrReturnCtx(e,r),u(r,{code:c.invalid_string,validation:{endsWith:a.value},message:a.message}),n.dirty()):a.kind===\"datetime\"?De(a).test(e.data)||(r=this._getOrReturnCtx(e,r),u(r,{code:c.invalid_string,validation:\"datetime\",message:a.message}),n.dirty()):a.kind===\"ip\"?Ue(e.data,a.version)||(r=this._getOrReturnCtx(e,r),u(r,{validation:\"ip\",code:c.invalid_string,message:a.message}),n.dirty()):_.assertNever(a);return{status:n.value,value:e.data}}_addCheck(e){return new O({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:\"email\",...h.errToObj(e)})}url(e){return this._addCheck({kind:\"url\",...h.errToObj(e)})}emoji(e){return this._addCheck({kind:\"emoji\",...h.errToObj(e)})}uuid(e){return this._addCheck({kind:\"uuid\",...h.errToObj(e)})}cuid(e){return this._addCheck({kind:\"cuid\",...h.errToObj(e)})}cuid2(e){return this._addCheck({kind:\"cuid2\",...h.errToObj(e)})}ulid(e){return this._addCheck({kind:\"ulid\",...h.errToObj(e)})}ip(e){return this._addCheck({kind:\"ip\",...h.errToObj(e)})}datetime(e){var t;return typeof e==\"string\"?this._addCheck({kind:\"datetime\",precision:null,offset:!1,message:e}):this._addCheck({kind:\"datetime\",precision:typeof e?.precision>\"u\"?null:e?.precision,offset:(t=e?.offset)!==null&&t!==void 0?t:!1,...h.errToObj(e?.message)})}regex(e,t){return this._addCheck({kind:\"regex\",regex:e,...h.errToObj(t)})}includes(e,t){return this._addCheck({kind:\"includes\",value:e,position:t?.position,...h.errToObj(t?.message)})}startsWith(e,t){return this._addCheck({kind:\"startsWith\",value:e,...h.errToObj(t)})}endsWith(e,t){return this._addCheck({kind:\"endsWith\",value:e,...h.errToObj(t)})}min(e,t){return this._addCheck({kind:\"min\",value:e,...h.errToObj(t)})}max(e,t){return this._addCheck({kind:\"max\",value:e,...h.errToObj(t)})}length(e,t){return this._addCheck({kind:\"length\",value:e,...h.errToObj(t)})}get isDatetime(){return!!this._def.checks.find(e=>e.kind===\"datetime\")}get isEmail(){return!!this._def.checks.find(e=>e.kind===\"email\")}get isURL(){return!!this._def.checks.find(e=>e.kind===\"url\")}get isEmoji(){return!!this._def.checks.find(e=>e.kind===\"emoji\")}get isUUID(){return!!this._def.checks.find(e=>e.kind===\"uuid\")}get isCUID(){return!!this._def.checks.find(e=>e.kind===\"cuid\")}get isCUID2(){return!!this._def.checks.find(e=>e.kind===\"cuid2\")}get isULID(){return!!this._def.checks.find(e=>e.kind===\"ulid\")}get isIP(){return!!this._def.checks.find(e=>e.kind===\"ip\")}get minLength(){let e=null;for(let t of this._def.checks)t.kind===\"min\"&&(e===null||t.value>e)&&(e=t.value);return e}get maxLength(){let e=null;for(let t of this._def.checks)t.kind===\"max\"&&(e===null||t.value<e)&&(e=t.value);return e}};O.create=s=>{var e;return new O({checks:[],typeName:p.ZodString,coerce:(e=s?.coerce)!==null&&e!==void 0?e:!1,...g(s)})};function Be(s,e){let t=(s.toString().split(\".\")[1]||\"\").length,n=(e.toString().split(\".\")[1]||\"\").length,r=t>n?t:n,a=parseInt(s.toFixed(r).replace(\".\",\"\")),i=parseInt(e.toFixed(r).replace(\".\",\"\"));return a%i/Math.pow(10,r)}var M=class extends v{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(e){if(this._def.coerce&&(e.data=Number(e.data)),this._getType(e)!==d.number){let a=this._getOrReturnCtx(e);return u(a,{code:c.invalid_type,expected:d.number,received:a.parsedType}),m}let n,r=new k;for(let a of this._def.checks)a.kind===\"int\"?_.isInteger(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{code:c.invalid_type,expected:\"integer\",received:\"float\",message:a.message}),r.dirty()):a.kind===\"min\"?(a.inclusive?e.data<a.value:e.data<=a.value)&&(n=this._getOrReturnCtx(e,n),u(n,{code:c.too_small,minimum:a.value,type:\"number\",inclusive:a.inclusive,exact:!1,message:a.message}),r.dirty()):a.kind===\"max\"?(a.inclusive?e.data>a.value:e.data>=a.value)&&(n=this._getOrReturnCtx(e,n),u(n,{code:c.too_big,maximum:a.value,type:\"number\",inclusive:a.inclusive,exact:!1,message:a.message}),r.dirty()):a.kind===\"multipleOf\"?Be(e.data,a.value)!==0&&(n=this._getOrReturnCtx(e,n),u(n,{code:c.not_multiple_of,multipleOf:a.value,message:a.message}),r.dirty()):a.kind===\"finite\"?Number.isFinite(e.data)||(n=this._getOrReturnCtx(e,n),u(n,{code:c.not_finite,message:a.message}),r.dirty()):_.assertNever(a);return{status:r.value,value:e.data}}gte(e,t){return this.setLimit(\"min\",e,!0,h.toString(t))}gt(e,t){return this.setLimit(\"min\",e,!1,h.toString(t))}lte(e,t){return this.setLimit(\"max\",e,!0,h.toString(t))}lt(e,t){return this.setLimit(\"max\",e,!1,h.toString(t))}setLimit(e,t,n,r){return new M({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:n,message:h.toString(r)}]})}_addCheck(e){return new M({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:\"int\",message:h.toString(e)})}positive(e){return this._addCheck({kind:\"min\",value:0,inclusive:!1,message:h.toString(e)})}negative(e){return this._addCheck({kind:\"max\",value:0,inclusive:!1,message:h.toString(e)})}nonpositive(e){return this._addCheck({kind:\"max\",value:0,inclusive:!0,message:h.toString(e)})}nonnegative(e){return this._addCheck({kind:\"min\",value:0,inclusive:!0,message:h.toString(e)})}multipleOf(e,t){return this._addCheck({kind:\"multipleOf\",value:e,message:h.toString(t)})}finite(e){return this._addCheck({kind:\"finite\",message:h.toString(e)})}safe(e){return this._addCheck({kind:\"min\",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:h.toString(e)})._addCheck({kind:\"max\",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:h.toString(e)})}get minValue(){let e=null;for(let t of this._def.checks)t.kind===\"min\"&&(e===null||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(let t of this._def.checks)t.kind===\"max\"&&(e===null||t.value<e)&&(e=t.value);return e}get isInt(){return!!this._def.checks.find(e=>e.kind===\"int\"||e.kind===\"multipleOf\"&&_.isInteger(e.value))}get isFinite(){let e=null,t=null;for(let n of this._def.checks){if(n.kind===\"finite\"||n.kind===\"int\"||n.kind===\"multipleOf\")return!0;n.kind===\"min\"?(t===null||n.value>t)&&(t=n.value):n.kind===\"max\"&&(e===null||n.value<e)&&(e=n.value)}return Number.isFinite(t)&&Number.isFinite(e)}};M.create=s=>new M({checks:[],typeName:p.ZodNumber,coerce:s?.coerce||!1,...g(s)});var P=class extends v{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(e){if(this._def.coerce&&(e.data=BigInt(e.data)),this._getType(e)!==d.bigint){let a=this._getOrReturnCtx(e);return u(a,{code:c.invalid_type,expected:d.bigint,received:a.parsedType}),m}let n,r=new k;for(let a of this._def.checks)a.kind===\"min\"?(a.inclusive?e.data<a.value:e.data<=a.value)&&(n=this._getOrReturnCtx(e,n),u(n,{code:c.too_small,type:\"bigint\",minimum:a.value,inclusive:a.inclusive,message:a.message}),r.dirty()):a.kind===\"max\"?(a.inclusive?e.data>a.value:e.data>=a.value)&&(n=this._getOrReturnCtx(e,n),u(n,{code:c.too_big,type:\"bigint\",maximum:a.value,inclusive:a.inclusive,message:a.message}),r.dirty()):a.kind===\"multipleOf\"?e.data%a.value!==BigInt(0)&&(n=this._getOrReturnCtx(e,n),u(n,{code:c.not_multiple_of,multipleOf:a.value,message:a.message}),r.dirty()):_.assertNever(a);return{status:r.value,value:e.data}}gte(e,t){return this.setLimit(\"min\",e,!0,h.toString(t))}gt(e,t){return this.setLimit(\"min\",e,!1,h.toString(t))}lte(e,t){return this.setLimit(\"max\",e,!0,h.toString(t))}lt(e,t){return this.setLimit(\"max\",e,!1,h.toString(t))}setLimit(e,t,n,r){return new P({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:n,message:h.toString(r)}]})}_addCheck(e){return new P({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:\"min\",value:BigInt(0),inclusive:!1,message:h.toString(e)})}negative(e){return this._addCheck({kind:\"max\",value:BigInt(0),inclusive:!1,message:h.toString(e)})}nonpositive(e){return this._addCheck({kind:\"max\",value:BigInt(0),inclusive:!0,message:h.toString(e)})}nonnegative(e){return this._addCheck({kind:\"min\",value:BigInt(0),inclusive:!0,message:h.toString(e)})}multipleOf(e,t){return this._addCheck({kind:\"multipleOf\",value:e,message:h.toString(t)})}get minValue(){let e=null;for(let t of this._def.checks)t.kind===\"min\"&&(e===null||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(let t of this._def.checks)t.kind===\"max\"&&(e===null||t.value<e)&&(e=t.value);return e}};P.create=s=>{var e;return new P({checks:[],typeName:p.ZodBigInt,coerce:(e=s?.coerce)!==null&&e!==void 0?e:!1,...g(s)})};var te=class extends v{_parse(e){if(this._def.coerce&&(e.data=!!e.data),this._getType(e)!==d.boolean){let n=this._getOrReturnCtx(e);return u(n,{code:c.invalid_type,expected:d.boolean,received:n.parsedType}),m}return b(e.data)}};te.create=s=>new te({typeName:p.ZodBoolean,coerce:s?.coerce||!1,...g(s)});var D=class extends v{_parse(e){if(this._def.coerce&&(e.data=new Date(e.data)),this._getType(e)!==d.date){let a=this._getOrReturnCtx(e);return u(a,{code:c.invalid_type,expected:d.date,received:a.parsedType}),m}if(isNaN(e.data.getTime())){let a=this._getOrReturnCtx(e);return u(a,{code:c.invalid_date}),m}let n=new k,r;for(let a of this._def.checks)a.kind===\"min\"?e.data.getTime()<a.value&&(r=this._getOrReturnCtx(e,r),u(r,{code:c.too_small,message:a.message,inclusive:!0,exact:!1,minimum:a.value,type:\"date\"}),n.dirty()):a.kind===\"max\"?e.data.getTime()>a.value&&(r=this._getOrReturnCtx(e,r),u(r,{code:c.too_big,message:a.message,inclusive:!0,exact:!1,maximum:a.value,type:\"date\"}),n.dirty()):_.assertNever(a);return{status:n.value,value:new Date(e.data.getTime())}}_addCheck(e){return new D({...this._def,checks:[...this._def.checks,e]})}min(e,t){return this._addCheck({kind:\"min\",value:e.getTime(),message:h.toString(t)})}max(e,t){return this._addCheck({kind:\"max\",value:e.getTime(),message:h.toString(t)})}get minDate(){let e=null;for(let t of this._def.checks)t.kind===\"min\"&&(e===null||t.value>e)&&(e=t.value);return e!=null?new Date(e):null}get maxDate(){let e=null;for(let t of this._def.checks)t.kind===\"max\"&&(e===null||t.value<e)&&(e=t.value);return e!=null?new Date(e):null}};D.create=s=>new D({checks:[],coerce:s?.coerce||!1,typeName:p.ZodDate,...g(s)});var se=class extends v{_parse(e){if(this._getType(e)!==d.symbol){let n=this._getOrReturnCtx(e);return u(n,{code:c.invalid_type,expected:d.symbol,received:n.parsedType}),m}return b(e.data)}};se.create=s=>new se({typeName:p.ZodSymbol,...g(s)});var W=class extends v{_parse(e){if(this._getType(e)!==d.undefined){let n=this._getOrReturnCtx(e);return u(n,{code:c.invalid_type,expected:d.undefined,received:n.parsedType}),m}return b(e.data)}};W.create=s=>new W({typeName:p.ZodUndefined,...g(s)});var J=class extends v{_parse(e){if(this._getType(e)!==d.null){let n=this._getOrReturnCtx(e);return u(n,{code:c.invalid_type,expected:d.null,received:n.parsedType}),m}return b(e.data)}};J.create=s=>new J({typeName:p.ZodNull,...g(s)});var ne=class extends v{constructor(){super(...arguments),this._any=!0}_parse(e){return b(e.data)}};ne.create=s=>new ne({typeName:p.ZodAny,...g(s)});var Z=class extends v{constructor(){super(...arguments),this._unknown=!0}_parse(e){return b(e.data)}};Z.create=s=>new Z({typeName:p.ZodUnknown,...g(s)});var R=class extends v{_parse(e){let t=this._getOrReturnCtx(e);return u(t,{code:c.invalid_type,expected:d.never,received:t.parsedType}),m}};R.create=s=>new R({typeName:p.ZodNever,...g(s)});var re=class extends v{_parse(e){if(this._getType(e)!==d.undefined){let n=this._getOrReturnCtx(e);return u(n,{code:c.invalid_type,expected:d.void,received:n.parsedType}),m}return b(e.data)}};re.create=s=>new re({typeName:p.ZodVoid,...g(s)});var C=class extends v{_parse(e){let{ctx:t,status:n}=this._processInputParams(e),r=this._def;if(t.parsedType!==d.array)return u(t,{code:c.invalid_type,expected:d.array,received:t.parsedType}),m;if(r.exactLength!==null){let i=t.data.length>r.exactLength.value,o=t.data.length<r.exactLength.value;(i||o)&&(u(t,{code:i?c.too_big:c.too_small,minimum:o?r.exactLength.value:void 0,maximum:i?r.exactLength.value:void 0,type:\"array\",inclusive:!0,exact:!0,message:r.exactLength.message}),n.dirty())}if(r.minLength!==null&&t.data.length<r.minLength.value&&(u(t,{code:c.too_small,minimum:r.minLength.value,type:\"array\",inclusive:!0,exact:!1,message:r.minLength.message}),n.dirty()),r.maxLength!==null&&t.data.length>r.maxLength.value&&(u(t,{code:c.too_big,maximum:r.maxLength.value,type:\"array\",inclusive:!0,exact:!1,message:r.maxLength.message}),n.dirty()),t.common.async)return Promise.all([...t.data].map((i,o)=>r.type._parseAsync(new N(t,i,t.path,o)))).then(i=>k.mergeArray(n,i));let a=[...t.data].map((i,o)=>r.type._parseSync(new N(t,i,t.path,o)));return k.mergeArray(n,a)}get element(){return this._def.type}min(e,t){return new C({...this._def,minLength:{value:e,message:h.toString(t)}})}max(e,t){return new C({...this._def,maxLength:{value:e,message:h.toString(t)}})}length(e,t){return new C({...this._def,exactLength:{value:e,message:h.toString(t)}})}nonempty(e){return this.min(1,e)}};C.create=(s,e)=>new C({type:s,minLength:null,maxLength:null,exactLength:null,typeName:p.ZodArray,...g(e)});function q(s){if(s instanceof x){let e={};for(let t in s.shape){let n=s.shape[t];e[t]=j.create(q(n))}return new x({...s._def,shape:()=>e})}else return s instanceof C?new C({...s._def,type:q(s.element)}):s instanceof j?j.create(q(s.unwrap())):s instanceof V?V.create(q(s.unwrap())):s instanceof E?E.create(s.items.map(e=>q(e))):s}var x=class extends v{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;let e=this._def.shape(),t=_.objectKeys(e);return this._cached={shape:e,keys:t}}_parse(e){if(this._getType(e)!==d.object){let l=this._getOrReturnCtx(e);return u(l,{code:c.invalid_type,expected:d.object,received:l.parsedType}),m}let{status:n,ctx:r}=this._processInputParams(e),{shape:a,keys:i}=this._getCached(),o=[];if(!(this._def.catchall instanceof R&&this._def.unknownKeys===\"strip\"))for(let l in r.data)i.includes(l)||o.push(l);let f=[];for(let l of i){let y=a[l],B=r.data[l];f.push({key:{status:\"valid\",value:l},value:y._parse(new N(r,B,r.path,l)),alwaysSet:l in r.data})}if(this._def.catchall instanceof R){let l=this._def.unknownKeys;if(l===\"passthrough\")for(let y of o)f.push({key:{status:\"valid\",value:y},value:{status:\"valid\",value:r.data[y]}});else if(l===\"strict\")o.length>0&&(u(r,{code:c.unrecognized_keys,keys:o}),n.dirty());else if(l!==\"strip\")throw new Error(\"Internal ZodObject error: invalid unknownKeys value.\")}else{let l=this._def.catchall;for(let y of o){let B=r.data[y];f.push({key:{status:\"valid\",value:y},value:l._parse(new N(r,B,r.path,y)),alwaysSet:y in r.data})}}return r.common.async?Promise.resolve().then(async()=>{let l=[];for(let y of f){let B=await y.key;l.push({key:B,value:await y.value,alwaysSet:y.alwaysSet})}return l}).then(l=>k.mergeObjectSync(n,l)):k.mergeObjectSync(n,f)}get shape(){return this._def.shape()}strict(e){return h.errToObj,new x({...this._def,unknownKeys:\"strict\",...e!==void 0?{errorMap:(t,n)=>{var r,a,i,o;let f=(i=(a=(r=this._def).errorMap)===null||a===void 0?void 0:a.call(r,t,n).message)!==null&&i!==void 0?i:n.defaultError;return t.code===\"unrecognized_keys\"?{message:(o=h.errToObj(e).message)!==null&&o!==void 0?o:f}:{message:f}}}:{}})}strip(){return new x({...this._def,unknownKeys:\"strip\"})}passthrough(){return new x({...this._def,unknownKeys:\"passthrough\"})}extend(e){return new x({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){return new x({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:p.ZodObject})}setKey(e,t){return this.augment({[e]:t})}catchall(e){return new x({...this._def,catchall:e})}pick(e){let t={};return _.objectKeys(e).forEach(n=>{e[n]&&this.shape[n]&&(t[n]=this.shape[n])}),new x({...this._def,shape:()=>t})}omit(e){let t={};return _.objectKeys(this.shape).forEach(n=>{e[n]||(t[n]=this.shape[n])}),new x({...this._def,shape:()=>t})}deepPartial(){return q(this)}partial(e){let t={};return _.objectKeys(this.shape).forEach(n=>{let r=this.shape[n];e&&!e[n]?t[n]=r:t[n]=r.optional()}),new x({...this._def,shape:()=>t})}required(e){let t={};return _.objectKeys(this.shape).forEach(n=>{if(e&&!e[n])t[n]=this.shape[n];else{let a=this.shape[n];for(;a instanceof j;)a=a._def.innerType;t[n]=a}}),new x({...this._def,shape:()=>t})}keyof(){return Ne(_.objectKeys(this.shape))}};x.create=(s,e)=>new x({shape:()=>s,unknownKeys:\"strip\",catchall:R.create(),typeName:p.ZodObject,...g(e)});x.strictCreate=(s,e)=>new x({shape:()=>s,unknownKeys:\"strict\",catchall:R.create(),typeName:p.ZodObject,...g(e)});x.lazycreate=(s,e)=>new x({shape:s,unknownKeys:\"strip\",catchall:R.create(),typeName:p.ZodObject,...g(e)});var Y=class extends v{_parse(e){let{ctx:t}=this._processInputParams(e),n=this._def.options;function r(a){for(let o of a)if(o.result.status===\"valid\")return o.result;for(let o of a)if(o.result.status===\"dirty\")return t.common.issues.push(...o.ctx.common.issues),o.result;let i=a.map(o=>new S(o.ctx.common.issues));return u(t,{code:c.invalid_union,unionErrors:i}),m}if(t.common.async)return Promise.all(n.map(async a=>{let i={...t,common:{...t.common,issues:[]},parent:null};return{result:await a._parseAsync({data:t.data,path:t.path,parent:i}),ctx:i}})).then(r);{let a,i=[];for(let f of n){let l={...t,common:{...t.common,issues:[]},parent:null},y=f._parseSync({data:t.data,path:t.path,parent:l});if(y.status===\"valid\")return y;y.status===\"dirty\"&&!a&&(a={result:y,ctx:l}),l.common.issues.length&&i.push(l.common.issues)}if(a)return t.common.issues.push(...a.ctx.common.issues),a.result;let o=i.map(f=>new S(f));return u(t,{code:c.invalid_union,unionErrors:o}),m}}get options(){return this._def.options}};Y.create=(s,e)=>new Y({options:s,typeName:p.ZodUnion,...g(e)});var ue=s=>s instanceof Q?ue(s.schema):s instanceof I?ue(s.innerType()):s instanceof X?[s.value]:s instanceof A?s.options:s instanceof K?Object.keys(s.enum):s instanceof F?ue(s._def.innerType):s instanceof W?[void 0]:s instanceof J?[null]:null,ae=class extends v{_parse(e){let{ctx:t}=this._processInputParams(e);if(t.parsedType!==d.object)return u(t,{code:c.invalid_type,expected:d.object,received:t.parsedType}),m;let n=this.discriminator,r=t.data[n],a=this.optionsMap.get(r);return a?t.common.async?a._parseAsync({data:t.data,path:t.path,parent:t}):a._parseSync({data:t.data,path:t.path,parent:t}):(u(t,{code:c.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[n]}),m)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,t,n){let r=new Map;for(let a of t){let i=ue(a.shape[e]);if(!i)throw new Error(`A discriminator value for key \\`${e}\\` could not be extracted from all schema options`);for(let o of i){if(r.has(o))throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(o)}`);r.set(o,a)}}return new ae({typeName:p.ZodDiscriminatedUnion,discriminator:e,options:t,optionsMap:r,...g(n)})}};function ve(s,e){let t=$(s),n=$(e);if(s===e)return{valid:!0,data:s};if(t===d.object&&n===d.object){let r=_.objectKeys(e),a=_.objectKeys(s).filter(o=>r.indexOf(o)!==-1),i={...s,...e};for(let o of a){let f=ve(s[o],e[o]);if(!f.valid)return{valid:!1};i[o]=f.data}return{valid:!0,data:i}}else if(t===d.array&&n===d.array){if(s.length!==e.length)return{valid:!1};let r=[];for(let a=0;a<s.length;a++){let i=s[a],o=e[a],f=ve(i,o);if(!f.valid)return{valid:!1};r.push(f.data)}return{valid:!0,data:r}}else return t===d.date&&n===d.date&&+s==+e?{valid:!0,data:s}:{valid:!1}}var H=class extends v{_parse(e){let{status:t,ctx:n}=this._processInputParams(e),r=(a,i)=>{if(Te(a)||Te(i))return m;let o=ve(a.value,i.value);return o.valid?((Se(a)||Se(i))&&t.dirty(),{status:t.value,value:o.data}):(u(n,{code:c.invalid_intersection_types}),m)};return n.common.async?Promise.all([this._def.left._parseAsync({data:n.data,path:n.path,parent:n}),this._def.right._parseAsync({data:n.data,path:n.path,parent:n})]).then(([a,i])=>r(a,i)):r(this._def.left._parseSync({data:n.data,path:n.path,parent:n}),this._def.right._parseSync({data:n.data,path:n.path,parent:n}))}};H.create=(s,e,t)=>new H({left:s,right:e,typeName:p.ZodIntersection,...g(t)});var E=class extends v{_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==d.array)return u(n,{code:c.invalid_type,expected:d.array,received:n.parsedType}),m;if(n.data.length<this._def.items.length)return u(n,{code:c.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:\"array\"}),m;!this._def.rest&&n.data.length>this._def.items.length&&(u(n,{code:c.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:\"array\"}),t.dirty());let a=[...n.data].map((i,o)=>{let f=this._def.items[o]||this._def.rest;return f?f._parse(new N(n,i,n.path,o)):null}).filter(i=>!!i);return n.common.async?Promise.all(a).then(i=>k.mergeArray(t,i)):k.mergeArray(t,a)}get items(){return this._def.items}rest(e){return new E({...this._def,rest:e})}};E.create=(s,e)=>{if(!Array.isArray(s))throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");return new E({items:s,typeName:p.ZodTuple,rest:null,...g(e)})};var G=class extends v{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==d.object)return u(n,{code:c.invalid_type,expected:d.object,received:n.parsedType}),m;let r=[],a=this._def.keyType,i=this._def.valueType;for(let o in n.data)r.push({key:a._parse(new N(n,o,n.path,o)),value:i._parse(new N(n,n.data[o],n.path,o))});return n.common.async?k.mergeObjectAsync(t,r):k.mergeObjectSync(t,r)}get element(){return this._def.valueType}static create(e,t,n){return t instanceof v?new G({keyType:e,valueType:t,typeName:p.ZodRecord,...g(n)}):new G({keyType:O.create(),valueType:e,typeName:p.ZodRecord,...g(t)})}},ie=class extends v{_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==d.map)return u(n,{code:c.invalid_type,expected:d.map,received:n.parsedType}),m;let r=this._def.keyType,a=this._def.valueType,i=[...n.data.entries()].map(([o,f],l)=>({key:r._parse(new N(n,o,n.path,[l,\"key\"])),value:a._parse(new N(n,f,n.path,[l,\"value\"]))}));if(n.common.async){let o=new Map;return Promise.resolve().then(async()=>{for(let f of i){let l=await f.key,y=await f.value;if(l.status===\"aborted\"||y.status===\"aborted\")return m;(l.status===\"dirty\"||y.status===\"dirty\")&&t.dirty(),o.set(l.value,y.value)}return{status:t.value,value:o}})}else{let o=new Map;for(let f of i){let l=f.key,y=f.value;if(l.status===\"aborted\"||y.status===\"aborted\")return m;(l.status===\"dirty\"||y.status===\"dirty\")&&t.dirty(),o.set(l.value,y.value)}return{status:t.value,value:o}}}};ie.create=(s,e,t)=>new ie({valueType:e,keyType:s,typeName:p.ZodMap,...g(t)});var z=class extends v{_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==d.set)return u(n,{code:c.invalid_type,expected:d.set,received:n.parsedType}),m;let r=this._def;r.minSize!==null&&n.data.size<r.minSize.value&&(u(n,{code:c.too_small,minimum:r.minSize.value,type:\"set\",inclusive:!0,exact:!1,message:r.minSize.message}),t.dirty()),r.maxSize!==null&&n.data.size>r.maxSize.value&&(u(n,{code:c.too_big,maximum:r.maxSize.value,type:\"set\",inclusive:!0,exact:!1,message:r.maxSize.message}),t.dirty());let a=this._def.valueType;function i(f){let l=new Set;for(let y of f){if(y.status===\"aborted\")return m;y.status===\"dirty\"&&t.dirty(),l.add(y.value)}return{status:t.value,value:l}}let o=[...n.data.values()].map((f,l)=>a._parse(new N(n,f,n.path,l)));return n.common.async?Promise.all(o).then(f=>i(f)):i(o)}min(e,t){return new z({...this._def,minSize:{value:e,message:h.toString(t)}})}max(e,t){return new z({...this._def,maxSize:{value:e,message:h.toString(t)}})}size(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}};z.create=(s,e)=>new z({valueType:s,minSize:null,maxSize:null,typeName:p.ZodSet,...g(e)});var L=class extends v{constructor(){super(...arguments),this.validate=this.implement}_parse(e){let{ctx:t}=this._processInputParams(e);if(t.parsedType!==d.function)return u(t,{code:c.invalid_type,expected:d.function,received:t.parsedType}),m;function n(o,f){return me({data:o,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,pe(),le].filter(l=>!!l),issueData:{code:c.invalid_arguments,argumentsError:f}})}function r(o,f){return me({data:o,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,pe(),le].filter(l=>!!l),issueData:{code:c.invalid_return_type,returnTypeError:f}})}let a={errorMap:t.common.contextualErrorMap},i=t.data;return this._def.returns instanceof U?b(async(...o)=>{let f=new S([]),l=await this._def.args.parseAsync(o,a).catch(he=>{throw f.addIssue(n(o,he)),f}),y=await i(...l);return await this._def.returns._def.type.parseAsync(y,a).catch(he=>{throw f.addIssue(r(y,he)),f})}):b((...o)=>{let f=this._def.args.safeParse(o,a);if(!f.success)throw new S([n(o,f.error)]);let l=i(...f.data),y=this._def.returns.safeParse(l,a);if(!y.success)throw new S([r(l,y.error)]);return y.data})}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new L({...this._def,args:E.create(e).rest(Z.create())})}returns(e){return new L({...this._def,returns:e})}implement(e){return this.parse(e)}strictImplement(e){return this.parse(e)}static create(e,t,n){return new L({args:e||E.create([]).rest(Z.create()),returns:t||Z.create(),typeName:p.ZodFunction,...g(n)})}},Q=class extends v{get schema(){return this._def.getter()}_parse(e){let{ctx:t}=this._processInputParams(e);return this._def.getter()._parse({data:t.data,path:t.path,parent:t})}};Q.create=(s,e)=>new Q({getter:s,typeName:p.ZodLazy,...g(e)});var X=class extends v{_parse(e){if(e.data!==this._def.value){let t=this._getOrReturnCtx(e);return u(t,{received:t.data,code:c.invalid_literal,expected:this._def.value}),m}return{status:\"valid\",value:e.data}}get value(){return this._def.value}};X.create=(s,e)=>new X({value:s,typeName:p.ZodLiteral,...g(e)});function Ne(s,e){return new A({values:s,typeName:p.ZodEnum,...g(e)})}var A=class extends v{_parse(e){if(typeof e.data!=\"string\"){let t=this._getOrReturnCtx(e),n=this._def.values;return u(t,{expected:_.joinValues(n),received:t.parsedType,code:c.invalid_type}),m}if(this._def.values.indexOf(e.data)===-1){let t=this._getOrReturnCtx(e),n=this._def.values;return u(t,{received:t.data,code:c.invalid_enum_value,options:n}),m}return b(e.data)}get options(){return this._def.values}get enum(){let e={};for(let t of this._def.values)e[t]=t;return e}get Values(){let e={};for(let t of this._def.values)e[t]=t;return e}get Enum(){let e={};for(let t of this._def.values)e[t]=t;return e}extract(e){return A.create(e)}exclude(e){return A.create(this.options.filter(t=>!e.includes(t)))}};A.create=Ne;var K=class extends v{_parse(e){let t=_.getValidEnumValues(this._def.values),n=this._getOrReturnCtx(e);if(n.parsedType!==d.string&&n.parsedType!==d.number){let r=_.objectValues(t);return u(n,{expected:_.joinValues(r),received:n.parsedType,code:c.invalid_type}),m}if(t.indexOf(e.data)===-1){let r=_.objectValues(t);return u(n,{received:n.data,code:c.invalid_enum_value,options:r}),m}return b(e.data)}get enum(){return this._def.values}};K.create=(s,e)=>new K({values:s,typeName:p.ZodNativeEnum,...g(e)});var U=class extends v{unwrap(){return this._def.type}_parse(e){let{ctx:t}=this._processInputParams(e);if(t.parsedType!==d.promise&&t.common.async===!1)return u(t,{code:c.invalid_type,expected:d.promise,received:t.parsedType}),m;let n=t.parsedType===d.promise?t.data:Promise.resolve(t.data);return b(n.then(r=>this._def.type.parseAsync(r,{path:t.path,errorMap:t.common.contextualErrorMap})))}};U.create=(s,e)=>new U({type:s,typeName:p.ZodPromise,...g(e)});var I=class extends v{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===p.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){let{status:t,ctx:n}=this._processInputParams(e),r=this._def.effect||null;if(r.type===\"preprocess\"){let i=r.transform(n.data);return n.common.async?Promise.resolve(i).then(o=>this._def.schema._parseAsync({data:o,path:n.path,parent:n})):this._def.schema._parseSync({data:i,path:n.path,parent:n})}let a={addIssue:i=>{u(n,i),i.fatal?t.abort():t.dirty()},get path(){return n.path}};if(a.addIssue=a.addIssue.bind(a),r.type===\"refinement\"){let i=o=>{let f=r.refinement(o,a);if(n.common.async)return Promise.resolve(f);if(f instanceof Promise)throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");return o};if(n.common.async===!1){let o=this._def.schema._parseSync({data:n.data,path:n.path,parent:n});return o.status===\"aborted\"?m:(o.status===\"dirty\"&&t.dirty(),i(o.value),{status:t.value,value:o.value})}else return this._def.schema._parseAsync({data:n.data,path:n.path,parent:n}).then(o=>o.status===\"aborted\"?m:(o.status===\"dirty\"&&t.dirty(),i(o.value).then(()=>({status:t.value,value:o.value}))))}if(r.type===\"transform\")if(n.common.async===!1){let i=this._def.schema._parseSync({data:n.data,path:n.path,parent:n});if(!ge(i))return i;let o=r.transform(i.value,a);if(o instanceof Promise)throw new Error(\"Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.\");return{status:t.value,value:o}}else return this._def.schema._parseAsync({data:n.data,path:n.path,parent:n}).then(i=>ge(i)?Promise.resolve(r.transform(i.value,a)).then(o=>({status:t.value,value:o})):i);_.assertNever(r)}};I.create=(s,e,t)=>new I({schema:s,typeName:p.ZodEffects,effect:e,...g(t)});I.createWithPreprocess=(s,e,t)=>new I({schema:e,effect:{type:\"preprocess\",transform:s},typeName:p.ZodEffects,...g(t)});var j=class extends v{_parse(e){return this._getType(e)===d.undefined?b(void 0):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}};j.create=(s,e)=>new j({innerType:s,typeName:p.ZodOptional,...g(e)});var V=class extends v{_parse(e){return this._getType(e)===d.null?b(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}};V.create=(s,e)=>new V({innerType:s,typeName:p.ZodNullable,...g(e)});var F=class extends v{_parse(e){let{ctx:t}=this._processInputParams(e),n=t.data;return t.parsedType===d.undefined&&(n=this._def.defaultValue()),this._def.innerType._parse({data:n,path:t.path,parent:t})}removeDefault(){return this._def.innerType}};F.create=(s,e)=>new F({innerType:s,typeName:p.ZodDefault,defaultValue:typeof e.default==\"function\"?e.default:()=>e.default,...g(e)});var oe=class extends v{_parse(e){let{ctx:t}=this._processInputParams(e),n={...t,common:{...t.common,issues:[]}},r=this._def.innerType._parse({data:n.data,path:n.path,parent:{...n}});return ye(r)?r.then(a=>({status:\"valid\",value:a.status===\"valid\"?a.value:this._def.catchValue({get error(){return new S(n.common.issues)},input:n.data})})):{status:\"valid\",value:r.status===\"valid\"?r.value:this._def.catchValue({get error(){return new S(n.common.issues)},input:n.data})}}removeCatch(){return this._def.innerType}};oe.create=(s,e)=>new oe({innerType:s,typeName:p.ZodCatch,catchValue:typeof e.catch==\"function\"?e.catch:()=>e.catch,...g(e)});var ce=class extends v{_parse(e){if(this._getType(e)!==d.nan){let n=this._getOrReturnCtx(e);return u(n,{code:c.invalid_type,expected:d.nan,received:n.parsedType}),m}return{status:\"valid\",value:e.data}}};ce.create=s=>new ce({typeName:p.ZodNaN,...g(s)});var Fe=Symbol(\"zod_brand\"),_e=class extends v{_parse(e){let{ctx:t}=this._processInputParams(e),n=t.data;return this._def.type._parse({data:n,path:t.path,parent:t})}unwrap(){return this._def.type}},ee=class extends v{_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.common.async)return(async()=>{let a=await this._def.in._parseAsync({data:n.data,path:n.path,parent:n});return a.status===\"aborted\"?m:a.status===\"dirty\"?(t.dirty(),Re(a.value)):this._def.out._parseAsync({data:a.value,path:n.path,parent:n})})();{let r=this._def.in._parseSync({data:n.data,path:n.path,parent:n});return r.status===\"aborted\"?m:r.status===\"dirty\"?(t.dirty(),{status:\"dirty\",value:r.value}):this._def.out._parseSync({data:r.value,path:n.path,parent:n})}}static create(e,t){return new ee({in:e,out:t,typeName:p.ZodPipeline})}};var et={object:x.lazycreate},p;(function(s){s.ZodString=\"ZodString\",s.ZodNumber=\"ZodNumber\",s.ZodNaN=\"ZodNaN\",s.ZodBigInt=\"ZodBigInt\",s.ZodBoolean=\"ZodBoolean\",s.ZodDate=\"ZodDate\",s.ZodSymbol=\"ZodSymbol\",s.ZodUndefined=\"ZodUndefined\",s.ZodNull=\"ZodNull\",s.ZodAny=\"ZodAny\",s.ZodUnknown=\"ZodUnknown\",s.ZodNever=\"ZodNever\",s.ZodVoid=\"ZodVoid\",s.ZodArray=\"ZodArray\",s.ZodObject=\"ZodObject\",s.ZodUnion=\"ZodUnion\",s.ZodDiscriminatedUnion=\"ZodDiscriminatedUnion\",s.ZodIntersection=\"ZodIntersection\",s.ZodTuple=\"ZodTuple\",s.ZodRecord=\"ZodRecord\",s.ZodMap=\"ZodMap\",s.ZodSet=\"ZodSet\",s.ZodFunction=\"ZodFunction\",s.ZodLazy=\"ZodLazy\",s.ZodLiteral=\"ZodLiteral\",s.ZodEnum=\"ZodEnum\",s.ZodEffects=\"ZodEffects\",s.ZodNativeEnum=\"ZodNativeEnum\",s.ZodOptional=\"ZodOptional\",s.ZodNullable=\"ZodNullable\",s.ZodDefault=\"ZodDefault\",s.ZodCatch=\"ZodCatch\",s.ZodPromise=\"ZodPromise\",s.ZodBranded=\"ZodBranded\",s.ZodPipeline=\"ZodPipeline\"})(p||(p={}));var de=O.create,Oe=M.create,tt=ce.create,st=P.create,xe=te.create,nt=D.create,rt=se.create,at=W.create,it=J.create,ot=ne.create,ct=Z.create,dt=R.create,ut=re.create,Ee=C.create,w=x.create,lt=x.strictCreate,fe=Y.create,ft=ae.create,ht=H.create,pt=E.create,mt=G.create,gt=ie.create,yt=z.create,vt=L.create,_t=Q.create,T=X.create,xt=A.create,kt=K.create,bt=U.create,wt=I.create,Tt=j.create,St=V.create,Ct=I.createWithPreprocess,Nt=ee.create;var Ie=w({type:T(\"path\")}),It=w({type:T(\"domain\"),level:fe([T(\"tld\"),T(\"subdomain\"),Oe()])}),jt=w({type:T(\"query\"),parameter:de().default(\"lang\")}),qe=w({type:T(\"url\"),variant:fe([Ie]).default(Ie.parse({type:\"path\"}))}),Rt=w({type:T(\"cookie\"),key:de().default(\"language\")}),We=w({type:T(\"acceptLanguageHeader\")}),Je=w({type:T(\"navigator\")}),Ye=w({type:T(\"localStorage\"),key:de().default(\"language\")}),At=w({type:T(\"sessionStorage\"),key:de().default(\"language\")}),He=fe([qe,We,Je,Ye]),Ge=w({cache:T(\"build-time\").default(\"build-time\")}),Qe=w({debug:xe().default(!1),languageNegotiation:w({strict:xe().optional().default(!1),strategies:Ee(He).min(1,\"You must define at least one language negotiation strategy.\").transform(s=>s)}),resources:Ge.default({cache:\"build-time\"})}),ke=s=>Qe.parse(s);function be(s){return e=>t=>s({settings:e,env:t})}var Xe=be(({settings:s})=>({id:\"inlang.sdk-js\",config:async e=>({sdk:ke(s),ideExtension:e.ideExtension?e.ideExtension:Ke})})),Ke={messageReferenceMatchers:[async s=>{let e=/(?<!\\w){?i\\(['\"](?<messageId>\\S+)['\"]\\)}?/gm,t=s.documentText,n,r=[];for(;(n=e.exec(t))!==null;){let a=(t.slice(0,Math.max(0,n.index)).match(/\\n/g)||[]).length+1,i=n.index-t.lastIndexOf(`\n`,n.index-1),o=n.index+n[0].length-t.lastIndexOf(`\n`,n.index+n[0].length-1),f=(t.slice(0,Math.max(0,n.index+n[0].length)).match(/\\n/g)||[]).length+1;n.groups&&\"messageId\"in n.groups&&r.push({messageId:n.groups.messageId,position:{start:{line:a,character:i},end:{line:f,character:o}}})}return r}],extractMessageOptions:[{callback:s=>`{i(\"${s}\")}`}],documentSelectors:[{language:\"javascript\"},{language:\"typescript\"},{language:\"svelte\"}]};export{Xe as default,ke as validateSdkConfig};\n//! DON'T TOP-LEVEL IMPORT ESBUILD PLUGINS. USE DYNAMIC IMPORTS.\n//! See https://github.com/inlang/inlang/issues/486\n", "{\n\t\"name\": \"@inlang/sdk-js\",\n\t\"description\": \"The official Inlang SDK\",\n\t\"keywords\": [\n\t\t\"inlang\",\n\t\t\"sveltekit\",\n\t\t\"svelte\",\n\t\t\"i18n\",\n\t\t\"internationalization\",\n\t\t\"L10n\",\n\t\t\"localization\",\n\t\t\"unplugin\",\n\t\t\"vite\"\n\t],\n\t\"version\": \"0.6.6\",\n\t\"scripts\": {\n\t\t\"dev\": \"npm-run-all --print-label --parallel dev:runtime dev:plugin tsc:watch\",\n\t\t\"build\": \"rm -rf dist && npm run build:runtime && npm run build:plugin\",\n\t\t\"dev:runtime\": \"tsc --project ./tsconfig.build.json --watch\",\n\t\t\"build:runtime\": \"tsc --project ./tsconfig.build.json\",\n\t\t\"dev:plugin\": \"DEV=true node ./build.js\",\n\t\t\"build:plugin\": \"node ./build.js && tsc -p tsconfig.build.plugin.json\",\n\t\t\"---- TEST ----------------------------------------------------------\": \"\",\n\t\t\"test\": \"tsc --noEmit && vitest run --passWithNoTests --coverage\",\n\t\t\"test:watch\": \"npm-run-all --print-label --parallel tsc:watch vitest:watch tsc:watch:plugin\",\n\t\t\"tsc:watch\": \"tsc --noEmit --watch\",\n\t\t\"tsc:watch:plugin\": \"tsc -p tsconfig.build.plugin.json --watch\",\n\t\t\"vitest:watch\": \"vitest watch --passWithNoTests --coverage\",\n\t\t\"---- LINT ----------------------------------------------------------\": \"\",\n\t\t\"lint\": \"cd ../.. && npm run lint:base ./source-code/sdk-js\",\n\t\t\"lint:fix\": \"cd ../.. && npm run lint:fix:base ./source-code/sdk-js\",\n\t\t\"format\": \"cd ../.. && npm run format:base ./source-code/sdk-js\",\n\t\t\"format:fix\": \"cd ../.. && npm run format:fix:base ./source-code/sdk-js\",\n\t\t\"---- OTHER ---------------------------------------------------------\": \"\",\n\t\t\"clean\": \"rm -rf ./dist ./.turbo ./coverage ./node_modules\"\n\t},\n\t\"dependencies\": {\n\t\t\"@inlang/core\": \"*\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@inlang/sdk-js-plugin\": \"*\",\n\t\t\"@sveltejs/kit\": \"^1.16.3\",\n\t\t\"@types/estree\": \"^1.0.1\",\n\t\t\"astring\": \"^1.8.4\",\n\t\t\"deepmerge-ts\": \"^5.1.0\",\n\t\t\"esbuild\": \"^0.17.19\",\n\t\t\"estree-walker\": \"^3.0.3\",\n\t\t\"magic-string\": \"^0.30.0\",\n\t\t\"magicast\": \"0.2.4\",\n\t\t\"msw\": \"^1.2.1\",\n\t\t\"npm-run-all\": \"^4.1.5\",\n\t\t\"recast\": \"^0.22.0\",\n\t\t\"svelte\": \"^3.59.1\",\n\t\t\"svelte-preprocess\": \"^5.0.3\",\n\t\t\"ts-dedent\": \"^2.2.0\",\n\t\t\"vitefu\": \"^0.2.4\"\n\t},\n\t\"peerDependencies\": {\n\t\t\"@sveltejs/kit\": \"^1.0.0\",\n\t\t\"svelte\": \"^3.0.0\"\n\t},\n\t\"exports\": {\n\t\t\".\": \"./dist/index.js\",\n\t\t\"./adapter-sveltekit\": \"./dist/adapter-sveltekit/index.js\",\n\t\t\"./adapter-sveltekit/*\": \"./dist/adapter-sveltekit/runtime/*/index.js\",\n\t\t\"./detectors\": \"./dist/detectors/index.js\",\n\t\t\"./detectors/*\": \"./dist/detectors/detectors/*/index.js\",\n\t\t\"./runtime\": \"./dist/runtime/index.js\"\n\t},\n\t\"module\": \"dist/index.js\",\n\t\"types\": \"dist/index.d.ts\",\n\t\"typesVersions\": {\n\t\t\"*\": {\n\t\t\t\"adapter-sveltekit\": [\n\t\t\t\t\"./dist/adapter-sveltekit/index.d.ts\"\n\t\t\t],\n\t\t\t\"adapter-sveltekit/client\": [\n\t\t\t\t\"./dist/adapter-sveltekit/runtime/client/index.d.ts\"\n\t\t\t],\n\t\t\t\"adapter-sveltekit/client/not-reactive\": [\n\t\t\t\t\"./dist/adapter-sveltekit/runtime/client/not-reactive/index.d.ts\"\n\t\t\t],\n\t\t\t\"adapter-sveltekit/client/reactive\": [\n\t\t\t\t\"./dist/adapter-sveltekit/runtime/client/reactive/index.d.ts\"\n\t\t\t],\n\t\t\t\"adapter-sveltekit/server\": [\n\t\t\t\t\"./dist/adapter-sveltekit/runtime/server/index.d.ts\"\n\t\t\t],\n\t\t\t\"adapter-sveltekit/shared\": [\n\t\t\t\t\"./dist/adapter-sveltekit/runtime/shared/index.d.ts\"\n\t\t\t],\n\t\t\t\"detectors\": [\n\t\t\t\t\"./dist/detectors/index.d.ts\"\n\t\t\t],\n\t\t\t\"runtime\": [\n\t\t\t\t\"./dist/runtime/index.d.ts\"\n\t\t\t]\n\t\t}\n\t},\n\t\"files\": [\n\t\t\"./dist\"\n\t],\n\t\"type\": \"module\",\n\t\"engines\": {\n\t\t\"node\": \">=18\"\n\t},\n\t\"publishConfig\": {\n\t\t\"access\": \"public\"\n\t},\n\t\"license\": \"Apache-2.0\"\n}\n", "import fs from 'node:fs/promises'\nimport fsSync from 'node:fs'\nimport path from 'node:path'\nimport {\n  isDepIncluded,\n  isDepExcluded,\n  isDepNoExternaled,\n  isDepExternaled\n} from './sync.cjs'\n\n/** @type {import('pnpapi')} */\nlet pnp\nif (process.versions.pnp) {\n  try {\n    const { createRequire } = (await import('module')).default\n    pnp = createRequire(import.meta.url)('pnpapi')\n  } catch {}\n}\n\nexport { isDepIncluded, isDepExcluded, isDepNoExternaled, isDepExternaled }\n\n/** @type {import('..').crawlFrameworkPkgs} */\nexport async function crawlFrameworkPkgs(options) {\n  const pkgJsonPath = await findClosestPkgJsonPath(options.root)\n  if (!pkgJsonPath) {\n    // @ts-expect-error don't throw in deno as package.json is not required\n    if (typeof Deno !== 'undefined') {\n      return {\n        optimizeDeps: { include: [], exclude: [] },\n        ssr: { noExternal: [], external: [] }\n      }\n    } else {\n      throw new Error(`Cannot find package.json from ${options.root}`)\n    }\n  }\n  const pkgJson = await readJson(pkgJsonPath).catch((e) => {\n    throw new Error(`Unable to read ${pkgJsonPath}`, { cause: e })\n  })\n\n  /** @type {string[]} */\n  let optimizeDepsInclude = []\n  /** @type {string[]} */\n  let optimizeDepsExclude = []\n  /** @type {string[]} */\n  let ssrNoExternal = []\n  /** @type {string[]} */\n  let ssrExternal = []\n\n  await crawl(pkgJsonPath, pkgJson)\n\n  // respect vite user config\n  if (options.viteUserConfig) {\n    // remove includes that are explicitly excluded in optimizeDeps\n    const _optimizeDepsExclude = options.viteUserConfig?.optimizeDeps?.exclude\n    if (_optimizeDepsExclude) {\n      optimizeDepsInclude = optimizeDepsInclude.filter(\n        (dep) => !isDepExcluded(dep, _optimizeDepsExclude)\n      )\n    }\n    // remove excludes that are explicitly included in optimizeDeps\n    const _optimizeDepsInclude = options.viteUserConfig?.optimizeDeps?.include\n    if (_optimizeDepsInclude) {\n      optimizeDepsExclude = optimizeDepsExclude.filter(\n        (dep) => !isDepIncluded(dep, _optimizeDepsInclude)\n      )\n    }\n    // remove noExternals that are explicitly externalized\n    const _ssrExternal = options.viteUserConfig?.ssr?.external\n    if (_ssrExternal) {\n      ssrNoExternal = ssrNoExternal.filter(\n        (dep) => !isDepExternaled(dep, _ssrExternal)\n      )\n    }\n    // remove externals that are explicitly noExternal\n    const _ssrNoExternal = options.viteUserConfig?.ssr?.noExternal\n    if (_ssrNoExternal) {\n      ssrExternal = ssrExternal.filter(\n        (dep) => !isDepNoExternaled(dep, _ssrNoExternal)\n      )\n    }\n  }\n\n  return {\n    optimizeDeps: {\n      include: optimizeDepsInclude,\n      exclude: optimizeDepsExclude\n    },\n    ssr: {\n      noExternal: ssrNoExternal,\n      external: ssrExternal\n    }\n  }\n\n  /**\n   * crawl the package.json dependencies for framework packages. rules:\n   * 1. a framework package should be `optimizeDeps.exclude` and `ssr.noExternal`.\n   * 2. the deps of the framework package should be `optimizeDeps.include` and `ssr.external`\n   *    unless the dep is also a framework package, in which case do no1 & no2 recursively.\n   * 3. any non-framework packages that aren't imported by a framework package can be skipped entirely.\n   * 4. a semi-framework package is like a framework package, except it isn't `optimizeDeps.exclude`,\n   *    but only applies `ssr.noExternal`.\n   * @param {string} pkgJsonPath\n   * @param {Record<string, any>} pkgJson\n   * @param {string[]} [parentDepNames]\n   */\n  async function crawl(pkgJsonPath, pkgJson, parentDepNames = []) {\n    const isRoot = parentDepNames.length === 0\n\n    /** @type {string[]} */\n    let deps = [\n      ...Object.keys(pkgJson.dependencies || {}),\n      ...(isRoot ? Object.keys(pkgJson.devDependencies || {}) : [])\n    ]\n\n    deps = deps.filter((dep) => {\n      // skip circular deps\n      if (parentDepNames.includes(dep)) {\n        return false\n      }\n\n      const isFrameworkPkg = options.isFrameworkPkgByName?.(dep)\n      const isSemiFrameworkPkg = options.isSemiFrameworkPkgByName?.(dep)\n      if (isFrameworkPkg) {\n        // framework packages should be excluded from optimization as esbuild can't handle them.\n        // otherwise it'll cause https://github.com/vitejs/vite/issues/3910\n        optimizeDepsExclude.push(dep)\n        // framework packages should be noExternal so that they go through vite's transformation\n        // pipeline, since nodejs can't support them.\n        ssrNoExternal.push(dep)\n      } else if (isSemiFrameworkPkg) {\n        // semi-framework packages should do the same except for optimization exclude as they\n        // aren't needed to work (they don't contain raw framework components)\n        ssrNoExternal.push(dep)\n      }\n\n      // only those that are explictly false can skip crawling since we don't need to do anything\n      // special for them\n      if (isFrameworkPkg === false || isSemiFrameworkPkg === false) {\n        return false\n      }\n      // if `true`, we need to crawl the nested deps to deep include and ssr externalize them in dev.\n      // if `undefined`, it's the same as \"i don't know\". we need to crawl and find the package.json\n      // to find out.\n      else {\n        return true\n      }\n    })\n\n    const promises = deps.map(async (dep) => {\n      const depPkgJsonPath = await findDepPkgJsonPath(dep, pkgJsonPath)\n      if (!depPkgJsonPath) return\n      const depPkgJson = await readJson(depPkgJsonPath).catch(() => {})\n      if (!depPkgJson) return\n\n      // fast path if this dep is already a framework dep based on the filter condition above\n      const cachedIsFrameworkPkg = ssrNoExternal.includes(dep)\n      if (cachedIsFrameworkPkg) {\n        return crawl(depPkgJsonPath, depPkgJson, parentDepNames.concat(dep))\n      }\n\n      // check if this dep is a framework dep, if so, track and crawl it\n      const isFrameworkPkg = options.isFrameworkPkgByJson?.(depPkgJson)\n      const isSemiFrameworkPkg = options.isSemiFrameworkPkgByJson?.(depPkgJson)\n      if (isFrameworkPkg || isSemiFrameworkPkg) {\n        // see explanation in filter condition above\n        if (isFrameworkPkg) {\n          optimizeDepsExclude.push(dep)\n          ssrNoExternal.push(dep)\n        } else if (isSemiFrameworkPkg) {\n          ssrNoExternal.push(dep)\n        }\n        return crawl(depPkgJsonPath, depPkgJson, parentDepNames.concat(dep))\n      }\n\n      // if we're crawling in a non-root state, the parent is 100% a framework package\n      // because of the above if block. in this case, if it's dep of a non-framework\n      // package, handle special cases for them.\n      if (!isRoot) {\n        // deep include it if it's a CJS package, so it becomes ESM and vite is happy.\n        if (await pkgNeedsOptimization(depPkgJson, depPkgJsonPath)) {\n          optimizeDepsInclude.push(parentDepNames.concat(dep).join(' > '))\n        }\n        // also externalize it in dev so it doesn't trip vite's SSR transformation.\n        // we do in dev only as build cannot access deep external packages in strict\n        // dependency installations, such as pnpm.\n        if (!options.isBuild && !ssrExternal.includes(dep)) {\n          ssrExternal.push(dep)\n        }\n      }\n    })\n\n    await Promise.all(promises)\n  }\n}\n\n/** @type {import('..').findDepPkgJsonPath} */\nexport async function findDepPkgJsonPath(dep, parent) {\n  if (pnp) {\n    const depRoot = pnp.resolveToUnqualified(dep, parent)\n    if (!depRoot) return undefined\n    return path.join(depRoot, 'package.json')\n  }\n\n  let root = await findClosestPkgJsonPath(parent)\n  if (!root) return undefined\n  root = path.dirname(root)\n  while (root) {\n    const pkg = path.join(root, 'node_modules', dep, 'package.json')\n    try {\n      await fs.access(pkg)\n      // use 'node:fs' version to match 'vite:resolve' and avoid realpath.native quirk\n      // https://github.com/sveltejs/vite-plugin-svelte/issues/525#issuecomment-1355551264\n      return fsSync.realpathSync(pkg)\n    } catch {}\n    const nextRoot = path.dirname(root)\n    if (nextRoot === root) break\n    root = nextRoot\n  }\n  return undefined\n}\n\n/** @type {import('..').findClosestPkgJsonPath} */\nexport async function findClosestPkgJsonPath(dir, predicate = undefined) {\n  if (dir.endsWith('package.json')) {\n    dir = path.dirname(dir)\n  }\n  while (dir) {\n    const pkg = path.join(dir, 'package.json')\n    try {\n      const stat = await fs.stat(pkg)\n      if (stat.isFile() && (!predicate || (await predicate(pkg)))) {\n        return pkg\n      }\n    } catch {}\n    const nextDir = path.dirname(dir)\n    if (nextDir === dir) break\n    dir = nextDir\n  }\n  return undefined\n}\n\n/** @type {import('..').pkgNeedsOptimization} */\nexport async function pkgNeedsOptimization(pkgJson, pkgJsonPath) {\n  // only optimize if is cjs, using the below as heuristic\n  // see https://github.com/sveltejs/vite-plugin-svelte/issues/162\n  if (pkgJson.module || pkgJson.exports) return false\n  // if have main, ensure entry is js so vite can prebundle it\n  // see https://github.com/sveltejs/vite-plugin-svelte/issues/233\n  if (pkgJson.main) {\n    const entryExt = path.extname(pkgJson.main)\n    return !entryExt || entryExt === '.js' || entryExt === '.cjs'\n  }\n  // check if has implicit index.js entrypoint to prebundle\n  // see https://github.com/sveltejs/vite-plugin-svelte/issues/281\n  // see https://github.com/solidjs/vite-plugin-solid/issues/70#issuecomment-1306488154\n  try {\n    await fs.access(path.join(path.dirname(pkgJsonPath), 'index.js'))\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * @param {string} findDepPkgJsonPath\n * @returns {Promise<Record<string, any>>}\n */\nasync function readJson(findDepPkgJsonPath) {\n  return JSON.parse(await fs.readFile(findDepPkgJsonPath, 'utf8'))\n}\n", "import path, { normalize } from \"node:path\"\nimport type { TransformConfig } from \"./config.js\"\n\nexport type FileType =\n\t| \"hooks.server.js\"\n\t| \"[language].json\"\n\t| \"+server.js\"\n\t| \"+layout.server.js\"\n\t| \"+layout.js\"\n\t| \"+layout.svelte\"\n\t| \"+page.server.js\"\n\t| \"+page.js\"\n\t| \"+page.svelte\"\n\t| \"*.server.js\"\n\t| \"*.js\"\n\t| \"*.svelte\"\n\nexport type FileInformation = {\n\ttype: FileType\n\troot: boolean\n}\n\nconst scriptExtensions = [\".js\", \".ts\"]\n\nexport const getFileInformation = (\n\tconfig: TransformConfig,\n\trawId: string,\n): FileInformation | undefined => {\n\tconst id = normalize(rawId)\n\n\tif (\n\t\t!id.startsWith(config.cwdFolderPath) ||\n\t\tid.startsWith(path.resolve(config.cwdFolderPath, \"node_modules\")) ||\n\t\tid.startsWith(path.resolve(config.cwdFolderPath, \".svelte-kit\"))\n\t)\n\t\treturn undefined\n\n\tif (scriptExtensions.map((ext) => `${config.svelteKit.files.serverHooks}${ext}`).includes(id)) {\n\t\treturn {\n\t\t\ttype: \"hooks.server.js\",\n\t\t\troot: true,\n\t\t}\n\t}\n\n\tconst { dir, name, ext } = path.parse(id)\n\tconst root = dir === config.svelteKit.files.routes\n\n\tif (\n\t\tdir === path.resolve(config.svelteKit.files.routes, \"inlang\", \"[language].json\") &&\n\t\tname === \"+server\" &&\n\t\tscriptExtensions.includes(ext)\n\t) {\n\t\treturn {\n\t\t\ttype: \"[language].json\",\n\t\t\troot: true,\n\t\t}\n\t}\n\n\tif (name === \"+server\" && scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"+server.js\",\n\t\t\troot,\n\t\t}\n\t}\n\n\tif (name === \"+layout.server\" && scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"+layout.server.js\",\n\t\t\troot,\n\t\t}\n\t}\n\tif (name === \"+layout\" && scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"+layout.js\",\n\t\t\troot,\n\t\t}\n\t}\n\tif (name === \"+layout\" && ext === \".svelte\") {\n\t\treturn {\n\t\t\ttype: \"+layout.svelte\",\n\t\t\troot,\n\t\t}\n\t}\n\n\tif (name === \"+page.server\" && scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"+page.server.js\",\n\t\t\troot,\n\t\t}\n\t}\n\tif (name === \"+page\" && scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"+page.js\",\n\t\t\troot,\n\t\t}\n\t}\n\tif (name === \"+page\" && ext === \".svelte\") {\n\t\treturn {\n\t\t\ttype: \"+page.svelte\",\n\t\t\troot,\n\t\t}\n\t}\n\n\tif (name.endsWith(\".server\") && scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"*.server.js\",\n\t\t\troot: false,\n\t\t}\n\t}\n\n\tif (scriptExtensions.includes(ext)) {\n\t\treturn {\n\t\t\ttype: \"*.js\",\n\t\t\troot: false,\n\t\t}\n\t}\n\n\tif (ext === \".svelte\") {\n\t\treturn {\n\t\t\ttype: \"*.svelte\",\n\t\t\troot: false,\n\t\t}\n\t}\n\n\treturn undefined\n}\n", "import { dedent } from \"ts-dedent\"\nimport type { TransformConfig } from \"../config.js\"\n\n// TODO: @benjaminpreiss: transform\nexport const transformJs = (config: TransformConfig, code: string) => {\n\tif (code.includes(\"'@inlang/sdk-js'\") || code.includes('\"@inlang/sdk-js\"')) {\n\t\tthrow Error(dedent`\n\t\t\tIt is currently not supported to import something from '@inlang/sdk-js' in this file. You can use the following code to make it work:\n\n\t\t\t// client code${\n\t\t\t\tconfig.languageInUrl\n\t\t\t\t\t? \"\"\n\t\t\t\t\t: dedent`\n\t\t\timport { get } from \"svelte/store\"\n\t\t\t`\n\t\t\t}\n\t\t\timport { getRuntimeFromContext } from \"@inlang/sdk-js/adapter-sveltekit/client/${\n\t\t\t\tconfig.languageInUrl ? \"not-reactive\" : `reactive`\n\t\t\t}\"\n\n\t\t\texport const clientFn = () => {\n\t\t\t\tconst { i } = getRuntimeFromContext()\n\t\t\t\tconsole.log(${config.languageInUrl ? \"i\" : `get(i)`}('hello.inlang'))\n\t\t\t}\n\n\t\t\t// server code\n\t\t\t// you need to pass in the function as a parameter\n\t\t\texport const serverFn = (/** @type { import('@inlang/sdk-js/runtime').InlangFunction } */ i) => {\n\t\t\t\tconsole.log(i('hello.inlang'))\n\t\t\t}\n\t\t`)\n\t}\n\treturn code\n}\n", "import type { TransformConfig } from \"../config.js\"\nimport { parse, preprocess } from \"svelte/compiler\"\nimport { parseModule, generateCode } from \"magicast\"\nimport { deepMergeObject } from \"magicast/helpers\"\nimport { types } from \"recast\"\nimport {\n\tgetReactiveImportIdentifiers,\n\tgetRootReferenceIndexes,\n\tinitImportedVariablesAst,\n\tmakeJsReactive,\n\tmakeMarkupReactive,\n\tvariableDeclarationAst,\n} from \"../../../helpers/ast.js\"\nimport MagicStringImport from \"magic-string\"\nimport { vitePreprocess } from \"@sveltejs/kit/vite\"\nimport { getSdkImportedModules } from \"../../../helpers/inlangAst.js\"\n\n// the type definitions don't match\nconst MagicString = MagicStringImport as unknown as typeof MagicStringImport.default\n\nexport const transformSvelte = async (config: TransformConfig, code: string): Promise<string> => {\n\tconst n = types.namedTypes\n\n\tconst requiredImports = config.languageInUrl\n\t\t? `import { getRuntimeFromContext } from \"@inlang/sdk-js/adapter-sveltekit/client/not-reactive\";`\n\t\t: `import { getRuntimeFromContext } from \"@inlang/sdk-js/adapter-sveltekit/client/reactive\";`\n\n\tconst reactiveImportIdentifiers: string[] = []\n\n\t// First, we need to remove typescript statements from script tag\n\tconst codeWithoutTypes = (await preprocess(code, vitePreprocess({ script: true, style: true })))\n\t\t.code\n\n\t// Insert script tag if we don't have one\n\tconst svelteAst = parse(codeWithoutTypes)\n\t// TODO @benjaminpreiss I wonder how we could include adding the empty script tag to the sourcemap\n\t// TODO @benjaminpreiss Find out, why we have to add the lang=\"ts\" attribute below... Otherwise preprocess doesn't recognize the script tag :/\n\tconst codeWithScriptTag = !svelteAst.instance\n\t\t? `<script>\n// Inserted by inlang\n</script>\n${codeWithoutTypes}`\n\t\t: codeWithoutTypes\n\n\tconst processedScript = await preprocess(codeWithScriptTag, {\n\t\tscript: async (options) => {\n\t\t\tconst ast = parseModule(options.content, {\n\t\t\t\tsourceFileName: config.sourceFileName,\n\t\t\t})\n\t\t\tconst importsAst = parseModule(requiredImports)\n\t\t\tif (!options.attributes.context) {\n\t\t\t\t// Deep merge imports that we need\n\t\t\t\tdeepMergeObject(ast, importsAst)\n\t\t\t}\n\n\t\t\t// Remove import \"@inlang/sdk-js\" but save the aliases of all imports\n\t\t\tconst importNames = getSdkImportedModules(ast.$ast)\n\t\t\treactiveImportIdentifiers.push(...getReactiveImportIdentifiers(importNames))\n\t\t\tconst usageIndexes = getRootReferenceIndexes(ast.$ast, [...importNames, [\"data\", \"data\"]])\n\t\t\t// prefix language and i aliases with $ if reactive\n\t\t\tif (!config.languageInUrl) makeJsReactive(ast.$ast, reactiveImportIdentifiers)\n\t\t\t// Insert all variable declarations after the injected import for getRuntimeFromContext\n\t\t\tif (n.Program.check(ast.$ast)) {\n\t\t\t\tast.$ast.body.splice(\n\t\t\t\t\tusageIndexes?.[0] ?? ast.$ast.body.length,\n\t\t\t\t\t0,\n\t\t\t\t\t...([variableDeclarationAst(importNames), initImportedVariablesAst(importNames)].filter(\n\t\t\t\t\t\t(n) => n !== undefined,\n\t\t\t\t\t) as types.namedTypes.ExpressionStatement[]),\n\t\t\t\t)\n\t\t\t}\n\t\t\tconst generated = generateCode(ast, {\n\t\t\t\tsourceMapName: config.sourceMapName,\n\t\t\t})\n\n\t\t\treturn { ...options, ...generated }\n\t\t},\n\t})\n\n\tconst processedMarkup = await preprocess(processedScript.code, {\n\t\tmarkup: (options) => {\n\t\t\tconst parsed = parse(options.content)\n\t\t\tconst { instance, module } = parsed\n\t\t\t// We already iterated over .instance and .module\n\t\t\tparsed.instance = undefined\n\t\t\tparsed.module = undefined\n\t\t\t// Find locations of nodes with i or language\n\t\t\tconst s = new MagicString(options.content)\n\t\t\tif (!config.languageInUrl) makeMarkupReactive(parsed, s, reactiveImportIdentifiers)\n\t\t\tparsed.instance = instance\n\t\t\tparsed.module = module\n\t\t\tconst map = s.generateMap({\n\t\t\t\tsource: config.sourceFileName,\n\t\t\t\tfile: config.sourceMapName,\n\t\t\t\tincludeContent: true,\n\t\t\t})\n\t\t\tconst code = s.toString()\n\t\t\treturn { code, map }\n\t\t},\n\t})\n\n\treturn processedMarkup.code\n}\n", "import { b as builders } from './shared/magicast.91b07a20.mjs';\nimport 'recast';\nimport 'node:fs';\nimport '@babel/parser';\n\nfunction deepMergeObject(magicast, object) {\n  if (typeof object === \"object\") {\n    for (const key in object) {\n      if (typeof object[key] === \"object\" && magicast[key] !== undefined) {\n        // It could happen that magicast[key] is not defined\n        if(!magicast[key]) magicast[key] = {}\n        deepMergeObject(magicast[key], object[key]);\n      } else {\n        magicast[key] = object[key];\n      }\n    }\n  }\n}\n\nfunction getDefaultExportOptions(magicast) {\n  return magicast.exports.default.$type === \"function-call\" ? magicast.exports.default.$args[0] : magicast.exports.default;\n}\n\nfunction addNuxtModule(magicast, name, optionsKey, options) {\n  const config = getDefaultExportOptions(magicast);\n  config.modules || (config.modules = []);\n  if (!config.modules.includes(name)) {\n    config.modules.push(name);\n  }\n  if (optionsKey) {\n    config[optionsKey] || (config[optionsKey] = {});\n    deepMergeObject(config[optionsKey], options);\n  }\n}\n\nfunction addVitePlugin(magicast, plugin) {\n  const config = getDefaultExportOptions(magicast);\n  config.plugins || (config.plugins = []);\n  config.plugins.push(\n    plugin.options ? builders.functionCall(plugin.constructor, plugin.options) : builders.functionCall(plugin.constructor)\n  );\n  magicast.imports.$add({\n    from: plugin.from,\n    local: plugin.constructor,\n    imported: plugin.imported || \"default\"\n  });\n  return true;\n}\nfunction findVitePluginCall(magicast, plugin) {\n  const _plugin = typeof plugin === \"string\" ? { from: plugin, imported: \"default\" } : plugin;\n  const config = getDefaultExportOptions(magicast);\n  const constructor = magicast.imports.$items.find(\n    (i) => i.from === _plugin.from && i.imported === (_plugin.imported || \"default\")\n  )?.local;\n  return config.plugins?.find(\n    (p) => p && p.$type === \"function-call\" && p.$callee === constructor\n  );\n}\nfunction updateVitePluginConfig(magicast, plugin, handler) {\n  const item = findVitePluginCall(magicast, plugin);\n  if (!item) {\n    return false;\n  }\n  if (typeof handler === \"function\") {\n    item.$args = handler(item.$args);\n  } else if (item.$args[0]) {\n    deepMergeObject(item.$args[0], handler);\n  } else {\n    item.$args[0] = handler;\n  }\n  return true;\n}\n\nexport { addNuxtModule, addVitePlugin, deepMergeObject, findVitePluginCall, getDefaultExportOptions, updateVitePluginConfig };\n", "/**\n * @typedef { import('estree').Node} Node\n * @typedef {{\n *   skip: () => void;\n *   remove: () => void;\n *   replace: (node: Node) => void;\n * }} WalkerContext\n */\n\nexport class WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t * @param {Node} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent && prop) {\n\t\t\tif (index != null) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop])[index] = node;\n\t\t\t} else {\n\t\t\t\t/** @type {Node} */ (parent[prop]) = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent && prop) {\n\t\t\tif (index !== null && index !== undefined) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop]).splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n", "import { WalkerBase } from './walker.js';\n\n/**\n * @typedef { import('estree').Node} Node\n * @typedef { import('./walker.js').WalkerContext} WalkerContext\n * @typedef {(\n *    this: WalkerContext,\n *    node: Node,\n *    parent: Node | null,\n *    key: string | number | symbol | null | undefined,\n *    index: number | null | undefined\n * ) => void} SyncHandler\n */\n\nexport class SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} [enter]\n\t * @param {SyncHandler} [leave]\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Node} node\n\t * @param {Parent | null} parent\n\t * @param {keyof Parent} [prop]\n\t * @param {number | null} [index]\n\t * @returns {Node | null}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\t/** @type {keyof Node} */\n\t\t\tlet key;\n\n\t\t\tfor (key in node) {\n\t\t\t\t/** @type {unknown} */\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tconst nodes = /** @type {Array<unknown>} */ (value);\n\t\t\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\t\t\tconst item = nodes[i];\n\t\t\t\t\t\t\tif (isNode(item)) {\n\t\t\t\t\t\t\t\tif (!this.visit(item, node, key, i)) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isNode(value)) {\n\t\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n/**\n * Ducktype a node.\n *\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n\treturn (\n\t\tvalue !== null && typeof value === 'object' && 'type' in value && typeof value.type === 'string'\n\t);\n}\n", "import { SyncWalker } from './sync.js';\nimport { AsyncWalker } from './async.js';\n\n/**\n * @typedef {import('estree').Node} Node\n * @typedef {import('./sync.js').SyncHandler} SyncHandler\n * @typedef {import('./async.js').AsyncHandler} AsyncHandler\n */\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {Node | null}\n */\nexport function walk(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: AsyncHandler\n *   leave?: AsyncHandler\n * }} walker\n * @returns {Promise<Node | null>}\n */\nexport async function asyncWalk(ast, { enter, leave }) {\n\tconst instance = new AsyncWalker(enter, leave);\n\treturn await instance.visit(ast, null);\n}\n", "import type {\n\tExpression,\n\tIdentifier,\n\tImportDeclaration,\n\tImportSpecifier,\n\tNode,\n\tProgram,\n} from \"estree\"\nimport type { Result } from \"@inlang/core/utilities\"\nimport { walk as jsWalk, type SyncHandler } from \"estree-walker\"\nimport { walk as svelteWalk } from \"svelte/compiler\"\nimport type { Ast } from \"../../../../node_modules/svelte/types/compiler/interfaces.js\"\nimport { types } from \"recast\"\nimport { parseModule } from \"magicast\"\nimport type MagicStringImport from \"magic-string\"\nimport type { ExpressionKind } from \"ast-types/gen/kinds.js\"\n\nexport class FindAstError extends Error {\n\treadonly #id = \"FindAstException\"\n}\n\ntype SyncHandlerParams = Parameters<SyncHandler>\n\ntype FindAstConditionParameter<N extends types.namedTypes.Node | Node> = {\n\tnode?: N | null\n\tparent?: types.namedTypes.Node | Node | null\n\tkey?: SyncHandlerParams[2]\n\tindex?: SyncHandlerParams[3]\n}\n\ntype FindAstCondition<N extends types.namedTypes.Node | Node> = (\n\tparameter: FindAstConditionParameter<N>,\n) => boolean\n\nexport type NodeInfoMapEntry<P extends Node | types.namedTypes.Node | null> = {\n\tparent: P\n\tkey: P extends null ? undefined | null : keyof P\n\tindex: number | null | undefined\n\trunOnNode: boolean\n}\n\nexport type NodeInfoMap<P extends Node | types.namedTypes.Node | null> = Map<\n\tNode | types.namedTypes.Node,\n\tNodeInfoMapEntry<P>\n>\n\nexport type RunOn<N extends types.namedTypes.Node | Node, T> = (\n\tnode: FindAstConditionParameter<N>[\"node\"],\n) => ((meta: NodeInfoMap<types.namedTypes.Node | Node | null>) => T) | undefined\n\ntype FindAst<T> = <W extends types.namedTypes.Node | Node | Ast>(\n\twalker: typeof jsWalk,\n) => (\n\tsourceAst: W,\n\tmatchers: [\n\t\tFindAstCondition<types.namedTypes.Node | Node>,\n\t\t...FindAstCondition<types.namedTypes.Node | Node>[],\n\t],\n\trunOn: RunOn<types.namedTypes.Node | Node, T>,\n) => Result<T[], FindAstError>\n// Insert element only if all ancestors match matchers\n// find a nodes parent where the node matches and where all ancestors match\n// Create a map for matchingNodes: Map<Node, matchedCount>\n//\n\n// TODO: rework error handling\nconst findAst = (<W>(walker: typeof jsWalk) =>\n\t(sourceAst: W, matchers, runOn) => {\n\t\tconst matchCount = new Map<Node, number>()\n\t\tconst matches: Node[] = []\n\t\tconst nodeInfoMap: NodeInfoMap<Node | types.namedTypes.Node | null> = new Map()\n\t\t// Find matching node, the corresponding parent and insertionPoint\n\t\twalker(sourceAst as Node, {\n\t\t\tenter(node, parent, key, index) {\n\t\t\t\tnodeInfoMap.set(node, {\n\t\t\t\t\tparent,\n\t\t\t\t\tkey: key as keyof typeof parent,\n\t\t\t\t\tindex,\n\t\t\t\t\trunOnNode: runOn(node) !== undefined,\n\t\t\t\t})\n\t\t\t\tconst matchCountAncestor = !parent ? 0 : matchCount.get(parent) ?? 0\n\t\t\t\tif (matchCountAncestor < matchers.length) {\n\t\t\t\t\tconst matcher = matchers[matchCountAncestor]\n\t\t\t\t\tconst isMatching = matcher ? matcher({ node, parent, key, index }) : false\n\t\t\t\t\tif (isMatching) {\n\t\t\t\t\t\tmatchCount.set(node, matchCountAncestor + 1)\n\t\t\t\t\t\tif (matchCountAncestor === matchers.length - 1) matches.push(node)\n\t\t\t\t\t}\n\t\t\t\t} else this.skip()\n\t\t\t},\n\t\t})\n\t\tif (matches.length === 0)\n\t\t\treturn [\n\t\t\t\tundefined,\n\t\t\t\tnew Error(\"Can't find path in ast matching the passed matchers\") as FindAstError,\n\t\t\t]\n\t\tconst runResults = []\n\t\tfor (const match of matches) {\n\t\t\tconst matchPath: (Node | types.namedTypes.Node)[] = []\n\t\t\tlet currentNode: Node | types.namedTypes.Node | null | undefined = match\n\t\t\twhile (currentNode) {\n\t\t\t\tmatchPath.splice(0, 0, currentNode)\n\t\t\t\tcurrentNode = nodeInfoMap.get(currentNode)?.parent\n\t\t\t}\n\t\t\t// matchpath needs to contain one node that isInsertionRefNode\n\t\t\tconst runOnNode = matchPath.find((node) => nodeInfoMap.get(node)?.runOnNode)\n\t\t\tconst fn = runOn(runOnNode)\n\t\t\tif (!runOnNode)\n\t\t\t\treturn [undefined, new Error(\"Can't find specified insertion point\") as FindAstError]\n\t\t\tif (fn) runResults.push(fn(nodeInfoMap))\n\t\t}\n\n\t\treturn [runResults, undefined]\n\t}) satisfies FindAst<any>\n\nexport const findAstJs = findAst<types.namedTypes.Node | Node>(jsWalk)\n\nexport const findAstSvelte = findAst<Ast>(svelteWalk)\n\nconst n = types.namedTypes\nconst b = types.builders\n\nconst loadMatchers: Parameters<typeof findAstJs>[1] = [\n\t({ node }) => n.ExportNamedDeclaration.check(node),\n\t({ node }) => n.VariableDeclaration.check(node),\n\t({ node }) => n.VariableDeclarator.check(node),\n\t({ node }) => n.Identifier.check(node) && node.name === \"load\",\n]\n\nexport const findLoadDeclaration = (ast: types.namedTypes.Node | Node) =>\n\t(findAstJs(ast, loadMatchers, (node) =>\n\t\tn.VariableDeclarator.check(node)\n\t\t\t? (meta) => {\n\t\t\t\t\treturn { node, meta }\n\t\t\t  }\n\t\t\t: undefined,\n\t)[0] as {\n\t\tnode: types.namedTypes.VariableDeclarator\n\t}[]) ?? []\n\nconst emptyLoadFunction = `export const load = async () => {};`\nexport const emptyLoadExportNodes = () =>\n\t(parseModule(emptyLoadFunction).$ast as types.namedTypes.Program).body\n\nexport const makeMarkupReactive = (\n\tparsed: Ast,\n\ts: MagicStringImport.default,\n\treactiveIdentifiers: string[],\n) => {\n\tconst { instance, module } = parsed\n\tparsed.instance = undefined\n\tparsed.module = undefined\n\tconst locations = findAstSvelte(\n\t\tparsed,\n\t\t[({ node }) => n.Identifier.check(node) && reactiveIdentifiers.includes(node.name)],\n\t\t(node) =>\n\t\t\tn.Identifier.check(node) && Object.hasOwn(node, \"start\") && Object.hasOwn(node, \"end\")\n\t\t\t\t? () => [(node as any).start, (node as any).end]\n\t\t\t\t: undefined,\n\t)[0] as [string, string][] | undefined\n\n\t//const s = new MagicString(options.content)\n\t// Prefix these exact locations with $signs by utilizing magicstring (which keeps the sourcemap intact)\n\tif (locations) {\n\t\tfor (const [start] of locations) {\n\t\t\ts.appendLeft(+start, \"$\")\n\t\t}\n\t}\n\tparsed.instance = instance\n\tparsed.module = module\n}\n\nexport const sortMarkup = (parsed: Ast, s: MagicStringImport.default) => {\n\tconst { instance, module, css } = parsed\n\tparsed.instance = undefined\n\tparsed.module = undefined\n\tparsed.css = undefined\n\tconst lastIndex = s.toString().length + 1\n\tfor (const child of parsed.html.children ?? []) {\n\t\ts.move(child.start, child.end, lastIndex)\n\t}\n\t// Leave tags that can not be wrapped at the beginning\n\tfor (const child of parsed.html.children ?? []) {\n\t\tif (\n\t\t\t![\n\t\t\t\t\"svelte:window\",\n\t\t\t\t\"svelte:document\",\n\t\t\t\t\"svelte:body\",\n\t\t\t\t\"svelte:head\",\n\t\t\t\t\"svelte:options\",\n\t\t\t].includes(child.name)\n\t\t)\n\t\t\ts.move(child.start, child.end, lastIndex)\n\t}\n\tparsed.instance = instance\n\tparsed.module = module\n\tparsed.css = css\n}\n\nexport const makeJsReactive = (ast: types.namedTypes.Node, reactiveIdentifiers: string[]) => {\n\tfindAstJs(\n\t\tast,\n\t\t[({ node }) => n.Identifier.check(node) && reactiveIdentifiers.includes(node.name)],\n\t\t(node) => (n.Identifier.check(node) ? () => (node.name = \"$\" + node.name) : undefined),\n\t)\n}\n\nconst inlangSdkJsStores = [\"i\", \"language\"]\n\nexport const getReactiveImportIdentifiers = (importNames: [string, string][]) =>\n\timportNames.flatMap(([imported, local]) => (inlangSdkJsStores.includes(imported) ? [local] : []))\n\n// Taken from mozilla docs: https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Whitespace#whitespace_helper_functions\nfunction is_all_ws(s: string) {\n\treturn !/[^\\t\\n\\r ]/.test(s)\n}\n\nexport const htmlIsEmpty = (htmlAst: Ast[\"html\"]) => {\n\tif (htmlAst.children == undefined || htmlAst.children.length === 0) return true\n\treturn htmlAst.children.every(\n\t\t(templateNode) =>\n\t\t\t(templateNode.type === \"Text\" && is_all_ws(templateNode.data)) ||\n\t\t\ttemplateNode.type === \"Comment\",\n\t)\n}\n\nexport const functionMatchers = (name: string): Parameters<typeof findAstJs>[1] => [\n\t({ node }) => n.FunctionDeclaration.check(node),\n\t({ node }) => n.Identifier.check(node) && node.name === name,\n]\n\nexport const arrowFunctionMatchers = (name: string): Parameters<typeof findAstJs>[1] => [\n\t({ node }) => n.VariableDeclaration.check(node),\n\t({ node }) =>\n\t\tn.VariableDeclarator.check(node) && n.Identifier.check(node.id) && node.id.name === name,\n\t({ node }) => n.ArrowFunctionExpression.check(node),\n]\n\nexport const variableDeclaratorMatchers = (name: string): Parameters<typeof findAstJs>[1] => [\n\t({ node }) => n.VariableDeclaration.check(node),\n\t({ node }) =>\n\t\tn.VariableDeclarator.check(node) && n.Identifier.check(node.id) && node.id.name === name,\n]\n\nexport const findUsedImportsInAst = (\n\tast: types.namedTypes.Node,\n\tavailableImports: [string, string][] = [],\n) => {\n\tif (availableImports.length === 0) return []\n\telse {\n\t\tconst usedImportsLocal = (findAstJs(\n\t\t\tast,\n\t\t\t[\n\t\t\t\t({ node }) =>\n\t\t\t\t\tn.Identifier.check(node) && availableImports.some(([, local]) => local === node.name),\n\t\t\t],\n\t\t\t(node) => {\n\t\t\t\treturn n.Identifier.check(node) ? () => node.name : undefined\n\t\t\t},\n\t\t)[0] ?? []) as string[]\n\t\treturn availableImports.filter(([, local]) => usedImportsLocal.includes(local))\n\t}\n}\n\n// TODO @benjaminpreiss\n// if load is an (arrow) function, extend the parameters.\n// The 2nd parameter needs to be all imported vars from @inlang/sdk-js that are USED within the function.\n// 1. For that we pass a list of available vars into the function\n// 2. We filter that list for the vars that we find in the load function\n// 3. if that list is not empty, we create the 2nd parameter object\nexport const getFunctionOrDeclarationValue = (\n\tast: types.namedTypes.Node,\n\tname: string,\n\tfallbackFunction: ExpressionKind = b.arrowFunctionExpression([], b.blockStatement([])),\n) => {\n\tconst variableDeclarationValueSearchResults = findAstJs(\n\t\tast,\n\t\tvariableDeclaratorMatchers(name),\n\t\t(node) =>\n\t\t\tn.VariableDeclarator.check(node) && node.init != undefined ? () => node.init : undefined,\n\t)[0]\n\tconst functionDeclarationSearchResults = findAstJs(ast, functionMatchers(name), (node) =>\n\t\tn.FunctionDeclaration.check(node) ? () => node : undefined,\n\t)[0] as\n\t\t| [types.namedTypes.FunctionDeclaration, ...types.namedTypes.FunctionDeclaration[]]\n\t\t| undefined\n\tconst variableDeclarationExpression =\n\t\tvariableDeclarationValueSearchResults && variableDeclarationValueSearchResults.length > 0\n\t\t\t? (variableDeclarationValueSearchResults[0] as ExpressionKind)\n\t\t\t: undefined\n\tconst functionDeclaration =\n\t\tfunctionDeclarationSearchResults && functionDeclarationSearchResults.length > 0\n\t\t\t? b.functionExpression.from({\n\t\t\t\t\tasync: functionDeclarationSearchResults[0].async,\n\t\t\t\t\tbody: functionDeclarationSearchResults[0].body,\n\t\t\t\t\tparams: functionDeclarationSearchResults[0].params,\n\t\t\t\t\tgenerator: functionDeclarationSearchResults[0].generator,\n\t\t\t\t\tid: functionDeclarationSearchResults[0].id,\n\t\t\t  })\n\t\t\t: undefined\n\treturn variableDeclarationExpression ?? functionDeclaration ?? fallbackFunction\n}\n\nexport const variableDeclarationAst = (importNames: [string, string][]) =>\n\timportNames.length > 0\n\t\t? b.variableDeclaration(\n\t\t\t\t\"let\",\n\t\t\t\timportNames.map(([, local]) => b.variableDeclarator(b.identifier(local))),\n\t\t  )\n\t\t: undefined\n\nexport const initImportedVariablesAst = (importNames: [string, string][]) =>\n\timportNames.length > 0\n\t\t? b.expressionStatement(\n\t\t\t\tb.assignmentExpression(\n\t\t\t\t\t\"=\",\n\t\t\t\t\tb.objectPattern(\n\t\t\t\t\t\timportNames.map(([imported, local]) =>\n\t\t\t\t\t\t\tb.property(\"init\", b.identifier(imported), b.identifier(local)),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tb.callExpression(b.identifier(\"getRuntimeFromContext\"), []),\n\t\t\t\t),\n\t\t  )\n\t\t: undefined\n\nexport const getRootReferenceIndexes = (ast: types.namedTypes.Node, names: [string, string][]) =>\n\tfindAstJs(\n\t\tast,\n\t\t[\n\t\t\t({ node }) =>\n\t\t\t\tn.Identifier.check(node) &&\n\t\t\t\t(names.some(([, local]) => local === node.name) || node.name === \"data\"),\n\t\t],\n\t\t(node) =>\n\t\t\tn.Identifier.check(node)\n\t\t\t\t? (meta) => {\n\t\t\t\t\t\tlet { parent, index } = meta.get(node) ?? {}\n\t\t\t\t\t\twhile (parent != undefined && !n.Program.check(parent)) {\n\t\t\t\t\t\t\tconst parentMeta = meta.get(parent)\n\t\t\t\t\t\t\tparent = parentMeta?.parent\n\t\t\t\t\t\t\tindex = parentMeta?.index\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (n.Program.check(parent)) return index\n\t\t\t\t\t\treturn undefined\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t)[0] as number[] | undefined\n\n// Returns true if all ancestors fulfill checks\n// False if one ancestor breaks the chain\nconst typeCheckAncestors = (\n\tnode: types.namedTypes.Node | Node | null | undefined,\n\tmeta: NodeInfoMap<types.namedTypes.Node | Node | null>,\n\t...typeChecks: ((node: any) => boolean)[]\n) => {\n\tlet parent = node ? meta.get(node)?.parent : undefined\n\tfor (const check of typeChecks) {\n\t\tif (!check(parent)) return false\n\t\tparent = parent ? meta.get(parent)?.parent : undefined\n\t}\n\treturn true\n}\n\n// Returns true if node was declared in a certain type of ancestry\nconst isDeclaredIn = (\n\tnode: types.namedTypes.Node | Node | null | undefined,\n\tmeta: NodeInfoMap<types.namedTypes.Node | Node | null>,\n\ttype: \"ObjectPattern\",\n) => {\n\tconst propertyCheck = (nd: any) =>\n\t\t(n.Property.check(nd) || n.ObjectProperty.check(nd)) && nd.value === node\n\tconst objectPatternCheck = (node: any) => n.ObjectPattern.check(node)\n\tif (type === \"ObjectPattern\") {\n\t\treturn typeCheckAncestors(node, meta, propertyCheck, objectPatternCheck)\n\t}\n\treturn false\n}\n\n// Is this identifier already assigned to another identifier?\n//\n// E.g. you want to merge `const {key: alias} = ...` and `const {key: anotherAlias} = ...`, then we know that `key` is already assigned to `alias`\n// 2. `const {key: alias, ...rest} = ...` and `const {key2} = ...` then `key2` is assigned to `rest`\n// 3. `const blue = ...` and `const {key} = ...` then `key` is assigned to `blue`\n// Returns the identifier to which the requested identifier is already assigned\n// Value is already assigned to identifier\nexport class FindAliasError extends Error {\n\treadonly #id = \"FindAliasException\"\n}\n\ntype Alias = types.namedTypes.Expression | Expression | types.namedTypes.Identifier | Identifier\n\n// MANIPULATES the passed ast!\nexport const findAlias = (\n\tast: types.namedTypes.Node | Node,\n\tidentifier: string,\n\tdeep = false,\n\tlastAlias?: Alias,\n\tignore: (types.namedTypes.Node | Node)[] = [],\n): Result<Alias, FindAliasError> => {\n\tlet result = undefined as ReturnType<typeof findAlias> | undefined\n\tjsWalk(ast as Node, {\n\t\tenter(node: types.namedTypes.Node | Node) {\n\t\t\tif (result !== undefined || ignore.includes(node)) {\n\t\t\t\tthis.skip()\n\t\t\t} else if (n.ObjectPattern.check(node)) {\n\t\t\t\tlet rest\n\t\t\t\tfor (const property of node.properties) {\n\t\t\t\t\tconst found = findAlias(property, identifier)\n\t\t\t\t\tif (n.RestProperty.check(property)) rest = property.argument\n\t\t\t\t\telse if (found[0] !== undefined) {\n\t\t\t\t\t\tresult = found\n\t\t\t\t\t\tignore.push(node)\n\t\t\t\t\t\tthis.skip()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (result === undefined && rest !== undefined) {\n\t\t\t\t\tresult = [rest, undefined]\n\t\t\t\t\tignore.push(node)\n\t\t\t\t\tthis.skip()\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\t(n.Property.check(node) || n.ObjectProperty.check(node)) &&\n\t\t\t\t((n.Identifier.check(node.key) && node.key.name === identifier) ||\n\t\t\t\t\t(n.Identifier.check(node.value) && node.value.name === identifier))\n\t\t\t) {\n\t\t\t\tresult = [node.value, undefined]\n\t\t\t\tthis.skip()\n\t\t\t} else if (n.FunctionDeclaration.check(node) && node.id != undefined) {\n\t\t\t\tconst found = findAlias(node.id, identifier)\n\t\t\t\tif (found[0] !== undefined) {\n\t\t\t\t\tresult = found\n\t\t\t\t\tignore.push(node)\n\t\t\t\t\tthis.skip()\n\t\t\t\t}\n\t\t\t} else if (n.VariableDeclaration.check(node)) {\n\t\t\t\tfor (const declaration of node.declarations) {\n\t\t\t\t\tconst found = findAlias(declaration, identifier)\n\t\t\t\t\tif (found[0] !== undefined) {\n\t\t\t\t\t\tresult = found\n\t\t\t\t\t\tignore.push(node)\n\t\t\t\t\t\tthis.skip()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (n.VariableDeclarator.check(node)) {\n\t\t\t\tconst found = findAlias(node.id, identifier)\n\t\t\t\t// `blue = green` & `green` -> `blue`\n\t\t\t\tif (\n\t\t\t\t\tn.Identifier.check(node.init) &&\n\t\t\t\t\tn.Identifier.check(node.id) &&\n\t\t\t\t\tnode.init.name === identifier\n\t\t\t\t) {\n\t\t\t\t\tresult = [node.id, undefined]\n\t\t\t\t\tignore.push(node)\n\t\t\t\t\tthis.skip()\n\t\t\t\t}\n\t\t\t\t// `blue = <anything else>` & `blue` -> `blue`\n\t\t\t\telse if (found[0] !== undefined) {\n\t\t\t\t\tresult = found\n\t\t\t\t\tignore.push(node)\n\t\t\t\t\tthis.skip()\n\t\t\t\t}\n\t\t\t} else if (n.Identifier.check(node) && node.name === identifier) {\n\t\t\t\tresult = [node, undefined]\n\t\t\t\tignore.push(node)\n\t\t\t\tthis.skip()\n\t\t\t}\n\t\t},\n\t})\n\t// Iterate through findAlias until no alias can be found\n\tif (result !== undefined) {\n\t\tif (result[0] !== undefined && deep) {\n\t\t\tif (lastAlias !== result[0] && n.Identifier.check(result[0])) {\n\t\t\t\tconst nextAlias = findAlias(ast, result[0].name, true, result[0], ignore)\n\t\t\t\tif (nextAlias[0] !== undefined) return nextAlias\n\t\t\t\telse return result\n\t\t\t}\n\t\t\treturn [\n\t\t\t\tundefined,\n\t\t\t\tnew Error(\n\t\t\t\t\t\"Deep searching for aliases for MemberExpressions is not supported yet.\",\n\t\t\t\t) as FindAliasError,\n\t\t\t]\n\t\t}\n\t\treturn result\n\t}\n\treturn [\n\t\tundefined,\n\t\tnew Error(\"Couldn't find alias or even the identifier itself\") as FindAliasError,\n\t]\n}\n\nexport class FindDefinitionError extends Error {\n\treadonly #id = \"FindDefinitionException\"\n}\n\n// Finds the original definition value of the searched for identifier\n// If supplied, also makes sure that the definition is of a specific type\nexport const findDefinition = (\n\tast: types.namedTypes.Node | Node,\n\tidentifier: string,\n\tdeep = false,\n\tignore: (types.namedTypes.Node | Node)[] = [],\n\ttype?: \"function\",\n): Result<types.namedTypes.Node | Node, FindDefinitionError> => {\n\t// Iterates through ast, looks for declarations.\n\tlet result = undefined as types.namedTypes.Node | Node | undefined\n\tjsWalk(ast as Node, {\n\t\tenter(node) {\n\t\t\tif (result !== undefined || ignore.includes(node)) this.skip()\n\t\t\telse if (\n\t\t\t\tn.VariableDeclarator.check(node) &&\n\t\t\t\tn.Identifier.check(node.id) &&\n\t\t\t\tnode.id.name === identifier\n\t\t\t) {\n\t\t\t\tresult = node.init ?? undefined\n\t\t\t\tignore.push(node)\n\t\t\t\tthis.skip()\n\t\t\t} else if (\n\t\t\t\tn.FunctionDeclaration.check(node) &&\n\t\t\t\tn.Identifier.check(node.id) &&\n\t\t\t\tnode.id.name === identifier\n\t\t\t) {\n\t\t\t\tresult = node\n\t\t\t\tignore.push(node)\n\t\t\t\tthis.skip()\n\t\t\t}\n\t\t},\n\t})\n\tif (result !== undefined) {\n\t\tif (deep) {\n\t\t\tif (n.Identifier.check(result)) return findDefinition(ast, result.name, true, ignore, type)\n\t\t\treturn [result, undefined]\n\t\t}\n\t\treturn [result, undefined]\n\t}\n\treturn [undefined, new Error(\"Couldn't find definition\") as FindDefinitionError]\n}\n\nexport class IdentifierIsDeclarableError extends Error {\n\treadonly #id = \"IdentifierIsDeclarableException\"\n}\n\nexport const identifierIsDeclarable = (\n\tast: types.namedTypes.Node | Node,\n\tidentifier: string,\n): Result<boolean, IdentifierIsDeclarableError> => {\n\ttry {\n\t\tconst searchResults = (findAstJs(\n\t\t\tast,\n\t\t\t[({ node }) => n.Identifier.check(node) && node.name === identifier],\n\t\t\t(node) =>\n\t\t\t\tn.Identifier.check(node)\n\t\t\t\t\t? (meta) => {\n\t\t\t\t\t\t\t// Is this name used as the value of an object pattern? If so, return false\n\t\t\t\t\t\t\tif (isDeclaredIn(node, meta, \"ObjectPattern\")) return false\n\t\t\t\t\t\t\tthrow new Error(\"Cannot predict indentifier declarability for this ast.\")\n\t\t\t\t\t  }\n\t\t\t\t\t: undefined,\n\t\t)[0] ?? [true]) as boolean[]\n\t\treturn [searchResults.every((r) => r === true), undefined]\n\t} catch (error) {\n\t\treturn [undefined, error as IdentifierIsDeclarableError]\n\t}\n}\n\nexport class MergeNodesError extends Error {\n\treadonly #id = \"MergeNodesException\"\n}\n\n// This function merges 2 AST nodes, by merely adding the nodes missing in the first ast from the second ast.\n// It does so by attaching all Nodes that can be found in the second node whose parent can be found in the first node.\n// This relies heavily on the comparison function of two nodes\n\n// RETURNS a map of declaration identifiers that were renamed [\"old identifier\" -> \"new identifier\"]\n// Checks, whether an identifier is available for declaration. Only merges, if this is true\n// {key: alias, ...rest} & {event} -> {key: alias, event, ...rest} with rest -> {...rest, event}\n// or -> {key: alias, ...rest} with event -> rest.event\n// {key: {key2: value2, ...rest2}, ...rest1} & {key: {event}}\ntype Renamings = {\n\toriginalName: types.namedTypes.Identifier | Identifier\n\tnewName: types.namedTypes.Expression | Expression | types.namedTypes.Identifier | Identifier\n\tscope?: types.namedTypes.Node | Node\n}[]\n\n// Merges nodes.\n// If some things don't turn out to be as requested, try to rename stuff in the code (but only if a scope is provided). Otherwise return the stuff that has to be renamed\nexport const mergeNodes = (\n\tast: types.namedTypes.Node | Node,\n\tnode: types.namedTypes.Node | Node,\n\trenamingScope?: types.namedTypes.Node | Node,\n): Result<Renamings, MergeNodesError> => {\n\tif (n.ObjectPattern.check(node)) {\n\t\tfor (const property of node.properties) {\n\t\t\treturn mergeNodes(ast, property, renamingScope)\n\t\t}\n\t} else if (n.Property.check(node)) {\n\t\tif (n.Identifier.check(node.value)) {\n\t\t\tif (n.Identifier.check(node.key)) {\n\t\t\t\tif (\n\t\t\t\t\tidentifierIsDeclarable(ast, node.value.name)[0] === true ||\n\t\t\t\t\tnode.key.name === node.value.name\n\t\t\t\t) {\n\t\t\t\t\tif (n.ObjectPattern.check(ast)) {\n\t\t\t\t\t\tconst foundAlias = findAlias(ast, node.key.name)[0]\n\t\t\t\t\t\tif (n.Identifier.check(foundAlias) && foundAlias.name === node.key.name)\n\t\t\t\t\t\t\treturn [[], undefined]\n\t\t\t\t\t\tif (foundAlias !== undefined) {\n\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\toriginalName: b.identifier(node.value.name),\n\t\t\t\t\t\t\t\t\t\tnewName: foundAlias,\n\t\t\t\t\t\t\t\t\t\tscope: renamingScope,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t\tast.properties.push(node)\n\t\t\t\t\t} else if (n.Identifier.check(ast)) {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\toriginalName: b.identifier(node.value.name),\n\t\t\t\t\t\t\t\t\tnewName: b.memberExpression(ast, node.key),\n\t\t\t\t\t\t\t\t\tscope: renamingScope,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t]\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tnew Error(\"Cant merge Property into ast of different type\") as MergeNodesError,\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tnew Error(\"Some of the requested identifiers are already in use.\") as MergeNodesError,\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn [undefined, new Error(\"Unsupported type for key of Property.\") as MergeNodesError]\n\t\t\t}\n\t\t} else {\n\t\t\treturn [undefined, new Error(\"Unsupported type for value of Property\") as MergeNodesError]\n\t\t}\n\t} else if (n.FunctionDeclaration.check(node)) {\n\t\tif (node.id != undefined) {\n\t\t\tif (n.Identifier.check(node.id)) {\n\t\t\t\t// Find the function definition in the ast\n\t\t\t\tconst searchResult = findDefinition(ast, node.id.name, true)\n\t\t\t\tconst def = searchResult[0]\n\t\t\t\tif (\n\t\t\t\t\tsearchResult[1] instanceof Error &&\n\t\t\t\t\tsearchResult[1].message === \"Couldn't find definition\"\n\t\t\t\t)\n\t\t\t\t\treturn [undefined, new Error(\"Couldn't find a function to merge into\") as MergeNodesError]\n\t\t\t\telse if (n.FunctionDeclaration.check(def) || n.ArrowFunctionExpression.check(def)) {\n\t\t\t\t\tconst renamings: Renamings = []\n\t\t\t\t\tfor (const [index, parameter] of node.params.entries()) {\n\t\t\t\t\t\tconst targetParameter = def.params[index]\n\t\t\t\t\t\tif (targetParameter !== undefined) {\n\t\t\t\t\t\t\tconst mergeResult = mergeNodes(targetParameter, parameter, def.body)\n\t\t\t\t\t\t\tif (mergeResult[0] !== undefined) renamings.push(...mergeResult[0])\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tnew Error(\"Couldn't merge function parameters\") as MergeNodesError,\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t} else def.params.push(parameter)\n\t\t\t\t\t}\n\t\t\t\t\treturn [renamings, undefined]\n\t\t\t\t} else {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tnew Error(\"Found variable declaration is not of type function\") as MergeNodesError,\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn [\n\t\t\t\t\tundefined,\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"Cannot merge function that is identified by something other than an Identifier\",\n\t\t\t\t\t) as MergeNodesError,\n\t\t\t\t]\n\t\t\t}\n\t\t} else {\n\t\t\treturn [undefined, new Error(\"Can't merge anonymous function into an ast\") as MergeNodesError]\n\t\t}\n\t} else if (n.ExportNamedDeclaration.check(node) && node.declaration) {\n\t\tif (n.ExportNamedDeclaration.check(ast) && ast.declaration) {\n\t\t\treturn mergeNodes(ast.declaration, node.declaration, renamingScope)\n\t\t} else if (n.Program.check(ast)) {\n\t\t\t/* const mergeResults: Renamings = []\n\t\t\tconst errors: MergeNodesError[] = []\n\t\t\tfor (const statement of ast.body) {\n\t\t\t\t// This line is bad\n\t\t\t\tconst [namingsStatement, errorStatement] = mergeNodes(\n\t\t\t\t\tstatement,\n\t\t\t\t\tnode.declaration,\n\t\t\t\t\trenamingScope,\n\t\t\t\t)\n\t\t\t\tif (errorStatement instanceof Error) errors.push(errorStatement)\n\t\t\t\telse if (namingsStatement !== undefined) mergeResults.push(...namingsStatement)\n\t\t\t}\n\t\t\tif (errors.length === ast.body.length) {\n\t\t\t\t// There exists no function of this name. Push to body!\n\t\t\t\tif (\n\t\t\t\t\terrors.every((error) => error.message === \"Couldn't find a function to merge into\") ||\n\t\t\t\t\terrors[0] === undefined ||\n\t\t\t\t\tast.body.length === 0\n\t\t\t\t) {\n\t\t\t\t\tast.body.push(node)\n\t\t\t\t}\n\t\t\t\t// Merge fails for other reasons\n\t\t\t\telse return [undefined, errors[0]]\n\t\t\t} */\n\t\t\tconst mergeResult = mergeNodes(ast, node.declaration)\n\t\t\tif (\n\t\t\t\tmergeResult[1] instanceof Error &&\n\t\t\t\tmergeResult[1].message === \"Couldn't find a function to merge into\"\n\t\t\t) {\n\t\t\t\tast.body.push(node)\n\t\t\t\treturn [[], undefined]\n\t\t\t}\n\t\t\treturn mergeResult\n\t\t}\n\t}\n\treturn [[], undefined]\n}\n\n// This function cannot error.\nexport const findDeclarableIdentifier = (ast: Node | types.namedTypes.Node, identifier: string) => {\n\tlet newIdentifier: string | undefined\n\tjsWalk(ast as Node, {\n\t\tenter(node) {\n\t\t\tif (newIdentifier !== undefined) this.skip()\n\t\t\telse if (n.ImportDeclaration.check(node)) {\n\t\t\t\tfor (const specifier of node.specifiers) {\n\t\t\t\t\tif (n.ImportSpecifier.check(specifier) && specifier.local.name === identifier) {\n\t\t\t\t\t\tnewIdentifier = findDeclarableIdentifier(ast, `${identifier}_`)\n\t\t\t\t\t\tthis.skip()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (n.Identifier.check(node) && node.name === identifier) {\n\t\t\t\tnewIdentifier = findDeclarableIdentifier(ast, `${identifier}_`)\n\t\t\t\tthis.skip()\n\t\t\t}\n\t\t},\n\t})\n\treturn newIdentifier === undefined ? identifier : newIdentifier\n}\n\nexport class ImportsAddError extends Error {\n\treadonly #id = \"ImportsAddException\"\n}\n\nexport class ImportsGetAliasesError extends Error {\n\treadonly #id = \"ImportsGetAliasesException\"\n}\n\nexport const imports = (target: Program | types.namedTypes.Program, source: string) => {\n\tconst findReferences = (): [ImportDeclaration, ...ImportDeclaration[]] | undefined => {\n\t\tconst references: ImportDeclaration[] = []\n\t\tjsWalk(target as Program, {\n\t\t\tenter(node) {\n\t\t\t\tif (\n\t\t\t\t\tn.ImportDeclaration.check(node) &&\n\t\t\t\t\tn.Literal.check(node.source) &&\n\t\t\t\t\tnode.source.value === source\n\t\t\t\t) {\n\t\t\t\t\treferences.push(node)\n\t\t\t\t\tthis.skip()\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t\treturn references.length === 0\n\t\t\t? undefined\n\t\t\t: (references as [ImportDeclaration, ...ImportDeclaration[]])\n\t}\n\tconst base = {\n\t\tfindReferences,\n\t}\n\ttype AliasesMap = Map<string, types.namedTypes.Identifier | types.namedTypes.MemberExpression>\n\treturn {\n\t\t...base,\n\t\tgetAliases: function (\n\t\t\t...exportNames: string[]\n\t\t): typeof base &\n\t\t\t(\n\t\t\t\t| { aliases: AliasesMap; error?: never }\n\t\t\t\t| { aliases?: never; error: ImportsGetAliasesError }\n\t\t\t) {\n\t\t\ttry {\n\t\t\t\tconst matchingImports = this.findReferences()\n\t\t\t\tconst aliases: AliasesMap = new Map()\n\t\t\t\t// There are no matching imports -> Return aliases: undefined\n\t\t\t\tif (matchingImports === undefined) return { ...this, aliases: aliases }\n\t\t\t\t// Construct map of aliases: exportN -> aliasN\n\t\t\t\tfor (const { specifiers } of matchingImports) {\n\t\t\t\t\tfor (const specifier of specifiers) {\n\t\t\t\t\t\tconst newKey =\n\t\t\t\t\t\t\tspecifier.type === \"ImportDefaultSpecifier\"\n\t\t\t\t\t\t\t\t? \"default\"\n\t\t\t\t\t\t\t\t: specifier.type === \"ImportNamespaceSpecifier\"\n\t\t\t\t\t\t\t\t? \"*\"\n\t\t\t\t\t\t\t\t: specifier.imported.name\n\t\t\t\t\t\taliases.set(newKey, specifier.local)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Extend map of aliases with requested exportNames\n\t\t\t\tfor (const exportN of exportNames) {\n\t\t\t\t\tif (!aliases.has(exportN)) {\n\t\t\t\t\t\tconst namespaceAlias = aliases.get(\"*\")\n\t\t\t\t\t\tif (n.Identifier.check(namespaceAlias))\n\t\t\t\t\t\t\taliases.set(exportN, b.memberExpression(namespaceAlias, b.identifier(exportN)))\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new ImportsGetAliasesError(\n\t\t\t\t\t\t\t\t`The alias for ${exportN} does not exist. Maybe call imports(...).add() first?`,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn { ...this, aliases }\n\t\t\t} catch (error) {\n\t\t\t\treturn { ...this, error: error as ImportsGetAliasesError }\n\t\t\t}\n\t\t},\n\t\tadd: function (\n\t\t\texportN: string,\n\t\t\taliasN?: string,\n\t\t): typeof base & { alias: types.namedTypes.Identifier | types.namedTypes.MemberExpression } {\n\t\t\t// The aliasN should be available. Find a declarable identifier.\n\t\t\t// This also goes through all import aliases to check for availability.\n\t\t\tconst declarableIdentifier = findDeclarableIdentifier(target, aliasN ?? exportN)\n\t\t\t// Can the import be added?\n\t\t\t// Y -> Proceed\n\t\t\tconst matchingImports = this.findReferences()\n\t\t\tif (\n\t\t\t\t// There has to be one line that does not include a namespace import\n\t\t\t\tmatchingImports === undefined ||\n\t\t\t\t(matchingImports.some(({ specifiers }) =>\n\t\t\t\t\tspecifiers.every(\n\t\t\t\t\t\t(specifier) =>\n\t\t\t\t\t\t\tn.ImportSpecifier.check(specifier) || n.ImportDefaultSpecifier.check(specifier),\n\t\t\t\t\t),\n\t\t\t\t) &&\n\t\t\t\t\t// exportN cannot be used already\n\t\t\t\t\tmatchingImports.every(({ specifiers }) =>\n\t\t\t\t\t\tspecifiers.every((specifier) =>\n\t\t\t\t\t\t\tspecifier.type === \"ImportSpecifier\"\n\t\t\t\t\t\t\t\t? specifier.imported.name !== exportN\n\t\t\t\t\t\t\t\t: specifier.type === \"ImportDefaultSpecifier\"\n\t\t\t\t\t\t\t\t? exportN !== \"default\"\n\t\t\t\t\t\t\t\t: exportN !== \"*\",\n\t\t\t\t\t\t),\n\t\t\t\t\t))\n\t\t\t) {\n\t\t\t\tconst localIdentifier =\n\t\t\t\t\tdeclarableIdentifier !== exportN ? b.identifier(declarableIdentifier) : undefined\n\t\t\t\tconst newImportSpecifierAst =\n\t\t\t\t\texportN === \"*\"\n\t\t\t\t\t\t? b.importNamespaceSpecifier(localIdentifier)\n\t\t\t\t\t\t: exportN === \"default\"\n\t\t\t\t\t\t? b.importDefaultSpecifier(localIdentifier)\n\t\t\t\t\t\t: b.importSpecifier(b.identifier(exportN), localIdentifier)\n\t\t\t\t// Should we add a new line?\n\t\t\t\t// Y -> Append new line\n\t\t\t\t// N -> Push specifier into existing import\n\t\t\t\tif (exportN === \"*\" || matchingImports === undefined) {\n\t\t\t\t\tconst newImportDeclarationAst = b.importDeclaration(\n\t\t\t\t\t\t[newImportSpecifierAst],\n\t\t\t\t\t\tb.literal(source),\n\t\t\t\t\t)\n\t\t\t\t\ttarget.body.splice(0, 0, newImportDeclarationAst)\n\t\t\t\t} else {\n\t\t\t\t\t// Find the right line to add import\n\t\t\t\t\tconst insertionPoint = matchingImports.find(({ specifiers }) =>\n\t\t\t\t\t\tspecifiers.every(\n\t\t\t\t\t\t\t(specifier) =>\n\t\t\t\t\t\t\t\tn.ImportSpecifier.check(specifier) || n.ImportDefaultSpecifier.check(specifier),\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t\tinsertionPoint?.specifiers.push(newImportSpecifierAst as ImportSpecifier)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Return changed identifiers\n\t\t\tconst newAliasN = this.getAliases(exportN).aliases?.get(exportN) as\n\t\t\t\t| types.namedTypes.Identifier\n\t\t\t\t| types.namedTypes.MemberExpression\n\t\t\treturn { ...this, alias: newAliasN }\n\t\t},\n\t\tremoveAll: function () {\n\t\t\tconst matchingImports = this.findReferences()\n\t\t\tif (matchingImports !== undefined) {\n\t\t\t\tfor (const declaration of matchingImports) {\n\t\t\t\t\tconst indexToRemove = target.body.findIndex((statement) => statement === declaration)\n\t\t\t\t\ttarget.body.splice(indexToRemove, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this\n\t\t},\n\t}\n}\n", null, "export default class BitSet {\n\tconstructor(arg) {\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n\t}\n\n\tadd(n) {\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\n\t}\n\n\thas(n) {\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n\t}\n}\n", "export default class Chunk {\n\tconstructor(start, end, content) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.original = content;\n\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\n\t\tthis.content = content;\n\t\tthis.storeName = false;\n\t\tthis.edited = false;\n\n\t\tif (DEBUG) {\n\t\t\t// we make these non-enumerable, for sanity while debugging\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tprevious: { writable: true, value: null },\n\t\t\t\tnext: { writable: true, value: null },\n\t\t\t});\n\t\t} else {\n\t\t\tthis.previous = null;\n\t\t\tthis.next = null;\n\t\t}\n\t}\n\n\tappendLeft(content) {\n\t\tthis.outro += content;\n\t}\n\n\tappendRight(content) {\n\t\tthis.intro = this.intro + content;\n\t}\n\n\tclone() {\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t}\n\n\tcontains(index) {\n\t\treturn this.start < index && index < this.end;\n\t}\n\n\teachNext(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.next;\n\t\t}\n\t}\n\n\teachPrevious(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t}\n\n\tedit(content, storeName, contentOnly) {\n\t\tthis.content = content;\n\t\tif (!contentOnly) {\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\t\t}\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t}\n\n\tprependLeft(content) {\n\t\tthis.outro = content + this.outro;\n\t}\n\n\tprependRight(content) {\n\t\tthis.intro = content + this.intro;\n\t}\n\n\tsplit(index) {\n\t\tconst sliceIndex = index - this.start;\n\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\n\t\tconst originalAfter = this.original.slice(sliceIndex);\n\n\t\tthis.original = originalBefore;\n\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif (this.edited) {\n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit('', false);\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t}\n\n\ttoString() {\n\t\treturn this.intro + this.content + this.outro;\n\t}\n\n\ttrimEnd(rx) {\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\t\t}\n\t}\n\n\ttrimStart(rx) {\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.end - trimmed.length);\n\t\t\t\tthis.edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\t\t}\n\t}\n}\n", "import { encode } from '@jridgewell/sourcemap-codec';\n\nfunction getBtoa () {\n\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\t\treturn (str) => window.btoa(unescape(encodeURIComponent(str)));\n\t} else if (typeof Buffer === 'function') {\n\t\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\n\t} else {\n\t\treturn () => {\n\t\t\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n\t\t};\n\t}\n}\n\nconst btoa = /*#__PURE__*/ getBtoa();\n\nexport default class SourceMap {\n\tconstructor(properties) {\n\t\tthis.version = 3;\n\t\tthis.file = properties.file;\n\t\tthis.sources = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names = properties.names;\n\t\tthis.mappings = encode(properties.mappings);\n\t\tif (typeof properties.x_google_ignoreList !== 'undefined') {\n\t\t\tthis.x_google_ignoreList = properties.x_google_ignoreList;\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this);\n\t}\n\n\ttoUrl() {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n\t}\n}\n", "export default function guessIndent(code) {\n\tconst lines = code.split('\\n');\n\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce((previous, current) => {\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n", "export default function getRelativePath(from, to) {\n\tconst fromParts = from.split(/[/\\\\]/);\n\tconst toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tlet i = fromParts.length;\n\t\twhile (i--) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n", "const toString = Object.prototype.toString;\n\nexport default function isObject(thing) {\n\treturn toString.call(thing) === '[object Object]';\n}\n", "export default function getLocator(source) {\n\tconst originalLines = source.split('\\n');\n\tconst lineOffsets = [];\n\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tlet i = 0;\n\t\tlet j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tconst m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tconst line = i - 1;\n\t\tconst column = index - lineOffsets[line];\n\t\treturn { line, column };\n\t};\n}\n", "export default class Mappings {\n\tconstructor(hires) {\n\t\tthis.hires = hires;\n\t\tthis.generatedCodeLine = 0;\n\t\tthis.generatedCodeColumn = 0;\n\t\tthis.raw = [];\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\t\tthis.pending = null;\n\t}\n\n\taddEdit(sourceIndex, content, loc, nameIndex) {\n\t\tif (content.length) {\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\tif (nameIndex >= 0) {\n\t\t\t\tsegment.push(nameIndex);\n\t\t\t}\n\t\t\tthis.rawSegments.push(segment);\n\t\t} else if (this.pending) {\n\t\t\tthis.rawSegments.push(this.pending);\n\t\t}\n\n\t\tthis.advance(content);\n\t\tthis.pending = null;\n\t}\n\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n\t\tlet originalCharIndex = chunk.start;\n\t\tlet first = true;\n\n\t\twhile (originalCharIndex < chunk.end) {\n\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n\t\t\t}\n\n\t\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t\tfirst = true;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tthis.generatedCodeColumn += 1;\n\t\t\t\tfirst = false;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\tadvance(str) {\n\t\tif (!str) return;\n\n\t\tconst lines = str.split('\\n');\n\n\t\tif (lines.length > 1) {\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tthis.generatedCodeLine++;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t}\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t}\n\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n\t}\n}\n", "import BitSet from './BitSet.js';\nimport Chunk from './Chunk.js';\nimport SourceMap from './SourceMap.js';\nimport guessIndent from './utils/guessIndent.js';\nimport getRelativePath from './utils/getRelativePath.js';\nimport isObject from './utils/isObject.js';\nimport getLocator from './utils/getLocator.js';\nimport Mappings from './utils/Mappings.js';\nimport Stats from './utils/Stats.js';\n\nconst n = '\\n';\n\nconst warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false,\n};\n\nexport default class MagicString {\n\tconstructor(string, options = {}) {\n\t\tconst chunk = new Chunk(0, string.length, string);\n\n\t\tObject.defineProperties(this, {\n\t\t\toriginal: { writable: true, value: string },\n\t\t\toutro: { writable: true, value: '' },\n\t\t\tintro: { writable: true, value: '' },\n\t\t\tfirstChunk: { writable: true, value: chunk },\n\t\t\tlastChunk: { writable: true, value: chunk },\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\t\tbyStart: { writable: true, value: {} },\n\t\t\tbyEnd: { writable: true, value: {} },\n\t\t\tfilename: { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\n\t\t\tstoredNames: { writable: true, value: {} },\n\t\t\tindentStr: { writable: true, value: undefined },\n\t\t\tignoreList: { writable: true, value: options.ignoreList },\n\t\t});\n\n\t\tif (DEBUG) {\n\t\t\tObject.defineProperty(this, 'stats', { value: new Stats() });\n\t\t}\n\n\t\tthis.byStart[0] = chunk;\n\t\tthis.byEnd[string.length] = chunk;\n\t}\n\n\taddSourcemapLocation(char) {\n\t\tthis.sourcemapLocations.add(char);\n\t}\n\n\tappend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t}\n\n\tappendLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('appendLeft');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendLeft(content);\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('appendLeft');\n\t\treturn this;\n\t}\n\n\tappendRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('appendRight');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendRight(content);\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('appendRight');\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\n\n\t\tlet originalChunk = this.firstChunk;\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\t\twhile (originalChunk) {\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\t\tconst nextOriginalChunk = originalChunk.next;\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif (nextClonedChunk) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif (this.indentExclusionRanges) {\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t}\n\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\t\tcloned.intro = this.intro;\n\t\tcloned.outro = this.outro;\n\n\t\treturn cloned;\n\t}\n\n\tgenerateDecodedMap(options) {\n\t\toptions = options || {};\n\n\t\tconst sourceIndex = 0;\n\t\tconst names = Object.keys(this.storedNames);\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tconst locate = getLocator(this.original);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.firstChunk.eachNext((chunk) => {\n\t\t\tconst loc = locate(chunk.start);\n\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tmappings.addEdit(\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tchunk.content,\n\t\t\t\t\tloc,\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n\t\t\t}\n\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : (options.file || '')],\n\t\t\tsourcesContent: options.includeContent ? [this.original] : undefined,\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\t_ensureindentStr() {\n\t\tif (this.indentStr === undefined) {\n\t\t\tthis.indentStr = guessIndent(this.original);\n\t\t}\n\t}\n\n\t_getRawIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr;\n\t}\n\n\tgetIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tindent(indentStr, options) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif (isObject(indentStr)) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tif (indentStr === undefined) {\n\t\t\tthis._ensureindentStr();\n\t\t\tindentStr = this.indentStr || '\\t';\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tconst isExcluded = {};\n\n\t\tif (options.exclude) {\n\t\t\tconst exclusions =\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\t\texclusions.forEach((exclusion) => {\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = (match) => {\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace(pattern, replacer);\n\n\t\tlet charIndex = 0;\n\t\tlet chunk = this.firstChunk;\n\n\t\twhile (chunk) {\n\t\t\tconst end = chunk.end;\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile (charIndex < end) {\n\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\tconst char = this.original[charIndex];\n\n\t\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace(pattern, replacer);\n\n\t\treturn this;\n\t}\n\n\tinsert() {\n\t\tthrow new Error(\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\n\t\t);\n\t}\n\n\tinsertLeft(index, content) {\n\t\tif (!warned.insertLeft) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft(index, content);\n\t}\n\n\tinsertRight(index, content) {\n\t\tif (!warned.insertRight) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight(index, content);\n\t}\n\n\tmove(start, end, index) {\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n\n\t\tif (DEBUG) this.stats.time('move');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\t\tthis._split(index);\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tconst oldLeft = first.previous;\n\t\tconst oldRight = last.next;\n\n\t\tconst newRight = this.byStart[index];\n\t\tif (!newRight && last === this.lastChunk) return this;\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif (oldLeft) oldLeft.next = oldRight;\n\t\tif (oldRight) oldRight.previous = oldLeft;\n\n\t\tif (newLeft) newLeft.next = first;\n\t\tif (newRight) newRight.previous = last;\n\n\t\tif (!first.previous) this.firstChunk = last.next;\n\t\tif (!last.next) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight || null;\n\n\t\tif (!newLeft) this.firstChunk = first;\n\t\tif (!newRight) this.lastChunk = last;\n\n\t\tif (DEBUG) this.stats.timeEnd('move');\n\t\treturn this;\n\t}\n\n\toverwrite(start, end, content, options) {\n\t\toptions = options || {};\n\t\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\n\t}\n\n\tupdate(start, end, content, options) {\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\n\t\tif (start === end)\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead'\n\t\t\t);\n\n\t\tif (DEBUG) this.stats.time('overwrite');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tif (options === true) {\n\t\t\tif (!warned.storeName) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.storeName = true;\n\t\t\t}\n\n\t\t\toptions = { storeName: true };\n\t\t}\n\t\tconst storeName = options !== undefined ? options.storeName : false;\n\t\tconst overwrite = options !== undefined ? options.overwrite : false;\n\n\t\tif (storeName) {\n\t\t\tconst original = this.original.slice(start, end);\n\t\t\tObject.defineProperty(this.storedNames, original, {\n\t\t\t\twritable: true,\n\t\t\t\tvalue: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tif (first) {\n\t\t\tlet chunk = first;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t\t}\n\t\t\t\tchunk = chunk.next;\n\t\t\t\tchunk.edit('', false);\n\t\t\t}\n\n\t\t\tfirst.edit(content, storeName, !overwrite);\n\t\t} else {\n\t\t\t// must be inserting at the end\n\t\t\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('overwrite');\n\t\treturn this;\n\t}\n\n\tprepend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t}\n\n\tprependLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('insertRight');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependLeft(content);\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('insertRight');\n\t\treturn this;\n\t}\n\n\tprependRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('insertRight');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependRight(content);\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('insertRight');\n\t\treturn this;\n\t}\n\n\tremove(start, end) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tif (DEBUG) this.stats.time('remove');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit('');\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('remove');\n\t\treturn this;\n\t}\n\n\tlastChar() {\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n\t\t} while ((chunk = chunk.previous));\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\n\t\treturn '';\n\t}\n\n\tlastLine() {\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n\t\tlet lineStr = this.outro;\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length > 0) {\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.outro + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.content.length > 0) {\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.content + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.intro.length > 0) {\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.intro + lineStr;\n\t\t\t}\n\t\t} while ((chunk = chunk.previous));\n\t\tlineIndex = this.intro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n\t\treturn this.intro + lineStr;\n\t}\n\n\tslice(start = 0, end = this.original.length) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tlet result = '';\n\n\t\t// find start chunk\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t\t// found end chunk before start\n\t\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n\n\t\tconst startChunk = chunk;\n\t\twhile (chunk) {\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif (containsEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// TODO deprecate this? not really very useful\n\tsnip(start, end) {\n\t\tconst clone = this.clone();\n\t\tclone.remove(0, start);\n\t\tclone.remove(end, clone.original.length);\n\n\t\treturn clone;\n\t}\n\n\t_split(index) {\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\n\n\t\tif (DEBUG) this.stats.time('_split');\n\n\t\tlet chunk = this.lastSearchedChunk;\n\t\tconst searchForward = index > chunk.end;\n\n\t\twhile (chunk) {\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\n\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t\t}\n\t}\n\n\t_splitChunk(chunk, index) {\n\t\tif (chunk.edited && chunk.content.length) {\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tconst loc = getLocator(this.original)(index);\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`\n\t\t\t);\n\t\t}\n\n\t\tconst newChunk = chunk.split(index);\n\n\t\tthis.byEnd[index] = chunk;\n\t\tthis.byStart[index] = newChunk;\n\t\tthis.byEnd[newChunk.end] = newChunk;\n\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\tif (DEBUG) this.stats.timeEnd('_split');\n\t\treturn true;\n\t}\n\n\ttoString() {\n\t\tlet str = this.intro;\n\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t}\n\n\tisEmpty() {\n\t\tlet chunk = this.firstChunk;\n\t\tdo {\n\t\t\tif (\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t\t)\n\t\t\t\treturn false;\n\t\t} while ((chunk = chunk.next));\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\tlet chunk = this.firstChunk;\n\t\tlet length = 0;\n\t\tdo {\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t\t} while ((chunk = chunk.next));\n\t\treturn length;\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEndAborted(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tlet chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimEnd(rx);\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif (chunk.end !== end) {\n\t\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.previous;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimEnd(charType) {\n\t\tthis.trimEndAborted(charType);\n\t\treturn this;\n\t}\n\ttrimStartAborted(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tlet chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimStart(rx);\n\n\t\t\tif (chunk.end !== end) {\n\t\t\t\t// special case...\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.next;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimStart(charType) {\n\t\tthis.trimStartAborted(charType);\n\t\treturn this;\n\t}\n\n\thasChanged() {\n\t\treturn this.original !== this.toString();\n\t}\n\n\t_replaceRegexp(searchValue, replacement) {\n\t\tfunction getReplacement(match, str) {\n\t\t\tif (typeof replacement === 'string') {\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n\t\t\t\t\tif (i === '$') return '$';\n\t\t\t\t\tif (i === '&') return match[0];\n\t\t\t\t\tconst num = +i;\n\t\t\t\t\tif (num < match.length) return match[+i];\n\t\t\t\t\treturn `$${i}`;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\n\t\t\t}\n\t\t}\n\t\tfunction matchAll(re, str) {\n\t\t\tlet match;\n\t\t\tconst matches = [];\n\t\t\twhile ((match = re.exec(str))) {\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t\treturn matches;\n\t\t}\n\t\tif (searchValue.global) {\n\t\t\tconst matches = matchAll(searchValue, this.original);\n\t\t\tmatches.forEach((match) => {\n\t\t\t\tif (match.index != null)\n\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tconst match = this.original.match(searchValue);\n\t\t\tif (match && match.index != null)\n\t\t\t\tthis.overwrite(\n\t\t\t\t\tmatch.index,\n\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n\n\t_replaceString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst index = original.indexOf(string);\n\n\t\tif (index !== -1) {\n\t\t\tthis.overwrite(index, index + string.length, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplace(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceString(searchValue, replacement);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n\n\t_replaceAllString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst stringLength = string.length;\n\t\tfor (\n\t\t\tlet index = original.indexOf(string);\n\t\t\tindex !== -1;\n\t\t\tindex = original.indexOf(string, index + stringLength)\n\t\t) {\n\t\t\tthis.overwrite(index, index + stringLength, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplaceAll(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceAllString(searchValue, replacement);\n\t\t}\n\n\t\tif (!searchValue.global) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'MagicString.prototype.replaceAll called with a non-global RegExp argument'\n\t\t\t);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n}\n", "import MagicString from './MagicString.js';\nimport SourceMap from './SourceMap.js';\nimport getRelativePath from './utils/getRelativePath.js';\nimport isObject from './utils/isObject.js';\nimport getLocator from './utils/getLocator.js';\nimport Mappings from './utils/Mappings.js';\n\nconst hasOwnProp = Object.prototype.hasOwnProperty;\n\nexport default class Bundle {\n\tconstructor(options = {}) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\t\tthis.sources = [];\n\t\tthis.uniqueSources = [];\n\t\tthis.uniqueSourceIndexByFilename = {};\n\t}\n\n\taddSource(source) {\n\t\tif (source instanceof MagicString) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator,\n\t\t\t});\n\t\t}\n\n\t\tif (!isObject(source) || !source.content) {\n\t\t\tthrow new Error(\n\t\t\t\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`'\n\t\t\t);\n\t\t}\n\n\t\t['filename', 'ignoreList', 'indentExclusionRanges', 'separator'].forEach((option) => {\n\t\t\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\n\t\t});\n\n\t\tif (source.separator === undefined) {\n\t\t\t// TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif (source.filename) {\n\t\t\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\n\t\t\t\tif (source.content.original !== uniqueSource.content) {\n\t\t\t\t\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push(source);\n\t\treturn this;\n\t}\n\n\tappend(str, options) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString(str),\n\t\t\tseparator: (options && options.separator) || '',\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator,\n\t\t});\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator,\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateDecodedMap(options = {}) {\n\t\tconst names = [];\n\t\tlet x_google_ignoreList = undefined;\n\t\tthis.sources.forEach((source) => {\n\t\t\tObject.keys(source.content.storedNames).forEach((name) => {\n\t\t\t\tif (!~names.indexOf(name)) names.push(name);\n\t\t\t});\n\t\t});\n\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tmappings.advance(this.separator);\n\t\t\t}\n\n\t\t\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\n\t\t\tconst magicString = source.content;\n\t\t\tconst locate = getLocator(magicString.original);\n\n\t\t\tif (magicString.intro) {\n\t\t\t\tmappings.advance(magicString.intro);\n\t\t\t}\n\n\t\t\tmagicString.firstChunk.eachNext((chunk) => {\n\t\t\t\tconst loc = locate(chunk.start);\n\n\t\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\t\tif (source.filename) {\n\t\t\t\t\tif (chunk.edited) {\n\t\t\t\t\t\tmappings.addEdit(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk.content,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappings.addUneditedChunk(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tmagicString.original,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tmagicString.sourcemapLocations\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmappings.advance(chunk.content);\n\t\t\t\t}\n\n\t\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t\t});\n\n\t\t\tif (magicString.outro) {\n\t\t\t\tmappings.advance(magicString.outro);\n\t\t\t}\n\n\t\t\tif (source.ignoreList && sourceIndex !== -1) {\n\t\t\t\tif (x_google_ignoreList === undefined) {\n\t\t\t\t\tx_google_ignoreList = [];\n\t\t\t\t}\n\t\t\t\tx_google_ignoreList.push(sourceIndex);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\tgetIndentString() {\n\t\tconst indentStringCounts = {};\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tconst indentStr = source.content._getRawIndentString();\n\n\t\t\tif (indentStr === null) return;\n\n\t\t\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\n\t\t\tindentStringCounts[indentStr] += 1;\n\t\t});\n\n\t\treturn (\n\t\t\tObject.keys(indentStringCounts).sort((a, b) => {\n\t\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t\t})[0] || '\\t'\n\t\t);\n\t}\n\n\tindent(indentStr) {\n\t\tif (!arguments.length) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || (i > 0 && /\\r?\\n$/.test(separator));\n\n\t\t\tsource.content.indent(indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart, //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\ttrailingNewline = source.content.lastChar() === '\\n';\n\t\t});\n\n\t\tif (this.intro) {\n\t\t\tthis.intro =\n\t\t\t\tindentStr +\n\t\t\t\tthis.intro.replace(/^[^\\n]/gm, (match, index) => {\n\t\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprepend(str) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString() {\n\t\tconst body = this.sources\n\t\t\t.map((source, i) => {\n\t\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\t\tconst str = (i > 0 ? separator : '') + source.content.toString();\n\n\t\t\t\treturn str;\n\t\t\t})\n\t\t\t.join('');\n\n\t\treturn this.intro + body;\n\t}\n\n\tisEmpty() {\n\t\tif (this.intro.length && this.intro.trim()) return false;\n\t\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\treturn this.sources.reduce(\n\t\t\t(length, source) => length + source.content.length(),\n\t\t\tthis.intro.length\n\t\t);\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimStart(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\t\tthis.intro = this.intro.replace(rx, '');\n\n\t\tif (!this.intro) {\n\t\t\tlet source;\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i++];\n\t\t\t\tif (!source) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (!source.content.trimStartAborted(charType));\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tlet source;\n\t\tlet i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this.sources[i--];\n\t\t\tif (!source) {\n\t\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!source.content.trimEndAborted(charType));\n\n\t\treturn this;\n\t}\n}\n", "import { types } from \"recast\"\nimport { builders } from \"magicast\"\nimport {\n\tNodeInfoMapEntry,\n\tfindAstJs,\n\tfindUsedImportsInAst,\n\tgetFunctionOrDeclarationValue,\n} from \"./ast.js\"\nimport type { ExpressionKind } from \"ast-types/gen/kinds.js\"\nimport type { FunctionDeclaration, Node } from \"estree\"\nimport { walk as jsWalk } from \"estree-walker\"\n\nconst b = types.builders\nconst n = types.namedTypes\n\nexport const rewriteLoadOrHandleParameters = (\n\tast: types.namedTypes.FunctionExpression | types.namedTypes.ArrowFunctionExpression,\n\tavailableImports: [string, string][] = [],\n) => {\n\t// Find the used imports from available imports\n\tconst usedImports = findUsedImportsInAst(ast, availableImports)\n\t// Extend expression parameters\n\tif (ast.params.length > 1)\n\t\tthrow new Error(`Your load function illegally contains more than one parameter.`)\n\tif (usedImports.length > 0) {\n\t\tif (ast.params.length === 0) ast.params.push(b.identifier(\"_\"))\n\n\t\t// Add a second parameter, if necessary\n\t\tast.params.push(\n\t\t\tb.objectPattern(\n\t\t\t\tusedImports.map(([imported, local]) =>\n\t\t\t\t\tb.property(\"init\", b.identifier(imported), b.identifier(local)),\n\t\t\t\t),\n\t\t\t),\n\t\t)\n\t}\n}\n\nexport const extractWrappableExpression = ({\n\tast,\n\tname,\n\tfallbackFunction = b.arrowFunctionExpression([], b.blockStatement([])),\n\tavailableImports = [],\n}: {\n\tast: types.namedTypes.Node\n\tname: \"load\" | \"handle\"\n\tfallbackFunction?: ExpressionKind\n\tavailableImports?: [string, string][]\n}) => {\n\t// Get an expression that we can wrap\n\tconst expression = getFunctionOrDeclarationValue(ast, name, fallbackFunction)\n\tb.functionDeclaration\n\t// Rewrite the load functions parameters.\n\tif (n.ArrowFunctionExpression.check(expression) || n.FunctionExpression.check(expression))\n\t\trewriteLoadOrHandleParameters(expression, availableImports)\n\treturn expression\n}\n\nexport const replaceOrAddExportNamedFunction = (\n\tast: types.namedTypes.Program,\n\tname: string,\n\treplacementAst: types.namedTypes.ExportNamedDeclaration,\n) => {\n\tlet replaced = false\n\tjsWalk(ast as Node, {\n\t\tenter(node) {\n\t\t\tif (\n\t\t\t\tn.ExportNamedDeclaration.check(node) &&\n\t\t\t\t((n.VariableDeclaration.check(node.declaration) &&\n\t\t\t\t\tn.VariableDeclarator.check(node.declaration.declarations[0]) &&\n\t\t\t\t\tn.Identifier.check(node.declaration.declarations[0].id) &&\n\t\t\t\t\tnode.declaration.declarations[0].id.name === name) ||\n\t\t\t\t\t(n.FunctionDeclaration.check(node.declaration) &&\n\t\t\t\t\t\tn.Identifier.check(node.declaration.id) &&\n\t\t\t\t\t\tnode.declaration.id.name === name))\n\t\t\t) {\n\t\t\t\treplaced = true\n\t\t\t\tthis.replace(replacementAst as Node)\n\t\t\t\tthis.skip()\n\t\t\t}\n\t\t},\n\t})\n\tif (!replaced) ast.body.push(replacementAst)\n}\n\nexport const getWrappedExport = (\n\toptions: unknown,\n\tparams: (FunctionDeclaration | ExpressionKind)[],\n\texportedName: string,\n\twrapperName: string,\n) => {\n\tconst initHandleWrapperCall = options\n\t\t? builders.functionCall(wrapperName, options)\n\t\t: builders.functionCall(wrapperName)\n\tconst wrapperDeclarationAst = b.callExpression(\n\t\tb.memberExpression(initHandleWrapperCall.$ast, b.identifier(\"wrap\")),\n\t\tparams.map((parameter) =>\n\t\t\tn.FunctionDeclaration.check(parameter)\n\t\t\t\t? b.functionExpression.from({\n\t\t\t\t\t\tid: parameter.id,\n\t\t\t\t\t\tgenerator: parameter.generator,\n\t\t\t\t\t\tasync: parameter.async,\n\t\t\t\t\t\tparams: parameter.params,\n\t\t\t\t\t\tbody: parameter.body,\n\t\t\t\t  })\n\t\t\t\t: parameter,\n\t\t) as ExpressionKind[],\n\t)\n\treturn b.exportNamedDeclaration(\n\t\tb.variableDeclaration(\"const\", [\n\t\t\tb.variableDeclarator(b.identifier(exportedName), wrapperDeclarationAst),\n\t\t]),\n\t)\n}\n\n// NOTES: Test this with imports on a single line or on multiple lines\n// Removes all the @inlang/sdk-js import(s) (There could theoretically be multiple imports on multiple lines)\n// Returns an array with the import properties and their aliases\nexport const getSdkImportedModules = (\n\tast: types.namedTypes.Node | Node,\n\tremove = true,\n): [string, string][] =>\n\tfindAstJs(\n\t\tast,\n\t\t[\n\t\t\t({ node }) =>\n\t\t\t\tn.ImportDeclaration.check(node) &&\n\t\t\t\tn.Literal.check(node.source) &&\n\t\t\t\tnode.source.value === \"@inlang/sdk-js\",\n\t\t\t({ node }) => n.ImportSpecifier.check(node),\n\t\t],\n\t\t(node) =>\n\t\t\tn.ImportSpecifier.check(node)\n\t\t\t\t? (meta) => {\n\t\t\t\t\t\tconst { parent } = meta.get(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t) as NodeInfoMapEntry<types.namedTypes.ImportDeclaration>\n\t\t\t\t\t\t// Remove the complete import from \"@inlang/sdk-js\"\n\t\t\t\t\t\t// (We assume that imports can only be top-level)\n\t\t\t\t\t\tif (n.Program.check(ast) && remove) {\n\t\t\t\t\t\t\tconst declarationIndex = ast.body.findIndex((node) => node === parent)\n\t\t\t\t\t\t\tdeclarationIndex != -1 && ast.body.splice(declarationIndex, 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [node.imported.name, node.local?.name ?? node.imported.name]\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t)[0] ?? []\n\nexport const replaceSdkImports = (ast: types.namedTypes.Node | Node, from: \"locals\") => {\n\tconst importedModules = getSdkImportedModules(ast, false)\n\t// <id> -> getRuntimeFromLocals(event.locals).<id>\n\tconst localsReplace = (id: string) =>\n\t\tb.memberExpression(\n\t\t\tb.callExpression(b.identifier(\"getRuntimeFromLocals\"), [\n\t\t\t\tb.memberExpression(b.identifier(\"event\"), b.identifier(\"locals\")),\n\t\t\t]),\n\t\t\tb.identifier(id),\n\t\t)\n\tconst replace = from === \"locals\" ? localsReplace : () => undefined\n\tjsWalk(ast as Node, {\n\t\tenter(node) {\n\t\t\tif (n.ImportDeclaration.check(node)) this.skip()\n\t\t\telse if (\n\t\t\t\tn.Identifier.check(node) &&\n\t\t\t\timportedModules.some(([, alias]) => node.name === alias)\n\t\t\t) {\n\t\t\t\tthis.replace(replace(node.name) as Node)\n\t\t\t\tthis.skip()\n\t\t\t}\n\t\t},\n\t})\n}\n", "import type { TransformConfig } from \"../config.js\"\nimport { parseModule, generateCode, parseExpression } from \"magicast\"\nimport { deepMergeObject } from \"magicast/helpers\"\nimport { types } from \"recast\"\nimport {\n\textractWrappableExpression,\n\tgetWrappedExport,\n\tgetSdkImportedModules,\n\treplaceOrAddExportNamedFunction,\n} from \"../../../helpers/inlangAst.js\"\nimport { dedent } from \"ts-dedent\"\n\nconst requiredImports = (root: boolean) => `\nimport { browser } from \"$app/environment\";\nimport { ${\n\troot ? \"initRootLayoutLoadWrapper\" : \"initLoadWrapper\"\n} } from \"@inlang/sdk-js/adapter-sveltekit/shared\";\nimport { initLocalStorageDetector, navigatorDetector } from \"@inlang/sdk-js/detectors/client\";\n`\n\nconst options = (config: TransformConfig) =>\n\tconfig.languageInUrl\n\t\t? `{}`\n\t\t: `\n{initDetectors: browser\n? () => [initLocalStorageDetector(), navigatorDetector]\n: undefined}\n`\n\nexport const transformLayoutJs = (config: TransformConfig, code: string, root: boolean) => {\n\t// TODO: implement this\n\tif (code.includes(\"'@inlang/sdk-js'\") || code.includes('\"@inlang/sdk-js\"')) {\n\t\tthrow Error(dedent`\n\t\t\tIt is currently not supported to import something from '@inlang/sdk-js' in this file. You can use the following code to make it work:\n\n\t\t\texport const load = async (event, { i }) => {\n\t\t\t\tconsole.log(i('hello.inlang'))\n\t\t\t}\n\t\t`)\n\t}\n\n\tconst n = types.namedTypes\n\tconst ast = parseModule(code)\n\t// Remove imports, but save their names\n\tconst importNames = getSdkImportedModules(ast.$ast)\n\t// Merge imports with required imports\n\tconst importsAst = parseModule(requiredImports(root))\n\tdeepMergeObject(ast, importsAst)\n\tconst arrowOrFunctionNode = extractWrappableExpression({\n\t\tast: ast.$ast,\n\t\tname: \"load\",\n\t\tavailableImports: importNames,\n\t})\n\tconst exportAst = getWrappedExport(\n\t\tparseExpression(root ? options(config) : \"{}\"),\n\t\t[arrowOrFunctionNode],\n\t\t\"load\",\n\t\troot ? \"initRootLayoutLoadWrapper\" : \"initLoadWrapper\",\n\t)\n\t// Replace or add current export handle\n\tif (n.Program.check(ast.$ast)) {\n\t\treplaceOrAddExportNamedFunction(ast.$ast, \"load\", exportAst)\n\t}\n\treturn generateCode(ast).code\n}\n", "import type { TransformConfig } from \"../config.js\"\nimport { parseModule, generateCode } from \"magicast\"\nimport { deepMergeObject } from \"magicast/helpers\"\nimport { types } from \"recast\"\nimport { dedent } from \"ts-dedent\"\nimport {\n\textractWrappableExpression,\n\tgetWrappedExport,\n\tgetSdkImportedModules,\n\treplaceOrAddExportNamedFunction,\n} from \"../../../helpers/inlangAst.js\"\n\nconst requiredImports = (root: boolean) =>\n\troot\n\t\t? `\nimport { initRootLayoutServerLoadWrapper } from \"@inlang/sdk-js/adapter-sveltekit/server\";\n`\n\t\t: `\nimport { initServerLoadWrapper } from \"@inlang/sdk-js/adapter-sveltekit/server\";\n`\n\n// TODO: refactor together with `+page.server.js.ts`\nexport const transformLayoutServerJs = (config: TransformConfig, code: string, root: boolean) => {\n\t// TODO: implement this\n\tif (code.includes(\"'@inlang/sdk-js'\") || code.includes('\"@inlang/sdk-js\"')) {\n\t\tthrow Error(dedent`\n\t\t\tIt is currently not supported to import something from '@inlang/sdk-js' in this file. You can use the following code to make it work:\n\n\t\t\texport const load = async (event, { i }) => {\n\t\t\t\tconsole.log(i('hello.inlang'))\n\t\t\t}\n\t\t`)\n\t}\n\n\tconst n = types.namedTypes\n\tconst ast = parseModule(code)\n\n\t// Remove imports, but save their names\n\tconst importNames = getSdkImportedModules(ast.$ast)\n\t// Merge imports with required imports\n\tconst importsAst = parseModule(requiredImports(root))\n\tdeepMergeObject(ast, importsAst)\n\tconst arrowOrFunctionNode = extractWrappableExpression({\n\t\tast: ast.$ast,\n\t\tname: \"load\",\n\t\tavailableImports: importNames,\n\t})\n\tconst exportAst = getWrappedExport(\n\t\tundefined,\n\t\t[arrowOrFunctionNode],\n\t\t\"load\",\n\t\troot ? \"initRootLayoutServerLoadWrapper\" : \"initServerLoadWrapper\",\n\t)\n\t// Replace or add current export handle\n\tif (n.Program.check(ast.$ast)) {\n\t\treplaceOrAddExportNamedFunction(ast.$ast, \"load\", exportAst)\n\t}\n\treturn generateCode(ast).code\n}\n", "import type { TransformConfig } from \"../config.js\"\nimport { transformSvelte } from \"./_.svelte.js\"\nimport { parse, preprocess } from \"svelte/compiler\"\nimport { vitePreprocess } from \"@sveltejs/kit/vite\"\nimport { parseModule, generateCode } from \"magicast\"\nimport { deepMergeObject } from \"magicast/helpers\"\nimport {\n\tNodeInfoMapEntry,\n\tfindAstJs,\n\tgetReactiveImportIdentifiers,\n\tmakeJsReactive,\n\tmakeMarkupReactive,\n\tsortMarkup,\n\thtmlIsEmpty,\n\tvariableDeclarationAst,\n\tinitImportedVariablesAst,\n\tgetRootReferenceIndexes,\n} from \"../../../helpers/ast.js\"\nimport MagicStringImport from \"magic-string\"\nimport { types } from \"recast\"\nimport { getSdkImportedModules } from \"../../../helpers/inlangAst.js\"\n\n// the type definitions don't match\nconst MagicString = MagicStringImport as unknown as typeof MagicStringImport.default\n\nexport const transformLayoutSvelte = (config: TransformConfig, code: string, root: boolean) => {\n\tif (root) {\n\t\treturn transformRootLayoutSvelte(config, code)\n\t}\n\n\treturn transformGenericLayoutSvelte(config, code)\n}\n\nconst transformRootLayoutSvelte = async (config: TransformConfig, code: string) => {\n\tconst n = types.namedTypes\n\tconst b = types.builders\n\tconst requiredImportsAsts = [\n\t\tparseModule(`import { getRuntimeFromData } from \"@inlang/sdk-js/adapter-sveltekit/shared\";`),\n\t]\n\tconst reactiveImportIdentifiers: string[] = []\n\tlet localLanguageName: string\n\tif (config.languageInUrl)\n\t\trequiredImportsAsts.push(\n\t\t\tparseModule(\n\t\t\t\t`import { getRuntimeFromContext, addRuntimeToContext } from \"@inlang/sdk-js/adapter-sveltekit/client/not-reactive\";`,\n\t\t\t),\n\t\t\tparseModule(`import { browser } from \"$app/environment\";`),\n\t\t)\n\telse\n\t\trequiredImportsAsts.push(\n\t\t\tparseModule(\n\t\t\t\t`import { getRuntimeFromContext, addRuntimeToContext } from \"@inlang/sdk-js/adapter-sveltekit/client/reactive\";`,\n\t\t\t),\n\t\t\tparseModule(`import { browser } from \"$app/environment\";`),\n\t\t)\n\n\t// First, we need to remove typescript statements from script tag\n\tconst codeWithoutTypes = (await preprocess(code, vitePreprocess({ script: true, style: false })))\n\t\t.code\n\n\t// Insert script tag if we don't have one\n\tconst svelteAst = parse(codeWithoutTypes)\n\t// TODO @benjaminpreiss I wonder how we could include adding the empty script tag to the sourcemap\n\t// TODO @benjaminpreiss Find out, why we have to add the lang=\"ts\" attribute below... Otherwise preprocess doesn't recognize the script tag :/\n\tconst codeWithScriptTag = !svelteAst.instance\n\t\t? `<script>\n// Inserted by inlang\n</script>\n${codeWithoutTypes}`\n\t\t: codeWithoutTypes\n\n\tconst processedScript = await preprocess(codeWithScriptTag, {\n\t\tscript: async (options) => {\n\t\t\tconst ast = parseModule(options.content, {\n\t\t\t\tsourceFileName: config.sourceFileName,\n\t\t\t})\n\t\t\t// Remove export let data statement\n\t\t\tfindAstJs(\n\t\t\t\tast.$ast,\n\t\t\t\t[\n\t\t\t\t\t({ node }) => n.ExportNamedDeclaration.check(node),\n\t\t\t\t\t({ node }) => n.VariableDeclaration.check(node),\n\t\t\t\t\t({ node }) => n.VariableDeclarator.check(node),\n\t\t\t\t\t({ node }) => n.Identifier.check(node) && node.name === \"data\",\n\t\t\t\t],\n\t\t\t\t(node) =>\n\t\t\t\t\tn.ExportNamedDeclaration.check(node)\n\t\t\t\t\t\t? (meta) => {\n\t\t\t\t\t\t\tconst { parent, index } = meta.get(\n\t\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\t) as NodeInfoMapEntry<types.namedTypes.Program>\n\t\t\t\t\t\t\tif (index != undefined) parent.body.splice(index, 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: undefined,\n\t\t\t)\n\n\t\t\t// Remove import \"@inlang/sdk-js\" but save the aliases of all imports\n\t\t\t// We need AT LEAST the language declaration for later.\n\t\t\tconst importNames = getSdkImportedModules(ast.$ast)\n\t\t\tif (importNames.length === 0 || !importNames.some(([imported]) => imported === \"language\"))\n\t\t\t\timportNames?.push([\"language\", \"language\"])\n\n\t\t\t// Svelte bug: store imports need to come first\n\t\t\timportNames.sort(([identifier]) => (identifier === \"language\" || identifier === \"i\" ? -1 : 1))\n\n\t\t\treactiveImportIdentifiers.push(...getReactiveImportIdentifiers(importNames))\n\t\t\tconst reactiveImportNames = importNames.filter(([, local]) =>\n\t\t\t\treactiveImportIdentifiers.includes(local),\n\t\t\t)\n\n\t\t\t// Deep merge imports that we need\n\t\t\tif (!options.attributes.context) {\n\t\t\t\tfor (const importAst of requiredImportsAsts) {\n\t\t\t\t\tdeepMergeObject(ast, importAst)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Initialize former imports & data\n\t\t\tconst exportLetDataExportAst = b.exportNamedDeclaration(\n\t\t\t\tb.variableDeclaration(\"let\", [b.variableDeclarator(b.identifier(\"data\"))]),\n\t\t\t)\n\n\t\t\tconst addRuntimeToContextAst = b.expressionStatement(\n\t\t\t\tb.callExpression(b.identifier(\"addRuntimeToContext\"), [\n\t\t\t\t\tb.callExpression(b.identifier(\"getRuntimeFromData\"), [b.identifier(\"data\")]),\n\t\t\t\t]),\n\t\t\t)\n\t\t\tconst nonReactiveLabeledStatementAst = (importNames: [string, string][]) =>\n\t\t\t\tb.labeledStatement(\n\t\t\t\t\tb.identifier(\"$\"),\n\t\t\t\t\tb.ifStatement(b.identifier(\"browser\"),\n\t\t\t\t\t\tb.blockStatement([\n\t\t\t\t\t\t\taddRuntimeToContextAst,\n\t\t\t\t\t\t\t...([initImportedVariablesAst(importNames)].filter(\n\t\t\t\t\t\t\t\t(n) => n !== undefined,\n\t\t\t\t\t\t\t) as types.namedTypes.ExpressionStatement[]),\n\t\t\t\t\t\t])\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\tlocalLanguageName =\n\t\t\t\timportNames.find(([imported]) => imported === \"language\")?.[1] ?? \"language\"\n\t\t\tconst reactiveLabeledStatementAst = b.labeledStatement(\n\t\t\t\tb.identifier(\"$\"),\n\t\t\t\tb.ifStatement(\n\t\t\t\t\tb.logicalExpression(\"&&\", b.identifier(\"browser\"), b.identifier(\"$\" + localLanguageName)),\n\t\t\t\t\tb.blockStatement([\n\t\t\t\t\t\tb.expressionStatement(\n\t\t\t\t\t\t\tb.chainExpression(\n\t\t\t\t\t\t\t\tb.callExpression(\n\t\t\t\t\t\t\t\t\tb.optionalMemberExpression(\n\t\t\t\t\t\t\t\t\t\tb.memberExpression(\n\t\t\t\t\t\t\t\t\t\t\tb.memberExpression(b.identifier(\"document\"), b.identifier(\"body\")),\n\t\t\t\t\t\t\t\t\t\t\tb.identifier(\"parentElement\"),\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tb.identifier(\"setAttribute\"),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t[b.literal(\"lang\"), b.identifier(\"$\" + localLanguageName)],\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\t// TODO @benjaminpreiss: add this line only of `localStorage` is configured\n\t\t\t\t\t\t// TODO @benjaminpreiss: do the same for `sessionStorage`\n\t\t\t\t\t\tb.expressionStatement(\n\t\t\t\t\t\t\tb.callExpression(\n\t\t\t\t\t\t\t\tb.memberExpression(b.identifier(\"localStorage\"), b.identifier(\"setItem\")),\n\t\t\t\t\t\t\t\t[b.literal(\"language\"), b.identifier(\"$\" + localLanguageName)],\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t]),\n\t\t\t\t),\n\t\t\t)\n\t\t\t// Return the index in ast body that contains our first declaration\n\t\t\tconst usageIndexes = getRootReferenceIndexes(ast.$ast, [...importNames, [\"data\", \"data\"]])\n\t\t\t// prefix language and i aliases with $ if reactive\n\t\t\tif (!config.languageInUrl) makeJsReactive(ast.$ast, reactiveImportIdentifiers)\n\t\t\t// Add exportLetDataExportAst, addRuntimeToContextAst and initImportedVariablesAst before any usage of \"data\" or importNames\n\t\t\tif (n.Program.check(ast.$ast)) {\n\t\t\t\tast.$ast.body.splice(\n\t\t\t\t\tusageIndexes?.[0] ?? ast.$ast.body.length,\n\t\t\t\t\t0,\n\t\t\t\t\t...([\n\t\t\t\t\t\texportLetDataExportAst,\n\t\t\t\t\t\tvariableDeclarationAst(importNames),\n\t\t\t\t\t\taddRuntimeToContextAst,\n\t\t\t\t\t\tinitImportedVariablesAst(importNames),\n\t\t\t\t\t\tconfig.languageInUrl\n\t\t\t\t\t\t\t? nonReactiveLabeledStatementAst(reactiveImportNames)\n\t\t\t\t\t\t\t: reactiveLabeledStatementAst,\n\t\t\t\t\t].filter((n) => n !== undefined) as types.namedTypes.ExpressionStatement[]),\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tconst generated = generateCode(ast, {\n\t\t\t\tsourceMapName: config.sourceMapName,\n\t\t\t})\n\n\t\t\treturn { ...options, ...generated }\n\t\t},\n\t})\n\n\tconst processedMarkup = await preprocess(processedScript.code, {\n\t\tmarkup: (options) => {\n\t\t\t// We already iterated over .instance and .module\n\t\t\t// Find locations of nodes with i or language\n\t\t\tconst s = new MagicString(options.content)\n\t\t\tconst parsed = parse(s.toString())\n\t\t\tconst insertSlot = htmlIsEmpty(parsed.html)\n\t\t\ts.appendRight(\n\t\t\t\tparsed.html.start,\n\t\t\t\t\"\" +\n\t\t\t\t(config.languageInUrl && config.isStatic ? `{#if ${localLanguageName}}` : \"\") +\n\t\t\t\t(config.languageInUrl ? `{#key ${localLanguageName}}` : `{#if $${localLanguageName}}`),\n\t\t\t)\n\t\t\tif (!config.languageInUrl) makeMarkupReactive(parsed, s, reactiveImportIdentifiers)\n\t\t\tsortMarkup(parsed, s)\n\t\t\ts.append(\n\t\t\t\t(insertSlot ? `<slot />` : ``) +\n\t\t\t\t(config.languageInUrl ? `{/key}` : `{/if}`) +\n\t\t\t\t(config.languageInUrl && config.isStatic ? `{/if}` : \"\"),\n\t\t\t)\n\t\t\tconst map = s.generateMap({\n\t\t\t\tsource: config.sourceFileName,\n\t\t\t\tfile: config.sourceMapName,\n\t\t\t\tincludeContent: true,\n\t\t\t})\n\t\t\tconst code = s.toString()\n\t\t\treturn { code, map }\n\t\t},\n\t})\n\n\treturn processedMarkup.code\n}\n\nconst transformGenericLayoutSvelte = transformSvelte\n", "import type { TransformConfig } from \"../config.js\"\nimport { parseModule, generateCode, parseExpression } from \"magicast\"\nimport { deepMergeObject } from \"magicast/helpers\"\nimport { types } from \"recast\"\nimport { dedent } from \"ts-dedent\"\nimport {\n\textractWrappableExpression,\n\tgetWrappedExport,\n\tgetSdkImportedModules,\n\treplaceOrAddExportNamedFunction,\n} from \"../../../helpers/inlangAst.js\"\n\nconst requiredImports = (config: TransformConfig, root: boolean) => `\nimport { browser } from \"$app/environment\";\nimport { ${\n\troot ? \"initRootPageLoadWrapper\" : \"initLoadWrapper\"\n}, replaceLanguageInUrl } from \"@inlang/sdk-js/adapter-sveltekit/shared\";\nimport { initLocalStorageDetector, navigatorDetector } from \"@inlang/sdk-js/detectors/client\";\n${config.languageInUrl && config.isStatic ? `import { redirect } from \"@sveltejs/kit\";` : \"\"}\n`\n\nconst options = (config: TransformConfig) =>\n\tconfig.languageInUrl && config.isStatic\n\t\t? `\n{\n\tbrowser,\n\tinitDetectors: () => [navigatorDetector],\n\tredirect: {\n\t\tthrowable: redirect,\n\t\tgetPath: ({ url }, language) => replaceLanguageInUrl(new URL(url), language),\n\t},\n}\n\t`\n\t\t: `{browser}`\n\nexport const transformPageJs = (config: TransformConfig, code: string, root: boolean) => {\n\t// TODO: implement this\n\tif (code.includes(\"'@inlang/sdk-js'\") || code.includes('\"@inlang/sdk-js\"')) {\n\t\tthrow Error(dedent`\n\t\t\tIt is currently not supported to import something from '@inlang/sdk-js' in this file. You can use the following code to make it work:\n\n\t\t\texport const load = async (event, { i }) => {\n\t\t\t\tconsole.log(i('hello.inlang'))\n\t\t\t}\n\t\t`)\n\t}\n\n\tconst n = types.namedTypes\n\tconst ast = parseModule(code)\n\n\t// Remove imports, but save their names\n\tconst importNames = getSdkImportedModules(ast.$ast)\n\t// Merge imports with required imports\n\tconst importsAst = parseModule(requiredImports(config, root))\n\tdeepMergeObject(ast, importsAst)\n\tconst arrowOrFunctionNode = extractWrappableExpression({\n\t\tast: ast.$ast,\n\t\tname: \"load\",\n\t\tavailableImports: importNames,\n\t})\n\tconst exportAst = getWrappedExport(\n\t\tparseExpression(root ? options(config) : \"{}\"),\n\t\t[arrowOrFunctionNode],\n\t\t\"load\",\n\t\troot ? \"initRootPageLoadWrapper\" : \"initLoadWrapper\",\n\t)\n\t// Replace or add current export handle\n\tif (n.Program.check(ast.$ast)) {\n\t\treplaceOrAddExportNamedFunction(ast.$ast, \"load\", exportAst)\n\t}\n\treturn generateCode(ast).code\n}\n", "import type { TransformConfig } from \"../config.js\"\nimport { parseModule, generateCode } from \"magicast\"\nimport { deepMergeObject } from \"magicast/helpers\"\nimport { types } from \"recast\"\nimport { dedent } from \"ts-dedent\"\nimport {\n\textractWrappableExpression,\n\tgetWrappedExport,\n\tgetSdkImportedModules,\n\treplaceOrAddExportNamedFunction,\n} from \"../../../helpers/inlangAst.js\"\n\n// TODO: refactor together with `+layout.server.js.ts`\nexport const transformPageServerJs = (config: TransformConfig, code: string, root: boolean) => {\n\t// TODO: implement this\n\tif (code.includes(\"'@inlang/sdk-js'\") || code.includes('\"@inlang/sdk-js\"')) {\n\t\tthrow Error(dedent`\n\t\t\tIt is currently not supported to import something from '@inlang/sdk-js' in this file. You can use the following code to make it work:\n\n\t\t\texport const load = async (event, { i }) => {\n\t\t\t\tconsole.log(i('hello.inlang'))\n\t\t\t}\n\t\t`)\n\t}\n\n\tconst n = types.namedTypes\n\tconst ast = parseModule(code)\n\n\t// Remove imports, but save their names\n\tconst importNames = getSdkImportedModules(ast.$ast)\n\t// Merge imports with required imports\n\tconst importsAst = parseModule(\n\t\t'import { initServerLoadWrapper } from \"@inlang/sdk-js/adapter-sveltekit/server\";',\n\t)\n\tdeepMergeObject(ast, importsAst)\n\tconst arrowOrFunctionNode = extractWrappableExpression({\n\t\tast: ast.$ast,\n\t\tname: \"load\",\n\t\tavailableImports: importNames,\n\t})\n\tconst exportAst = getWrappedExport(\n\t\tundefined,\n\t\t[arrowOrFunctionNode],\n\t\t\"load\",\n\t\t\"initServerLoadWrapper\",\n\t)\n\t// Replace or add current export handle\n\tif (n.Program.check(ast.$ast)) {\n\t\treplaceOrAddExportNamedFunction(ast.$ast, \"load\", exportAst)\n\t}\n\treturn generateCode(ast).code\n}\n", "import type { TransformConfig } from \"../config.js\"\nimport { transformSvelte } from \"./_.svelte.js\"\n\nexport const transformPageSvelte = (config: TransformConfig, code: string, root: boolean) => {\n\treturn transformSvelte(config, code)\n}\n", "import type { TransformConfig } from \"../config.js\"\n\n// TODO: implement\nexport const transformServerRequestJs = (config: TransformConfig, code: string, root: boolean) => {\n\treturn code\n}\n", "import type { TransformConfig } from \"../config.js\"\n\n// TODO: implement\nexport const transformServerJs = (config: TransformConfig, code: string) => {\n\treturn code\n}\n", "import type { TransformConfig } from \"../config.js\"\nimport { types } from \"recast\"\nimport { parseModule, generateCode, parseExpression } from \"magicast\"\nimport { deepMergeObject } from \"magicast/helpers\"\nimport { findDefinition, mergeNodes } from \"../../../helpers/ast.js\"\nimport { dedent } from \"ts-dedent\"\nimport {\n\tgetWrappedExport,\n\treplaceOrAddExportNamedFunction,\n\treplaceSdkImports,\n} from \"../../../helpers/inlangAst.js\"\nimport type { ExpressionKind } from \"ast-types/gen/kinds.js\"\n\nconst requiredImports = (config: TransformConfig) =>\n\t`\nimport { initHandleWrapper } from \"@inlang/sdk-js/adapter-sveltekit/server\";` +\n\t(config.isStatic || !config.languageInUrl\n\t\t? ``\n\t\t: `\nimport { initAcceptLanguageHeaderDetector } from \"@inlang/sdk-js/detectors/server\";\nimport { redirect } from \"@sveltejs/kit\";\nimport { replaceLanguageInUrl } from \"@inlang/sdk-js/adapter-sveltekit/shared\";\n`)\n\nconst options = (config: TransformConfig) => dedent`\n\t{\n\t\tinlangConfigModule: import(\"../inlang.config.js\"),\n\t\tgetLanguage: ${\n\t\t\tconfig.languageInUrl ? `({ url }) => url.pathname.split(\"/\")[1]` : `() => undefined`\n\t\t},\n\t${\n\t\tconfig.languageInUrl && !config.isStatic\n\t\t\t? `\n\t\tinitDetectors: ({ request }) => [initAcceptLanguageHeaderDetector(request.headers)],\n\t\tredirect: {\n\t\t\tthrowable: redirect,\n\t\t\tgetPath: ({ url }, language) => replaceLanguageInUrl(url, language),\n\t\t},\n\t`\n\t\t\t: \"\"\n\t}\n\t}`\n\nexport const transformHooksServerJs = (config: TransformConfig, code: string) => {\n\tconst n = types.namedTypes\n\tconst b = types.builders\n\tconst ast = parseModule(code)\n\n\t// Merge imports with required imports\n\tconst imports = requiredImports(config)\n\tconst importsAst = parseModule(imports)\n\tdeepMergeObject(ast, importsAst)\n\t// export function handle({event, resolve}) {}\n\tconst functionTemplate = b.exportNamedDeclaration(\n\t\tb.functionDeclaration(\n\t\t\tb.identifier(\"handle\"),\n\t\t\t[\n\t\t\t\tb.objectPattern([\n\t\t\t\t\tb.property(\"init\", b.identifier(\"event\"), b.identifier(\"event\")),\n\t\t\t\t\tb.property(\"init\", b.identifier(\"resolve\"), b.identifier(\"resolve\")),\n\t\t\t\t]),\n\t\t\t],\n\t\t\tb.blockStatement([\n\t\t\t\tb.returnStatement(b.callExpression(b.identifier(\"resolve\"), [b.identifier(\"event\")])),\n\t\t\t]),\n\t\t),\n\t)\n\t// Replace imports from sdk\n\treplaceSdkImports(ast.$ast, \"locals\")\n\t// Make sure that exported \"handle\" function exists & has the parameters we need\n\tmergeNodes(ast.$ast, functionTemplate)\n\tconst [def] = findDefinition(ast.$ast, \"handle\")\n\tif (def) {\n\t\tconst exportAst = getWrappedExport(\n\t\t\tparseExpression(options(config)),\n\t\t\t[def as ExpressionKind],\n\t\t\t\"handle\",\n\t\t\t\"initHandleWrapper\",\n\t\t)\n\n\t\t// Replace or add current export handle\n\t\tif (n.Program.check(ast.$ast)) {\n\t\t\treplaceOrAddExportNamedFunction(ast.$ast, \"handle\", exportAst)\n\t\t}\n\t}\n\treturn generateCode(ast).code\n}\n", "import type { TransformConfig } from \"../config.js\"\n\n// TODO: @benjaminpreiss: transform\nexport const transformLanguageJson = (config: TransformConfig, code: string) => {\n\tif (code) {\n\t\t// TODO: throw error if file contains any other export that does not begin with `_`; currently we just override it\n\t\t// throw new Error()\n\t}\n\n\treturn `\nimport { json } from \"@sveltejs/kit\"\nimport { getResource, reloadResources } from \"@inlang/sdk-js/adapter-sveltekit/server\"\n\nexport const GET = async ({ params: { language } }) => {\n\tawait reloadResources()\n\treturn json(getResource(language) || null)\n}\n${\n\tconfig.isStatic && config.inlang.sdk.resources.cache === \"build-time\"\n\t\t? `\nexport const prerender = true\n`\n\t\t: \"\"\n}\n${\n\tconfig.svelteKit.version || \"\" >= \"1.16.3\"\n\t\t? `\nimport { initState } from '@inlang/sdk-js/adapter-sveltekit/server'\n\nexport const entries = async () => {\n\tconst { languages } = await initState(await import('../../../../inlang.config.js'))\n\n\treturn languages.map(language => ({ language }))\n}`\n\t\t: \"\"\n}\n`\n}\n", "import { InlangError } from \"../../../config/config.js\"\nimport type { TransformConfig } from \"../config.js\"\nimport type { FileInformation } from \"../fileInformation.js\"\nimport { transformJs } from \"./_.js.js\"\nimport { transformSvelte } from \"./_.svelte.js\"\nimport { transformLayoutJs } from \"./+layout.js.js\"\nimport { transformLayoutServerJs } from \"./+layout.server.js.js\"\nimport { transformLayoutSvelte } from \"./+layout.svelte.js\"\nimport { transformPageJs } from \"./+page.js.js\"\nimport { transformPageServerJs } from \"./+page.server.js.js\"\nimport { transformPageSvelte } from \"./+page.svelte.js\"\nimport { transformServerRequestJs } from \"./+server.js.js\"\nimport { transformServerJs } from \"./_.server.js.js\"\nimport { transformHooksServerJs } from \"./hooks.server.js.js\"\nimport { transformLanguageJson } from \"./[language].json.js\"\n\n// TODO: throw errors if something is not supported and show a guide how to add the functionality manually\n\nexport const transformCode = (\n\tconfig: TransformConfig,\n\tcode: string,\n\t{ type, root }: FileInformation,\n) => {\n\tif (!pluginOrderVerified && type.endsWith(\".svelte\")) assertCorrectPluginOrder(code)\n\n\tswitch (type) {\n\t\tcase \"hooks.server.js\":\n\t\t\treturn transformHooksServerJs(config, code)\n\t\tcase \"[language].json\":\n\t\t\treturn transformLanguageJson(config, code)\n\t\tcase \"+server.js\":\n\t\t\treturn transformServerRequestJs(config, code, root)\n\t\tcase \"+layout.server.js\":\n\t\t\treturn transformLayoutServerJs(config, code, root)\n\t\tcase \"+layout.js\":\n\t\t\treturn transformLayoutJs(config, code, root)\n\t\tcase \"+layout.svelte\":\n\t\t\treturn transformLayoutSvelte(config, code, root)\n\t\tcase \"+page.server.js\":\n\t\t\treturn transformPageServerJs(config, code, root)\n\t\tcase \"+page.js\":\n\t\t\treturn transformPageJs(config, code, root)\n\t\tcase \"+page.svelte\":\n\t\t\treturn transformPageSvelte(config, code, root)\n\t\tcase \"*.server.js\":\n\t\t\treturn transformServerJs(config, code)\n\t\tcase \"*.js\":\n\t\t\treturn transformJs(config, code)\n\t\tcase \"*.svelte\":\n\t\t\treturn transformSvelte(config, code)\n\t}\n}\n\n// ------------------------------------------------------------------------------------------------\n\nlet pluginOrderVerified = false\n\nconst REGEX_SVELTE_COMPILER_INFO = /^\\/\\*\\s.*\\.svelte generated by Svelte v\\d+.\\d+.\\d+\\s\\*\\/$/\n\nconst assertCorrectPluginOrder = (code: string) => {\n\tif (code.split(\"\\n\")[0]?.match(REGEX_SVELTE_COMPILER_INFO)) {\n\t\tthrow new InlangError(\n\t\t\t\"Make sure to place the inlang plugin before the svelte plugin in your vite config. See https://inlang.com/documentation/sdk/sveltekit.\",\n\t\t)\n\t}\n\n\tpluginOrderVerified = true\n}\n", "import { plugin } from \"./vite-plugin/plugin.js\"\n\nexport default plugin\n"],
  "mappings": "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,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,KAAK,GAAG,EAAE,KAAK,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,MAAM,GAAG,KAAK,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,KAAK,IAAI,KAAK,KAAK,EAAE,IAAI,EAE19CC,GAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,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",
  "names": ["dedent", "templ", "values", "_i", "strings", "indentLengths", "arr", "str", "matches", "match", "_a", "_b", "pattern_1", "string", "value", "i", "endentations", "endentation", "indentedValue", "exports", "tslib_es6_exports", "__export", "__assign", "__asyncDelegator", "__asyncGenerator", "__asyncValues", "__await", "__awaiter", "__classPrivateFieldGet", "__classPrivateFieldIn", "__classPrivateFieldSet", "__createBinding", "__decorate", "__exportStar", "__extends", "__generator", "__importDefault", "__importStar", "__makeTemplateObject", "__metadata", "__param", "__read", "__rest", "__spread", "__spreadArray", "__spreadArrays", "__values", "d", "b", "extendStatics", "__", "e", "t", "p", "decorators", "target", "key", "desc", "c", "r", "i", "paramIndex", "decorator", "metadataKey", "metadataValue", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "rejected", "result", "body", "_", "f", "y", "g", "verb", "n", "v", "op", "m", "o", "s", "ar", "error", "il", "k", "a", "j", "jl", "to", "from", "pack", "l", "q", "resume", "settle", "fulfill", "cooked", "raw", "mod", "__setModuleDefault", "receiver", "state", "kind", "init_tslib_es6", "__esmMin", "k2", "require_types", "__commonJSMin", "exports", "tslib_1", "Op", "objToStr", "hasOwn", "BaseType", "value", "deep", "str", "shallowStringify", "elemType", "ArrayType", "_super", "_this", "elem", "IdentityType", "result", "ObjectType", "fields", "field", "OrType", "types", "type", "PredicateType", "name", "predicate", "Def", "typeName", "that", "allFields", "checkFieldByName", "child", "supertypeNames", "_i", "bases", "baseName", "Field", "defaultFn", "hidden", "obj", "key", "typesPlugin", "_fork", "Type", "isArray", "isObject", "bicfIndex", "builtInCtorFns", "builtInCtorTypes", "defCache", "DefImpl", "defBuiltInType", "example", "objStr", "isString", "isFunction", "isRegExp", "isDate", "isNumber", "isBoolean", "isNull", "isUndefined", "isBigInt", "builtInTypes", "defFromValue", "d", "vDef", "buildParams", "addParam", "built", "param", "arg", "isArgAvailable", "all", "message", "builder", "args", "argc", "nodePrototype", "i", "builders", "getBuilderName", "allSupertypes", "def", "extend", "fieldName", "namedTypes", "populateSupertypeList", "wrapExpressionBuilderWithStatement", "getSupertypeNames", "computeSupertypeLookupTable", "candidates", "table", "typeNames", "typeNameCount", "j", "superTypeName", "defineMethod", "func", "old", "upperCasePrefix", "len", "getStatementBuilderName", "getFieldNames", "object", "getFieldValue", "eachField", "callback", "context", "someField", "wrapperName", "wrapped", "list", "lastSeen", "pos", "to", "from", "into", "finalize", "require_path", "__commonJSMin", "exports", "module", "tslib_1", "types_1", "Op", "hasOwn", "pathPlugin", "fork", "types", "isArray", "isNumber", "Path", "value", "parentPath", "name", "Pp", "getChildCache", "path", "getChildPath", "cache", "actualChildValue", "childPath", "names", "_i", "count", "i", "callback", "context", "childPaths", "len", "result", "emptyMoves", "getMoves", "offset", "start", "end", "length", "argc", "moves", "newIndex", "move", "args", "index", "pp", "insertAtArgs", "repairRelationshipWithParent", "parentValue", "parentCache", "replacement", "results", "originalLength", "spliceArgs", "splicedOut", "require_scope", "__commonJSMin", "exports", "module", "tslib_1", "types_1", "hasOwn", "scopePlugin", "fork", "types", "Type", "namedTypes", "Node", "Expression", "isArray", "b", "Scope", "path", "parentScope", "TypeParameterScopeType", "ScopeType", "depth", "FlowOrTSTypeParameterType", "node", "Sp", "name", "prefix", "index", "identifier", "init", "bodyPath", "force", "scanScope", "bindings", "scopeTypes", "params", "childPath", "addTypeParameter", "addPattern", "recursiveScanScope", "recursiveScanChild", "paramPath", "addTypePattern", "child", "pathHasValue", "value", "catchParamName", "hadBinding", "patternPath", "pattern", "propertyPath", "property", "elementPath", "element", "parameterPath", "parameter", "scope", "require_node_path", "__commonJSMin", "exports", "module", "tslib_1", "types_1", "path_1", "scope_1", "nodePathPlugin", "fork", "types", "n", "b", "isNumber", "isArray", "Path", "Scope", "NodePath", "value", "parentPath", "name", "NPp", "remainingNodePath", "cleanUpNodesAfterPrune", "pp", "scope", "assumeExpressionContext", "node", "parent", "n_1", "po", "pp_1", "PRECEDENCE", "no", "np", "containsCallExpression", "isBinary", "isUnaryLike", "tier", "i", "op", "_name", "child", "firstInStatement", "path", "declarations", "cleanUpIfStatementAfterPrune", "ifStatement", "testExpression", "alternate", "consequent", "testExpressionStatement", "negatedTestExpression", "require_path_visitor", "__commonJSMin", "exports", "module", "tslib_1", "types_1", "node_path_1", "hasOwn", "pathVisitorPlugin", "fork", "types", "NodePath", "isArray", "isObject", "isFunction", "undefined", "PathVisitor", "computeMethodNameTable", "makeContextConstructor", "visitor", "typeNames", "methodName", "supertypeTable", "methodNameTable", "typeNameKeys", "typeNameCount", "i", "typeName", "methods", "Visitor", "Vp", "PVp", "extend", "target", "source", "property", "node", "argc", "args", "didNotThrow", "root", "request", "_path", "path", "value", "context", "visitChildren", "childNames", "childCount", "childPaths", "childName", "Context", "Cp", "sharedContextProtoMethods", "result", "newVisitor", "require_equiv", "__commonJSMin", "exports", "module", "tslib_1", "types_1", "default_1", "fork", "types", "getFieldNames", "getFieldValue", "isArray", "isObject", "isDate", "isRegExp", "hasOwn", "astNodesAreEquivalent", "a", "b", "problemPath", "areEquivalent", "subscriptForProperty", "property", "arraysAreEquivalent", "objectsAreEquivalent", "aLength", "i", "problemPathTail", "aNames", "aNameCount", "bNames", "bNameCount", "name", "aChild", "bChild", "seenNames", "require_fork", "__commonJSMin", "exports", "module", "tslib_1", "types_1", "path_visitor_1", "equiv_1", "path_1", "node_path_1", "default_1", "plugins", "fork", "createFork", "types", "PathVisitor", "used", "usedResult", "use", "plugin", "idx", "require_shared", "__commonJSMin", "exports", "module", "tslib_1", "types_1", "default_1", "fork", "types", "Type", "builtin", "isNumber", "geq", "than", "value", "defaults", "naiveIsPrimitive", "isPrimitive", "type", "require_core", "__commonJSMin", "exports", "module", "default_1", "require_es2016", "__commonJSMin", "exports", "module", "tslib_1", "core_1", "default_1", "fork", "result", "require_es2020", "__commonJSMin", "exports", "module", "tslib_1", "es2016_1", "default_1", "fork", "result", "require_es2021", "__commonJSMin", "exports", "module", "tslib_1", "es2020_1", "default_1", "fork", "result", "op", "assignOp", "require_core", "__commonJSMin", "exports", "module", "tslib_1", "core_1", "types_1", "shared_1", "default_1", "fork", "types", "Type", "def", "or", "shared", "defaults", "geq", "_a", "BinaryOperators", "AssignmentOperators", "LogicalOperators", "UnaryOperator", "BinaryOperator", "AssignmentOperator", "UpdateOperator", "LogicalOperator", "type", "require_es6", "__commonJSMin", "exports", "module", "tslib_1", "core_1", "types_1", "shared_1", "default_1", "fork", "types", "def", "or", "defaults", "ClassBodyElement", "require_es2016", "__commonJSMin", "exports", "module", "tslib_1", "es2016_1", "es6_1", "default_1", "fork", "require_es2017", "__commonJSMin", "exports", "module", "tslib_1", "es2016_1", "types_1", "shared_1", "default_1", "fork", "types", "def", "defaults", "require_es2018", "__commonJSMin", "exports", "module", "tslib_1", "es2017_1", "types_1", "shared_1", "default_1", "fork", "types", "def", "or", "defaults", "require_es2019", "__commonJSMin", "exports", "module", "tslib_1", "es2018_1", "types_1", "shared_1", "default_1", "fork", "types", "def", "or", "defaults", "require_es2020", "__commonJSMin", "exports", "module", "tslib_1", "es2020_1", "es2019_1", "types_1", "shared_1", "default_1", "fork", "types", "def", "or", "shared", "defaults", "require_es2021", "__commonJSMin", "exports", "module", "tslib_1", "es2021_1", "es2020_1", "default_1", "fork", "require_es2022", "__commonJSMin", "exports", "module", "tslib_1", "es2021_1", "types_1", "default_1", "fork", "types", "def", "require_es_proposals", "__commonJSMin", "exports", "module", "tslib_1", "types_1", "shared_1", "es2022_1", "default_1", "fork", "types", "Type", "def", "or", "shared", "defaults", "decl", "require_jsx", "__commonJSMin", "exports", "module", "tslib_1", "es_proposals_1", "types_1", "shared_1", "default_1", "fork", "types", "def", "or", "defaults", "JSXElementName", "JSXAttributes", "JSXChildren", "require_type_annotations", "__commonJSMin", "exports", "module", "tslib_1", "types_1", "shared_1", "default_1", "fork", "types", "def", "or", "defaults", "TypeAnnotation", "TypeParamDecl", "typeName", "require_flow", "__commonJSMin", "exports", "module", "tslib_1", "es_proposals_1", "type_annotations_1", "types_1", "shared_1", "default_1", "fork", "types", "def", "or", "defaults", "LegacyVariance", "require_esprima", "__commonJSMin", "exports", "module", "tslib_1", "es_proposals_1", "types_1", "shared_1", "default_1", "fork", "types", "defaults", "def", "or", "require_babel_core", "__commonJSMin", "exports", "module", "tslib_1", "es_proposals_1", "types_1", "shared_1", "default_1", "fork", "_a", "_b", "_c", "_d", "_e", "types", "defaults", "def", "or", "isUndefined", "makeLiteralExtra", "rawValueType", "toRaw", "value", "val", "exp", "ObjectExpressionProperty", "ClassBodyElement", "typeName", "ObjectPatternProperty", "require_babel", "__commonJSMin", "exports", "module", "tslib_1", "types_1", "babel_core_1", "flow_1", "default_1", "fork", "types", "def", "require_typescript", "__commonJSMin", "exports", "module", "tslib_1", "babel_core_1", "type_annotations_1", "types_1", "shared_1", "default_1", "fork", "types", "n", "def", "or", "defaults", "StringLiteral", "value", "deep", "TSEntityName", "keywordType", "typeName", "ParametersType", "TSTypeMember", "require_namedTypes", "__commonJSMin", "exports", "namedTypes", "require_main", "__commonJSMin", "exports", "tslib_1", "fork_1", "es_proposals_1", "jsx_1", "flow_1", "esprima_1", "babel_1", "typescript_1", "namedTypes_1", "_a", "astNodesAreEquivalent", "builders", "builtInTypes", "defineMethod", "eachField", "finalize", "getBuilderName", "getFieldNames", "getFieldValue", "getSupertypeNames", "n", "NodePath", "Path", "PathVisitor", "someField", "Type", "use", "visit", "require_base64", "__commonJSMin", "exports", "intToCharMap", "number", "charCode", "bigA", "bigZ", "littleA", "littleZ", "zero", "nine", "plus", "slash", "littleOffset", "numberOffset", "require_base64_vlq", "__commonJSMin", "exports", "base64", "VLQ_BASE_SHIFT", "VLQ_BASE", "VLQ_BASE_MASK", "VLQ_CONTINUATION_BIT", "toVLQSigned", "aValue", "fromVLQSigned", "isNegative", "shifted", "encoded", "digit", "vlq", "aStr", "aIndex", "aOutParam", "strLen", "result", "shift", "continuation", "require_util", "__commonJSMin", "exports", "getArg", "aArgs", "aName", "aDefaultValue", "urlRegexp", "dataUrlRegexp", "urlParse", "aUrl", "match", "urlGenerate", "aParsedUrl", "url", "normalize", "aPath", "path", "isAbsolute", "parts", "part", "up", "i", "join", "aRoot", "aPathUrl", "aRootUrl", "joined", "relative", "level", "index", "supportsNullProto", "obj", "identity", "toSetString", "aStr", "isProtoString", "fromSetString", "length", "compareByOriginalPositions", "mappingA", "mappingB", "onlyCompareOriginal", "cmp", "strcmp", "compareByGeneratedPositionsDeflated", "onlyCompareGenerated", "aStr1", "aStr2", "compareByGeneratedPositionsInflated", "parseSourceMapInput", "str", "computeSourceURL", "sourceRoot", "sourceURL", "sourceMapURL", "parsed", "require_array_set", "__commonJSMin", "exports", "util", "has", "hasNativeMap", "ArraySet", "aArray", "aAllowDuplicates", "set", "len", "aStr", "sStr", "isDuplicate", "idx", "aIdx", "require_mapping_list", "__commonJSMin", "exports", "util", "generatedPositionAfter", "mappingA", "mappingB", "lineA", "lineB", "columnA", "columnB", "MappingList", "aCallback", "aThisArg", "aMapping", "require_source_map_generator", "__commonJSMin", "exports", "base64VLQ", "util", "ArraySet", "MappingList", "SourceMapGenerator", "aArgs", "aSourceMapConsumer", "sourceRoot", "generator", "mapping", "newMapping", "sourceFile", "sourceRelative", "content", "generated", "original", "source", "name", "aSourceFile", "aSourceContent", "aSourceMapPath", "newSources", "newNames", "aGenerated", "aOriginal", "aSource", "aName", "previousGeneratedColumn", "previousGeneratedLine", "previousOriginalColumn", "previousOriginalLine", "previousName", "previousSource", "result", "next", "nameIdx", "sourceIdx", "mappings", "i", "len", "aSources", "aSourceRoot", "key", "map", "require_binary_search", "__commonJSMin", "exports", "recursiveSearch", "aLow", "aHigh", "aNeedle", "aHaystack", "aCompare", "aBias", "mid", "cmp", "index", "require_quick_sort", "__commonJSMin", "exports", "swap", "ary", "x", "y", "temp", "randomIntInRange", "low", "high", "doQuickSort", "comparator", "p", "pivotIndex", "i", "pivot", "j", "q", "require_source_map_consumer", "__commonJSMin", "exports", "util", "binarySearch", "ArraySet", "base64VLQ", "quickSort", "SourceMapConsumer", "aSourceMap", "aSourceMapURL", "sourceMap", "IndexedSourceMapConsumer", "BasicSourceMapConsumer", "aStr", "index", "c", "aSourceRoot", "aCallback", "aContext", "aOrder", "context", "order", "mappings", "sourceRoot", "mapping", "source", "aArgs", "line", "needle", "originalLine", "originalColumn", "version", "sources", "names", "sourcesContent", "file", "s", "aSource", "relativeSource", "i", "smc", "generatedMappings", "destGeneratedMappings", "destOriginalMappings", "length", "srcMapping", "destMapping", "Mapping", "generatedLine", "previousGeneratedColumn", "previousOriginalLine", "previousOriginalColumn", "previousSource", "previousName", "cachedSegments", "temp", "originalMappings", "str", "segment", "end", "value", "aNeedle", "aMappings", "aLineName", "aColumnName", "aComparator", "aBias", "nextMapping", "name", "sc", "nullOnMissing", "url", "fileUriAbsPath", "sections", "lastOffset", "offset", "offsetLine", "offsetColumn", "j", "sectionIndex", "section", "cmp", "content", "generatedPosition", "ret", "sectionMappings", "adjustedMapping", "require_source_node", "__commonJSMin", "exports", "SourceMapGenerator", "util", "REGEX_NEWLINE", "NEWLINE_CODE", "isSourceNode", "SourceNode", "aLine", "aColumn", "aSource", "aChunks", "aName", "aGeneratedCode", "aSourceMapConsumer", "aRelativePath", "node", "remainingLines", "remainingLinesIndex", "shiftNextLine", "lineContents", "getNextLine", "newLine", "lastGeneratedLine", "lastGeneratedColumn", "lastMapping", "mapping", "addMappingWithCode", "nextLine", "code", "sourceFile", "content", "source", "aChunk", "chunk", "i", "aFn", "len", "aSep", "newChildren", "aPattern", "aReplacement", "lastChild", "aSourceFile", "aSourceContent", "sources", "str", "aArgs", "generated", "map", "sourceMappingActive", "lastOriginalSource", "lastOriginalLine", "lastOriginalColumn", "lastOriginalName", "original", "idx", "length", "sourceContent", "require_source_map", "__commonJSMin", "exports", "assert", "EOL", "getLineTerminator", "isBrowser", "getOption", "options", "key", "defaultValue", "hasOwn", "getUnionOfKeys", "args", "_i", "result", "argc", "keys", "keyCount", "j", "comparePos", "pos1", "pos2", "copyPos", "pos", "composeSourceMaps", "formerMap", "latterMap", "smcFormer", "SourceMapConsumer", "smcLatter", "smg", "SourceMapGenerator", "sourcesToContents", "mapping", "origPos", "sourceName", "sourceContent", "getTrueLoc", "node", "lines", "include", "expandLoc", "isExportDeclaration", "parentLoc", "childLoc", "fixFaultyLocations", "loc", "fixForLoopHead", "fixTemplateLiteral", "decorator", "decorators", "n", "loc_1", "end", "fix", "child", "start", "afterLeftBackTickPos", "firstQuasi", "rightBackTickPos", "lastQuasi", "expr", "i", "dollarCurlyPos", "quasiBefore", "rightCurlyPos", "quasiAfter", "getParentExportDeclaration", "path", "parentNode", "isTrailingCommaEnabled", "context", "trailingComma", "types", "import_source_map", "init_util", "__esmMin", "sourceMap", "require_esprima", "__commonJSMin", "exports", "module", "root", "factory", "modules", "installedModules", "__webpack_require__", "moduleId", "comment_handler_1", "jsx_parser_1", "parser_1", "tokenizer_1", "parse", "code", "options", "delegate", "commentHandler", "proxyDelegate", "node", "metadata", "parserDelegate", "collectComment", "attachComment", "isModule", "parser", "program", "ast", "parseModule", "parsingOptions", "parseScript", "tokenize", "tokenizer", "tokens", "token", "e", "syntax_1", "CommentHandler", "innerComments", "i", "entry", "trailingComments", "entry_1", "firstComment", "leadingComments", "target", "count", "comment", "type", "__extends", "extendStatics", "d", "b", "p", "__", "character_1", "JSXNode", "jsx_syntax_1", "Node", "token_1", "xhtml_entities_1", "getQualifiedElementName", "elementName", "qualifiedName", "id", "ns", "expr", "JSXParser", "_super", "quote", "result", "valid", "terminated", "numeric", "hex", "ch", "str", "cp", "value", "start", "n1", "n2", "text", "state", "next", "namespace", "name_1", "object", "property", "attributeName", "identifier", "name_2", "raw", "expression", "name", "argument", "attributes", "attribute", "selfClosing", "name_3", "children", "child", "container", "el", "stack", "element", "opening", "open_1", "close_1", "closing", "Regex", "JSXClosingElement", "JSXElement", "openingElement", "closingElement", "JSXEmptyExpression", "JSXExpressionContainer", "JSXIdentifier", "JSXMemberExpression", "JSXAttribute", "JSXNamespacedName", "JSXOpeningElement", "JSXSpreadAttribute", "JSXText", "ArrayExpression", "elements", "ArrayPattern", "ArrowFunctionExpression", "params", "body", "AssignmentExpression", "operator", "left", "right", "AssignmentPattern", "AsyncArrowFunctionExpression", "AsyncFunctionDeclaration", "AsyncFunctionExpression", "AwaitExpression", "BinaryExpression", "logical", "BlockStatement", "BreakStatement", "label", "CallExpression", "callee", "args", "CatchClause", "param", "ClassBody", "ClassDeclaration", "superClass", "ClassExpression", "ComputedMemberExpression", "ConditionalExpression", "test", "consequent", "alternate", "ContinueStatement", "DebuggerStatement", "Directive", "directive", "DoWhileStatement", "EmptyStatement", "ExportAllDeclaration", "source", "ExportDefaultDeclaration", "declaration", "ExportNamedDeclaration", "specifiers", "ExportSpecifier", "local", "exported", "ExpressionStatement", "ForInStatement", "ForOfStatement", "ForStatement", "init", "update", "FunctionDeclaration", "generator", "FunctionExpression", "Identifier", "IfStatement", "ImportDeclaration", "ImportDefaultSpecifier", "ImportNamespaceSpecifier", "ImportSpecifier", "imported", "LabeledStatement", "Literal", "MetaProperty", "meta", "MethodDefinition", "key", "computed", "kind", "isStatic", "Module", "NewExpression", "ObjectExpression", "properties", "ObjectPattern", "Property", "method", "shorthand", "RegexLiteral", "pattern", "flags", "RestElement", "ReturnStatement", "Script", "SequenceExpression", "expressions", "SpreadElement", "StaticMemberExpression", "Super", "SwitchCase", "SwitchStatement", "discriminant", "cases", "TaggedTemplateExpression", "tag", "quasi", "TemplateElement", "tail", "TemplateLiteral", "quasis", "ThisExpression", "ThrowStatement", "TryStatement", "block", "handler", "finalizer", "UnaryExpression", "UpdateExpression", "prefix", "VariableDeclaration", "declarations", "VariableDeclarator", "WhileStatement", "WithStatement", "YieldExpression", "assert_1", "error_handler_1", "messages_1", "scanner_1", "ArrowParameterPlaceHolder", "Parser", "messageFormat", "values", "_i", "msg", "whole", "idx", "index", "line", "column", "message", "lastMarkerLineStart", "comments", "t", "lastLineStart", "marker", "keyword", "op", "parseFunction", "previousIsBindingElement", "previousIsAssignmentTarget", "previousFirstCoverInitializedNameError", "arg", "previousStrict", "previousAllowStrictDirective", "isGenerator", "previousAllowYield", "previousAwait", "hasProto", "isAsync", "lookaheadPropertyKey", "cooked", "startToken", "arrow", "parameters", "maybeAsync", "previousAllowIn", "asyncArrow", "precedence", "prec", "markers", "precedences", "lastMarker", "list", "statement", "keyToken", "opt", "previousInIteration", "forIn", "decl", "initStartToken", "initSeq", "hasArgument", "previousInSwitch", "defaultFound", "clause", "paramMap", "previousLabelSet", "previousInFunctionBody", "firstRestricted", "match", "identifierIsOptional", "previousAllowAwait", "formalParameters", "stricted", "hasConstructor", "punctuator", "elementList", "classBody", "src", "exportDeclaration", "isExportFromIdentifier", "assert", "condition", "ErrorHandler", "error", "base", "col", "description", "hexValue", "octalValue", "Scanner", "offset", "loc", "second", "first", "len", "octal", "restore", "num", "unescaped_1", "unescaped", "octToDec", "head", "rawOffset", "unescaped_2", "astralSubstitute", "tmp", "self", "$0", "$1", "$2", "codePoint", "classMarker", "char", "Reader", "previous", "regex", "check", "Tokenizer", "config", "startRegex", "esprima_exports", "__export", "parse", "source", "options", "comments", "ast", "getOption", "init_esprima", "__esmMin", "init_util", "defaultOptions", "sourceType", "sourceFilename", "undefined", "startColumn", "startLine", "allowAwaitOutsideFunction", "allowReturnOutsideFunction", "allowNewTargetOutsideFunction", "allowImportExportEverywhere", "allowSuperOutsideMethod", "allowUndeclaredExports", "plugins", "strictMode", "ranges", "tokens", "createParenthesizedExpressions", "errorRecovery", "attachComment", "annexB", "getOptions", "opts", "Error", "options", "key", "Object", "keys", "TokContext", "constructor", "token", "preserveSpace", "types", "brace", "j_oTag", "j_cTag", "j_expr", "template", "beforeExpr", "startsExpr", "isLoop", "isAssign", "prefix", "postfix", "ExportedTokenType", "label", "conf", "keyword", "rightAssociative", "binop", "updateContext", "keywords", "Map", "createKeyword", "name", "createToken", "set", "createBinop", "tokenTypeCounter", "tokenTypes", "tokenLabels", "tokenBinops", "tokenBeforeExprs", "tokenStartsExprs", "tokenPrefixes", "_options$binop", "_options$beforeExpr", "_options$startsExpr", "_options$prefix", "push", "createKeywordLike", "_options$binop2", "_options$beforeExpr2", "_options$startsExpr2", "_options$prefix2", "tt", "bracketL", "bracketHashL", "bracketBarL", "bracketR", "bracketBarR", "braceL", "braceBarL", "braceHashL", "braceR", "braceBarR", "parenL", "parenR", "comma", "semi", "colon", "doubleColon", "dot", "question", "questionDot", "arrow", "ellipsis", "backQuote", "dollarBraceL", "templateTail", "templateNonTail", "at", "hash", "interpreterDirective", "eq", "assign", "slashAssign", "xorAssign", "moduloAssign", "incDec", "bang", "tilde", "doubleCaret", "doubleAt", "pipeline", "nullishCoalescing", "logicalOR", "logicalAND", "bitwiseOR", "bitwiseXOR", "bitwiseAND", "equality", "lt", "gt", "relational", "bitShift", "bitShiftL", "bitShiftR", "plusMin", "modulo", "star", "slash", "exponent", "_in", "_instanceof", "_break", "_case", "_catch", "_continue", "_debugger", "_default", "_else", "_finally", "_function", "_if", "_return", "_switch", "_throw", "_try", "_var", "_const", "_with", "_new", "_this", "_super", "_class", "_extends", "_export", "_import", "_null", "_true", "_false", "_typeof", "_void", "_delete", "_do", "_for", "_while", "_as", "_assert", "_async", "_await", "_from", "_get", "_let", "_meta", "_of", "_sent", "_set", "_static", "_using", "_yield", "_asserts", "_checks", "_exports", "_global", "_implements", "_intrinsic", "_infer", "_is", "_mixins", "_proto", "_require", "_satisfies", "_keyof", "_readonly", "_unique", "_abstract", "_declare", "_enum", "_module", "_namespace", "_interface", "_type", "_opaque", "string", "num", "bigint", "decimal", "regexp", "privateName", "eof", "jsxName", "jsxText", "jsxTagStart", "jsxTagEnd", "placeholder", "tokenIsIdentifier", "tokenKeywordOrIdentifierIsKeyword", "tokenIsKeywordOrIdentifier", "tokenIsLiteralPropertyName", "tokenComesBeforeExpression", "tokenCanStartExpression", "tokenIsAssignment", "tokenIsFlowInterfaceOrTypeOrOpaque", "tokenIsLoop", "tokenIsKeyword", "tokenIsOperator", "tokenIsPostfix", "tokenIsPrefix", "tokenIsTSTypeOperator", "tokenIsTSDeclarationStart", "tokenLabelName", "tokenOperatorPrecedence", "tokenIsRightAssociative", "tokenIsTemplate", "getExportedToken", "context", "pop", "tc", "length", "Position", "line", "col", "index", "column", "SourceLocation", "start", "end", "filename", "identifierName", "createPositionWithColumnOffset", "position", "columnOffset", "ParseErrorCode", "SyntaxError", "SourceTypeModuleError", "reflect", "last", "get", "reduce", "object", "value", "item", "i", "instantiate", "properties", "descriptors", "map", "filter", "descriptor", "enumerable", "split", "instance", "defineProperty", "configurable", "ModuleErrors", "ImportMetaOutsideModule", "message", "code", "ImportOutsideModule", "NodeDescriptions", "ArrayPattern", "AssignmentExpression", "AssignmentPattern", "ArrowFunctionExpression", "ConditionalExpression", "CatchClause", "ForOfStatement", "ForInStatement", "ForStatement", "FormalParameters", "Identifier", "ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier", "ObjectPattern", "ParenthesizedExpression", "RestElement", "UpdateExpression", "true", "false", "VariableDeclarator", "YieldExpression", "toNodeDescription", "type", "String", "StandardErrors", "AccessorIsGenerator", "kind", "ArgumentsInClass", "AsyncFunctionInSingleStatementContext", "AwaitBindingIdentifier", "AwaitBindingIdentifierInStaticBlock", "AwaitExpressionFormalParameter", "AwaitInUsingBinding", "AwaitNotInAsyncContext", "AwaitNotInAsyncFunction", "BadGetterArity", "BadSetterArity", "BadSetterRestParameter", "ConstructorClassField", "ConstructorClassPrivateField", "ConstructorIsAccessor", "ConstructorIsAsync", "ConstructorIsGenerator", "DeclarationMissingInitializer", "DecoratorArgumentsOutsideParentheses", "DecoratorBeforeExport", "DecoratorsBeforeAfterExport", "DecoratorConstructor", "DecoratorExportClass", "DecoratorSemicolon", "DecoratorStaticBlock", "DeletePrivateField", "DestructureNamedImport", "DuplicateConstructor", "DuplicateDefaultExport", "DuplicateExport", "exportName", "DuplicateProto", "DuplicateRegExpFlags", "ElementAfterRest", "EscapedCharNotAnIdentifier", "ExportBindingIsString", "localName", "ExportDefaultFromAsIdentifier", "ForInOfLoopInitializer", "ForInUsing", "ForOfAsync", "ForOfLet", "GeneratorInSingleStatementContext", "IllegalBreakContinue", "IllegalLanguageModeDirective", "IllegalReturn", "ImportBindingIsString", "importName", "ImportCallArgumentTrailingComma", "ImportCallArity", "maxArgumentCount", "ImportCallNotNewExpression", "ImportCallSpreadArgument", "ImportJSONBindingNotDefault", "ImportReflectionHasAssertion", "ImportReflectionNotBinding", "IncompatibleRegExpUVFlags", "InvalidBigIntLiteral", "InvalidCodePoint", "InvalidCoverInitializedName", "InvalidDecimal", "InvalidDigit", "radix", "InvalidEscapeSequence", "InvalidEscapeSequenceTemplate", "InvalidEscapedReservedWord", "reservedWord", "InvalidIdentifier", "InvalidLhs", "ancestor", "InvalidLhsBinding", "InvalidNumber", "InvalidOrMissingExponent", "InvalidOrUnexpectedToken", "unexpected", "InvalidParenthesizedAssignment", "InvalidPrivateFieldResolution", "InvalidPropertyBindingPattern", "InvalidRecordProperty", "InvalidRestAssignmentPattern", "LabelRedeclaration", "labelName", "LetInLexicalBinding", "LineTerminatorBeforeArrow", "MalformedRegExpFlags", "MissingClassName", "MissingEqInAssignment", "MissingSemicolon", "MissingPlugin", "missingPlugin", "JSON", "stringify", "join", "MissingOneOfPlugins", "MissingUnicodeEscape", "MixingCoalesceWithLogical", "ModuleAttributeDifferentFromType", "ModuleAttributeInvalidValue", "ModuleAttributesWithDuplicateKeys", "ModuleExportNameHasLoneSurrogate", "surrogateCharCode", "toString", "ModuleExportUndefined", "MultipleDefaultsInSwitch", "NewlineAfterThrow", "NoCatchOrFinally", "NumberIdentifier", "NumericSeparatorInEscapeSequence", "ObsoleteAwaitStar", "OptionalChainingNoNew", "OptionalChainingNoTemplate", "OverrideOnConstructor", "ParamDupe", "PatternHasAccessor", "PatternHasMethod", "PrivateInExpectedIn", "PrivateNameRedeclaration", "RecordExpressionBarIncorrectEndSyntaxType", "RecordExpressionBarIncorrectStartSyntaxType", "RecordExpressionHashIncorrectStartSyntaxType", "RecordNoProto", "RestTrailingComma", "SloppyFunction", "SloppyFunctionAnnexB", "StaticPrototype", "SuperNotAllowed", "SuperPrivateField", "TrailingDecorator", "TupleExpressionBarIncorrectEndSyntaxType", "TupleExpressionBarIncorrectStartSyntaxType", "TupleExpressionHashIncorrectStartSyntaxType", "UnexpectedArgumentPlaceholder", "UnexpectedAwaitAfterPipelineBody", "UnexpectedDigitAfterHash", "UnexpectedImportExport", "UnexpectedKeyword", "UnexpectedLeadingDecorator", "UnexpectedLexicalDeclaration", "UnexpectedNewTarget", "UnexpectedNumericSeparator", "UnexpectedPrivateField", "UnexpectedReservedWord", "UnexpectedSuper", "UnexpectedToken", "expected", "UnexpectedTokenUnaryExponentiation", "UnexpectedUsingDeclaration", "UnsupportedBind", "UnsupportedDecoratorExport", "UnsupportedDefaultExport", "UnsupportedImport", "UnsupportedMetaProperty", "target", "onlyValidPropertyName", "UnsupportedParameterDecorator", "UnsupportedPropertyDecorator", "UnsupportedSuper", "UnterminatedComment", "UnterminatedRegExp", "UnterminatedString", "UnterminatedTemplate", "UsingDeclarationHasBindingPattern", "VarRedeclaration", "YieldBindingIdentifier", "YieldInParameter", "ZeroDigitNumericSeparator", "StrictModeErrors", "StrictDelete", "StrictEvalArguments", "referenceName", "StrictEvalArgumentsBinding", "bindingName", "StrictFunction", "StrictNumericEscape", "StrictOctalLiteral", "StrictWith", "UnparenthesizedPipeBodyDescriptions", "Set", "PipelineOperatorErrors", "PipeBodyIsTighter", "PipeTopicRequiresHackPipes", "PipeTopicUnbound", "PipeTopicUnconfiguredToken", "PipeTopicUnused", "PipeUnparenthesizedBody", "PipelineBodyNoArrow", "PipelineBodySequenceExpression", "PipelineHeadSequenceExpression", "PipelineTopicUnused", "PrimaryTopicNotAllowed", "PrimaryTopicRequiresSmartPipeline", "toParseErrorConstructor", "_ref", "toMessage", "_objectWithoutPropertiesLoose", "_excluded", "loc", "details", "clone", "overrides", "pos", "ParseErrorEnum", "argument", "syntaxPlugin", "Array", "isArray", "parseErrorTemplates", "ParseErrorConstructors", "reasonCode", "_ref2", "rest", "_excluded2", "Errors", "toUnenumerable", "toESTreeLocation", "node", "estree", "superClass", "parse", "file", "parseRegExpLiteral", "pattern", "flags", "regex", "RegExp", "estreeParseLiteral", "parseBigIntLiteral", "bigInt", "BigInt", "parseDecimalLiteral", "parseLiteral", "parseStringLiteral", "parseNumericLiteral", "parseNullLiteral", "parseBooleanLiteral", "directiveToStmt", "directive", "expression", "raw", "extra", "expressionValue", "stmt", "rawValue", "initFunction", "isAsync", "checkDeclaration", "isObjectProperty", "getObjectOrClassMethodParams", "method", "params", "isValidDirective", "_stmt$expression$extr", "parenthesized", "parseBlockBody", "allowDirectives", "topLevel", "afterBlockParse", "directiveStatements", "directives", "d", "body", "concat", "pushClassMethod", "classBody", "isGenerator", "isConstructor", "allowsDirectSuper", "parseMethod", "typeParameters", "parsePrivateName", "getPluginOption", "convertPrivateNameToPrivateIdentifier", "getPrivateNameSV", "id", "isPrivateName", "parseFunctionBody", "allowExpression", "isMethod", "allowDirectSuper", "inClassScope", "funcNode", "startNode", "computed", "finishNode", "parseClassProperty", "args", "propertyNode", "parseClassPrivateProperty", "parseObjectMethod", "prop", "isPattern", "isAccessor", "shorthand", "parseObjectProperty", "startLoc", "refExpressionErrors", "isValidLVal", "isUnparenthesizedInAssign", "binding", "isAssignable", "isBinding", "toAssignable", "isLHS", "classScope", "usePrivateName", "toAssignableObjectExpressionProp", "isLast", "raise", "finishCallExpression", "unfinished", "optional", "callee", "source", "arguments", "hasPlugin", "_node$arguments$", "attributes", "toReferencedArguments", "parseExport", "decorators", "exportStartLoc", "state", "lastTokStartLoc", "exported", "specifiers", "_declaration$decorato", "declaration", "resetStartLocation", "parseSubscript", "base", "noCalls", "optionalChainMember", "substring", "stop", "chain", "startNodeAtNode", "hasPropertyAsPrivateName", "isObjectMethod", "finishNodeAt", "endLoc", "resetEndLocation", "lastTokEndLoc", "nonASCIIidentifierStartChars", "nonASCIIidentifierChars", "nonASCIIidentifierStart", "nonASCIIidentifier", "astralIdentifierStartCodes", "astralIdentifierCodes", "isInAstralSet", "isIdentifierStart", "test", "fromCharCode", "isIdentifierChar", "reservedWords", "strict", "strictBind", "reservedWordsStrictSet", "reservedWordsStrictBindSet", "isReservedWord", "word", "inModule", "isStrictReservedWord", "has", "isStrictBindOnlyReservedWord", "isStrictBindReservedWord", "isKeyword", "isIteratorStart", "current", "next", "next2", "reservedWordLikeSet", "canBeReservedWord", "SCOPE_OTHER", "SCOPE_PROGRAM", "SCOPE_FUNCTION", "SCOPE_ARROW", "SCOPE_SIMPLE_CATCH", "SCOPE_SUPER", "SCOPE_DIRECT_SUPER", "SCOPE_CLASS", "SCOPE_STATIC_BLOCK", "SCOPE_TS_MODULE", "SCOPE_VAR", "BIND_KIND_VALUE", "BIND_KIND_TYPE", "BIND_SCOPE_VAR", "BIND_SCOPE_LEXICAL", "BIND_SCOPE_FUNCTION", "BIND_FLAGS_NONE", "BIND_FLAGS_CLASS", "BIND_FLAGS_TS_ENUM", "BIND_FLAGS_TS_CONST_ENUM", "BIND_FLAGS_TS_EXPORT_ONLY", "BIND_FLAGS_FLOW_DECLARE_FN", "BIND_FLAGS_TS_IMPORT", "BIND_FLAGS_NO_LET_IN_LEXICAL", "BIND_CLASS", "BIND_LEXICAL", "BIND_CATCH_PARAM", "BIND_VAR", "BIND_FUNCTION", "BIND_TS_INTERFACE", "BIND_TS_TYPE", "BIND_TS_ENUM", "BIND_TS_AMBIENT", "BIND_NONE", "BIND_OUTSIDE", "BIND_TS_CONST_ENUM", "BIND_TS_NAMESPACE", "BIND_TS_TYPE_IMPORT", "BIND_FLOW_DECLARE_FN", "CLASS_ELEMENT_FLAG_STATIC", "CLASS_ELEMENT_KIND_GETTER", "CLASS_ELEMENT_KIND_SETTER", "CLASS_ELEMENT_KIND_ACCESSOR", "CLASS_ELEMENT_STATIC_GETTER", "CLASS_ELEMENT_STATIC_SETTER", "CLASS_ELEMENT_INSTANCE_GETTER", "CLASS_ELEMENT_INSTANCE_SETTER", "CLASS_ELEMENT_OTHER", "Scope", "var", "lexical", "functions", "ScopeHandler", "parser", "scopeStack", "undefinedExports", "inTopLevel", "currentScope", "inFunction", "currentVarScopeFlags", "allowSuper", "currentThisScopeFlags", "inClass", "inClassAndNotInNonArrowFunction", "inStaticBlock", "inNonArrowFunction", "treatFunctionsAsVar", "treatFunctionsAsVarInScope", "createScope", "enter", "exit", "scope", "declareName", "bindingType", "checkRedeclarationInScope", "add", "maybeExportDefined", "delete", "isRedeclaredInScope", "values", "checkLocalExport", "topLevelScope", "FlowScope", "declareFunctions", "FlowScopeHandler", "BaseParser", "sawUnambiguousESM", "ambiguousScriptDifferentAst", "pluginConfig", "pluginName", "pluginOptions", "actualOptions", "plugin", "_this$plugins$get", "setTrailingComments", "comments", "trailingComments", "unshift", "setLeadingComments", "leadingComments", "setInnerComments", "innerComments", "adjustInnerComments", "elements", "commentWS", "lastElement", "CommentsParser", "addComment", "comment", "processComment", "commentStack", "commentStackLength", "lastCommentWS", "leadingNode", "nodeStart", "commentEnd", "containingNode", "finalizeComment", "splice", "trailingNode", "commentStart", "input", "charCodeAt", "finalizeRemainingComments", "resetPreviousNodeTrailingComments", "takeSurroundingComments", "lineBreak", "lineBreakG", "isNewLine", "skipWhiteSpace", "skipWhiteSpaceInLine", "skipWhiteSpaceToLineBreak", "isWhitespace", "State", "curLine", "lineStart", "errors", "potentialArrowAt", "noArrowAt", "noArrowParamsConversionAt", "maybeInArrowParameters", "inType", "noAnonFunctionType", "hasFlowComment", "isAmbientContext", "inAbstractClass", "inDisallowConditionalTypesContext", "topicContext", "maxNumOfResolvableTopics", "maxTopicIndex", "soloAwait", "inFSharpPipelineDirectBody", "labels", "lastTokStart", "ct", "canStartJSXElement", "containsEsc", "firstInvalidTemplateEscapePos", "strictErrors", "tokensLength", "init", "curPosition", "skipArrays", "val", "slice", "forbiddenNumericSeparatorSiblings", "decBinOct", "hex", "isAllowedNumericSeparatorSibling", "bin", "ch", "oct", "dec", "readStringContents", "initialPos", "initialLineStart", "initialCurLine", "out", "firstInvalidLoc", "chunkStart", "unterminated", "isStringEnd", "res", "readEscapedChar", "str", "containsInvalid", "inTemplate", "throwOnInvalid", "readHexChar", "readCodePoint", "fromCodePoint", "strictNumericEscape", "startPos", "octalStr", "match", "octal", "parseInt", "len", "forceLen", "n", "readInt", "invalidEscapeSequence", "allowNumSeparator", "bailOnError", "forbiddenSiblings", "isAllowedSibling", "invalid", "total", "e", "Infinity", "prev", "Number", "isNaN", "unexpectedNumericSeparator", "numericSeparatorInEscapeSequence", "_isDigit", "invalidDigit", "indexOf", "invalidCodePoint", "buildPosition", "VALID_REGEX_FLAGS", "Token", "Tokenizer", "isLookahead", "errorHandlers_readInt", "errorBuilder", "errorHandlers_readCodePoint", "errorHandlers_readStringContents_string", "recordStrictModeErrors", "errorHandlers_readStringContents_template", "pushToken", "checkKeywordEscapes", "nextToken", "eat", "createLookaheadState", "curContext", "lookahead", "old", "curr", "nextTokenStart", "nextTokenStartSince", "lastIndex", "lookaheadCharCode", "nextTokenInLineStart", "nextTokenInLineStartSince", "lookaheadInLineCharCode", "codePointAtPos", "cp", "trail", "setStrict", "forEach", "toParseError", "clear", "skipSpace", "finishToken", "getTokenFromCode", "skipBlockComment", "skipLineComment", "startSkip", "spaceStart", "loop", "commentWhitespace", "prevType", "replaceToken", "readToken_numberSign", "readToken_interpreter", "nextPos", "expectPlugin", "readWord1", "finishOp", "readToken_dot", "readNumber", "readToken_slash", "readToken_mult_modulo", "width", "readToken_pipe_amp", "readToken_caret", "proposal", "topicToken", "codePointAt", "readToken_atSign", "readToken_plus_min", "readToken_lt", "readToken_gt", "size", "readToken_eq_excl", "readToken_question", "readTemplateToken", "readRadixNumber", "readString", "readWord", "readRegexp", "escaped", "content", "mods", "char", "includes", "isBigInt", "replace", "startsWithDot", "isFloat", "isDecimal", "hasExponent", "isOctal", "hasLeadingZero", "integer", "underscorePos", "parseFloat", "quote", "readTemplateContinuation", "opening", "firstCode", "escStart", "identifierCheck", "esc", "keywordTypes", "raiseProperties", "error", "raiseOverwrite", "expectOnePlugin", "pluginNames", "some", "ClassScope", "privateNames", "loneAccessors", "undefinedPrivateNames", "ClassScopeHandler", "stack", "oldClassScope", "from", "declarePrivateName", "elementType", "redefined", "accessor", "oldStatic", "newStatic", "oldKind", "newKind", "kExpression", "kMaybeArrowParameterDeclaration", "kMaybeAsyncArrowParameterDeclaration", "kParameterDeclaration", "ExpressionScope", "canBeArrowParameterDeclaration", "isCertainlyParameterDeclaration", "ArrowHeadParsingScope", "declarationErrors", "recordDeclarationError", "ParsingErrorClass", "clearDeclarationError", "iterateErrors", "iterator", "ExpressionScopeHandler", "recordParameterInitializerError", "origin", "recordArrowParameterBindingError", "recordAsyncArrowParametersError", "validateAsPattern", "newParameterDeclarationScope", "newArrowHeadScope", "newAsyncArrowScope", "newExpressionScope", "PARAM", "PARAM_YIELD", "PARAM_AWAIT", "PARAM_RETURN", "PARAM_IN", "ProductionParameterHandler", "stacks", "currentFlags", "hasAwait", "hasYield", "hasReturn", "hasIn", "functionFlags", "UtilParser", "addExtra", "isContextual", "isUnparsedContextual", "nameStart", "nameEnd", "nextCh", "isLookaheadContextual", "eatContextual", "expectContextual", "canInsertSemicolon", "hasPrecedingLineBreak", "hasFollowingLineBreak", "isLineTerminator", "semicolon", "allowAsi", "expect", "tryParse", "fn", "oldState", "abortSignal", "failState", "thrown", "aborted", "checkExpressionErrors", "andThrow", "shorthandAssignLoc", "doubleProtoLoc", "privateKeyLoc", "optionalParametersLoc", "hasErrors", "isLiteralPropertyName", "property", "initializeScopes", "oldLabels", "oldExportedIdentifiers", "exportedIdentifiers", "oldInModule", "oldScope", "getScopeHandler", "oldProdParam", "prodParam", "oldExpressionScope", "expressionScope", "enterInitialScopes", "paramFlags", "checkDestructuringPrivate", "ExpressionErrors", "Node", "range", "NodePrototype", "prototype", "__clone", "newNode", "clonePlaceholder", "cloneIdentifier", "cloned", "create", "expectedNode", "cloneStringLiteral", "NodeUtils", "startNodeAt", "resetStartLocationFromNode", "locationNode", "reservedTypes", "FlowErrors", "AmbiguousConditionalArrow", "AmbiguousDeclareModuleKind", "AssignReservedType", "reservedType", "DeclareClassElement", "DeclareClassFieldInitializer", "DuplicateDeclareModuleExports", "EnumBooleanMemberNotInitialized", "memberName", "enumName", "EnumDuplicateMemberName", "EnumInconsistentMemberValues", "EnumInvalidExplicitType", "invalidEnumType", "EnumInvalidExplicitTypeUnknownSupplied", "EnumInvalidMemberInitializerPrimaryType", "explicitType", "EnumInvalidMemberInitializerSymbolType", "EnumInvalidMemberInitializerUnknownType", "EnumInvalidMemberName", "suggestion", "EnumNumberMemberNotInitialized", "EnumStringMemberInconsistentlyInitailized", "GetterMayNotHaveThisParam", "ImportReflectionHasImportType", "ImportTypeShorthandOnlyInPureImport", "InexactInsideExact", "InexactInsideNonObject", "InexactVariance", "InvalidNonTypeImportInDeclareModule", "MissingTypeParamDefault", "NestedDeclareModule", "NestedFlowComment", "PatternIsOptional", "SetterMayNotHaveThisParam", "SpreadVariance", "ThisParamAnnotationRequired", "ThisParamBannedInConstructor", "ThisParamMayNotBeOptional", "ThisParamMustBeFirst", "ThisParamNoDefault", "TypeBeforeInitializer", "TypeCastInPattern", "UnexpectedExplicitInexactInObject", "UnexpectedReservedType", "UnexpectedReservedUnderscore", "UnexpectedSpaceBetweenModuloChecks", "UnexpectedSpreadType", "UnexpectedSubtractionOperand", "UnexpectedTokenAfterTypeParameter", "UnexpectedTypeParameterBeforeAsyncArrowFunction", "UnsupportedDeclareExportKind", "unsupportedExportKind", "UnsupportedStatementInDeclareModule", "UnterminatedFlowComment", "isEsModuleType", "bodyElement", "hasTypeImportKind", "importKind", "isMaybeDefaultImport", "exportSuggestions", "const", "let", "interface", "partition", "list", "list1", "list2", "FLOW_PRAGMA_REGEX", "flow", "flowPragma", "shouldParseTypes", "shouldParseEnums", "matches", "exec", "flowParseTypeInitialiser", "tok", "oldInType", "flowParseType", "flowParsePredicate", "moduloLoc", "parseExpression", "flowParseTypeAndPredicateInitialiser", "predicate", "flowParseDeclareClass", "flowParseInterfaceish", "flowParseDeclareFunction", "parseIdentifier", "typeNode", "typeContainer", "flowParseTypeParameterDeclaration", "tmp", "flowParseFunctionTypeParams", "this", "returnType", "typeAnnotation", "flowParseDeclare", "insideModule", "flowParseDeclareVariable", "flowParseDeclareModuleExports", "flowParseDeclareModule", "flowParseDeclareTypeAlias", "flowParseDeclareOpaqueType", "flowParseDeclareInterface", "flowParseDeclareExportDeclaration", "flowParseTypeAnnotatableIdentifier", "parseExprAtom", "bodyNode", "parseImport", "hasModuleExport", "default", "isLet", "exportKind", "flowParseTypeAnnotation", "finished", "flowParseTypeAlias", "flowParseOpaqueType", "isClass", "flowParseRestrictedIdentifier", "extends", "flowParseInterfaceExtends", "implements", "mixins", "flowParseObjectType", "allowStatic", "allowExact", "allowSpread", "allowProto", "allowInexact", "flowParseQualifiedTypeIdentifier", "flowParseTypeParameterInstantiation", "flowParseInterface", "checkNotUnderscore", "checkReservedType", "liberal", "right", "declare", "supertype", "impltype", "flowParseTypeParameter", "requireDefault", "nodeStartLoc", "variance", "flowParseVariance", "ident", "bound", "defaultRequired", "typeParameter", "oldNoAnonFunctionType", "flowParseTypeParameterInstantiationCallOrNew", "flowParseTypeOrImplicitInstantiation", "flowParseInterfaceType", "flowParseObjectPropertyKey", "flowParseObjectTypeIndexer", "isStatic", "static", "flowParseObjectTypeInternalSlot", "flowParseObjectTypeMethodish", "flowParseFunctionTypeParam", "flowParseObjectTypeCallProperty", "valueNode", "callProperties", "indexers", "internalSlots", "endDelim", "exact", "inexact", "protoStartLoc", "inexactStartLoc", "propOrInexact", "flowParseObjectTypeProperty", "flowObjectTypeSemicolon", "proto", "flowCheckGetterSetterParams", "paramCount", "_startLoc", "node2", "qualification", "flowParseGenericType", "flowParseTypeofType", "flowParsePrimaryType", "flowParseTupleType", "first", "lh", "isThis", "reinterpretTypeAsFunctionTypeParam", "flowIdentToTypeAnnotation", "isGroupedType", "parseLiteralAtNode", "createIdentifier", "flowParsePostfixType", "seenOptionalIndexedAccess", "objectType", "indexType", "flowParsePrefixType", "flowParseAnonFunctionWithoutParens", "param", "flowParseIntersectionType", "flowParseUnionType", "allowPrimitiveOverride", "typeCastToParameter", "allowExpressionBody", "forwardNoArrowParamsConversionAt", "parseFunctionBodyAndFinish", "parseStatementLike", "flowParseEnumDeclaration", "parseExpressionStatement", "expr", "shouldParseExportDeclaration", "isExportDefaultSpecifier", "parseExportDefaultExpression", "parseConditional", "setOptionalParametersError", "originalNoArrowAt", "consequent", "failed", "tryParseConditionalConsequent", "valid", "getArrowLikeExpressions", "alternate", "parseMaybeAssign", "parseMaybeAssignAllowIn", "disallowInvalid", "arrows", "finishArrowValidation", "every", "_node$extra", "toAssignableList", "trailingCommaLoc", "checkParams", "result", "parseParenItem", "typeCastNode", "assertModuleNodeAllowed", "decl", "parseExportDeclaration", "declarationNode", "parseExportSpecifiers", "parseExportFrom", "eatExportStar", "maybeParseExportNamespaceSpecifier", "hasNamespace", "parseClassId", "isStatement", "optionalId", "parseClassMember", "member", "parseClassMemberFromModifier", "isIterator", "readIterator", "fullWord", "left", "exprList", "toReferencedList", "isParenthesizedExpr", "_expr$extra", "parseArrayLike", "close", "canBePattern", "isTuple", "isParenthesized", "isClassMethod", "isClassProperty", "isNonstaticConstructor", "isThisParam", "pushClassPrivateMethod", "parseClassSuper", "superTypeParameters", "implemented", "checkGetterSetterParams", "parsePropertyNamePrefixOperator", "parseObjPropValue", "parseAssignableListItemTypes", "parseMaybeDefault", "shouldParseDefaultImport", "checkImportReflection", "module", "parseImportSpecifierLocal", "specifier", "local", "finishImportSpecifier", "maybeParseDefaultImportSpecifier", "parseImportSpecifier", "importedIsString", "isInTypeOnlyImport", "isMaybeTypeOnly", "firstIdent", "imported", "specifierTypeKind", "as_ident", "specifierIsTypeImport", "checkReservedWord", "parseBindingAtom", "parseFunctionParams", "parseVarId", "parseAsyncArrowFromCallExpression", "call", "shouldParseAsyncArrow", "afterLeftParse", "_jsx", "jsx", "currentContext", "_jsx2", "_jsx3", "abort", "_arrowExpression$extr", "arrowExpression", "maybeUnwrapTypeCastExpression", "async", "parseArrow", "shouldParseArrow", "setArrowFunctionParameters", "allowDuplicates", "isArrowFunction", "strictModeChanged", "parseParenAndDistinguishExpression", "canBeArrow", "parseSubscripts", "parseCallExpressionArguments", "parseAsyncArrowWithTypeParameters", "subscriptState", "isLookaheadToken_lt", "typeArguments", "parseNewCallee", "targs", "parseArrowExpression", "parseTopLevel", "program", "fileNode", "skipFlowComment", "hasFlowCommentCompletion", "commentSkip", "shiftToFirstNonWhiteSpace", "ch2", "ch3", "flowEnumErrorBooleanMemberNotInitialized", "flowEnumErrorInvalidMemberInitializer", "enumContext", "flowEnumErrorNumberMemberNotInitialized", "flowEnumErrorStringMemberInconsistentlyInitailized", "flowEnumMemberInit", "endOfInit", "literal", "flowEnumMemberRaw", "flowEnumCheckExplicitTypeMismatch", "expectedType", "flowEnumMembers", "seenNames", "members", "booleanMembers", "numberMembers", "stringMembers", "defaultedMembers", "hasUnknownMembers", "memberNode", "toUpperCase", "flowEnumStringMembers", "initializedMembers", "flowEnumParseExplicitType", "flowEnumBody", "nameLoc", "empty", "boolsLen", "numsLen", "strsLen", "defaultedLen", "afterNext", "entities", "__proto__", "quot", "amp", "apos", "nbsp", "iexcl", "cent", "pound", "curren", "yen", "brvbar", "sect", "uml", "copy", "ordf", "laquo", "not", "shy", "reg", "macr", "deg", "plusmn", "sup2", "sup3", "acute", "micro", "para", "middot", "cedil", "sup1", "ordm", "raquo", "frac14", "frac12", "frac34", "iquest", "Agrave", "Aacute", "Acirc", "Atilde", "Auml", "Aring", "AElig", "Ccedil", "Egrave", "Eacute", "Ecirc", "Euml", "Igrave", "Iacute", "Icirc", "Iuml", "ETH", "Ntilde", "Ograve", "Oacute", "Ocirc", "Otilde", "Ouml", "times", "Oslash", "Ugrave", "Uacute", "Ucirc", "Uuml", "Yacute", "THORN", "szlig", "agrave", "aacute", "acirc", "atilde", "auml", "aring", "aelig", "ccedil", "egrave", "eacute", "ecirc", "euml", "igrave", "iacute", "icirc", "iuml", "eth", "ntilde", "ograve", "oacute", "ocirc", "otilde", "ouml", "divide", "oslash", "ugrave", "uacute", "ucirc", "uuml", "yacute", "thorn", "yuml", "OElig", "oelig", "Scaron", "scaron", "Yuml", "fnof", "circ", "Alpha", "Beta", "Gamma", "Delta", "Epsilon", "Zeta", "Eta", "Theta", "Iota", "Kappa", "Lambda", "Mu", "Nu", "Xi", "Omicron", "Pi", "Rho", "Sigma", "Tau", "Upsilon", "Phi", "Chi", "Psi", "Omega", "alpha", "beta", "gamma", "delta", "epsilon", "zeta", "eta", "theta", "iota", "kappa", "lambda", "mu", "nu", "xi", "omicron", "pi", "rho", "sigmaf", "sigma", "tau", "upsilon", "phi", "chi", "psi", "omega", "thetasym", "upsih", "piv", "ensp", "emsp", "thinsp", "zwnj", "zwj", "lrm", "rlm", "ndash", "mdash", "lsquo", "rsquo", "sbquo", "ldquo", "rdquo", "bdquo", "dagger", "Dagger", "bull", "hellip", "permil", "prime", "Prime", "lsaquo", "rsaquo", "oline", "frasl", "euro", "image", "weierp", "real", "trade", "alefsym", "larr", "uarr", "rarr", "darr", "harr", "crarr", "lArr", "uArr", "rArr", "dArr", "hArr", "forall", "part", "exist", "nabla", "isin", "notin", "ni", "prod", "sum", "minus", "lowast", "radic", "infin", "ang", "and", "or", "cap", "cup", "int", "there4", "sim", "cong", "asymp", "ne", "equiv", "le", "ge", "sub", "sup", "nsub", "sube", "supe", "oplus", "otimes", "perp", "sdot", "lceil", "rceil", "lfloor", "rfloor", "lang", "rang", "loz", "spades", "clubs", "hearts", "diams", "JsxErrors", "AttributeIsEmpty", "MissingClosingTagElement", "openingTagName", "MissingClosingTagFragment", "UnexpectedSequenceExpression", "HTMLEntity", "UnsupportedJsxValue", "UnterminatedJsxContent", "UnwrappedAdjacentJSXElements", "isFragment", "getQualifiedJSXName", "namespace", "jsxReadToken", "jsxReadEntity", "jsxReadNewLine", "normalizeCRLF", "jsxReadString", "codePoint", "count", "desc", "entity", "XHTMLEntities", "jsxReadWord", "jsxParseIdentifier", "jsxParseNamespacedName", "jsxParseElementName", "jsxParseAttributeValue", "setContext", "jsxParseExpressionContainer", "jsxParseEmptyExpression", "jsxParseSpreadChild", "previousContext", "jsxParseAttribute", "jsxParseOpeningElementAt", "jsxParseOpeningElementAfterName", "selfClosing", "jsxParseClosingElementAt", "jsxParseElementAt", "children", "openingElement", "closingElement", "contents", "openingFragment", "closingFragment", "jsxParseElement", "newContext", "TypeScriptScope", "enums", "constEnums", "classes", "exportOnlyBindings", "TypeScriptScopeHandler", "importsStack", "hasImport", "allowShadow", "isConst", "wasConst", "getOwn", "hasOwnProperty", "unwrapParenthesizedExpression", "LValParser", "_node$extra3", "_node$extra2", "operator", "arg", "checkToRestConversion", "elt", "element", "toReferencedListDeep", "parseSpread", "parseRestBinding", "parseBindingList", "ParseBindingListFlags", "parseObjectLike", "closeCharCode", "allowEmpty", "elts", "checkCommaAfterRest", "parseDecorator", "parseAssignableListItem", "parseBindingRestProperty", "parseBindingProperty", "parsePropertyName", "_left", "ObjectProperty", "checkLVal", "in", "checkClashes", "hasParenthesizedAncestor", "_expression$extra", "checkIdentifier", "validity", "ParseErrorClass", "isParenthesizedExpression", "nextAncestor", "child", "declareNameFromIdentifier", "identifier", "allowPattern", "nonNull", "x", "assert", "TSErrors", "AbstractMethodHasImplementation", "methodName", "AbstractPropertyHasInitializer", "propertyName", "AccesorCannotDeclareThisParameter", "AccesorCannotHaveTypeParameters", "AccessorCannotBeOptional", "ClassMethodHasDeclare", "ClassMethodHasReadonly", "ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference", "ConstructorHasTypeParameters", "DeclareAccessor", "DeclareClassFieldHasInitializer", "DeclareFunctionHasImplementation", "DuplicateAccessibilityModifier", "modifier", "DuplicateModifier", "EmptyHeritageClauseType", "EmptyTypeArguments", "EmptyTypeParameters", "ExpectedAmbientAfterExportDeclare", "ImportAliasHasImportType", "IncompatibleModifiers", "modifiers", "IndexSignatureHasAbstract", "IndexSignatureHasAccessibility", "IndexSignatureHasDeclare", "IndexSignatureHasOverride", "IndexSignatureHasStatic", "InitializerNotAllowedInAmbientContext", "InvalidModifierOnTypeMember", "InvalidModifierOnTypeParameter", "InvalidModifierOnTypeParameterPositions", "InvalidModifiersOrder", "orderedModifiers", "InvalidPropertyAccessAfterInstantiationExpression", "InvalidTupleMemberLabel", "MissingInterfaceName", "MixedLabeledAndUnlabeledElements", "NonAbstractClassHasAbstractMethod", "NonClassMethodPropertyHasAbstractModifer", "OptionalTypeBeforeRequired", "OverrideNotInSubClass", "PrivateElementHasAbstract", "PrivateElementHasAccessibility", "ReadonlyForMethodSignature", "ReservedArrowTypeParam", "ReservedTypeAssertion", "SetAccesorCannotHaveOptionalParameter", "SetAccesorCannotHaveRestParameter", "SetAccesorCannotHaveReturnType", "SingleTypeParameterWithoutTrailingComma", "typeParameterName", "StaticBlockCannotHaveModifier", "TupleOptionalAfterType", "TypeAnnotationAfterAssign", "TypeImportCannotSpecifyDefaultAndNamed", "TypeModifierIsUsedInTypeExports", "TypeModifierIsUsedInTypeImports", "UnexpectedParameterModifier", "UnexpectedReadonly", "UnexpectedTypeAnnotation", "UnexpectedTypeCastInParameter", "UnsupportedImportTypeArgument", "UnsupportedParameterPropertyKind", "UnsupportedSignatureParameterKind", "keywordTypeFromName", "tsIsAccessModifier", "tsIsVarianceAnnotations", "typescript", "tsParseInOutModifiers", "tsParseModifiers", "bind", "allowedModifiers", "disallowedModifiers", "errorTemplate", "tsParseConstModifier", "tsParseInOutConstModifiers", "tsIsIdentifier", "tsTokenCanFollowModifier", "tsNextTokenCanFollowModifier", "tsParseModifier", "stopOnStartOfClassStaticBlock", "tsIsStartOfStaticBlocks", "tsTryParse", "modified", "enforceOrder", "before", "after", "incompatible", "mod1", "mod2", "accessibility", "tsIsListTerminator", "tsParseList", "parseElement", "tsParseDelimitedList", "refTrailingCommaPos", "tsParseDelimitedListWorker", "expectSuccess", "trailingCommaPos", "tsParseBracketedList", "bracket", "skipFirstToken", "tsParseImportType", "qualifier", "tsParseEntityName", "tsParseTypeArguments", "allowReservedWords", "tsParseTypeReference", "typeName", "tsParseThisTypePredicate", "lhs", "parameterName", "tsParseTypeAnnotation", "asserts", "tsParseThisTypeNode", "tsParseTypeQuery", "exprName", "tsParseTypeParameter", "parseModifiers", "tsParseTypeParameterName", "constraint", "tsEatThenParseType", "tsTryParseTypeParameters", "tsParseTypeParameters", "tsFillSignature", "returnToken", "signature", "returnTokenRequired", "paramsKey", "returnTypeKey", "tsParseBindingListForSignature", "tsParseTypeOrTypePredicateAnnotation", "tsParseTypeMemberSemicolon", "tsParseSignatureMember", "tsIsUnambiguouslyIndexSignature", "tsTryParseIndexSignature", "tsLookAhead", "parameters", "tsTryParseTypeAnnotation", "tsParsePropertyOrMethodSignature", "readonly", "nodeAny", "firstParameter", "tsParseTypeMember", "idx", "tsParseTypeLiteral", "tsParseObjectTypeMembers", "tsIsStartOfMappedType", "tsParseMappedTypeParameter", "tsExpectThenParseType", "tsParseMappedType", "nameType", "tsParseType", "tsTryParseType", "tsParseTupleType", "elementTypes", "tsParseTupleElementType", "seenOptionalElement", "labeledElements", "elementNode", "_labeledElements", "checkType", "isLabeled", "labeled", "chAfterWord", "wordName", "typeOrLabel", "tsParseNonArrayType", "labeledNode", "optionalTypeNode", "restNode", "tsParseParenthesizedType", "tsParseFunctionOrConstructorType", "abstract", "tsInAllowConditionalTypesContext", "tsParseLiteralTypeNode", "tsParseTemplateLiteralType", "parseTemplate", "parseTemplateSubstitution", "tsParseThisTypeOrThisTypePredicate", "thisKeyword", "parseMaybeUnary", "nodeType", "tsParseArrayTypeOrHigher", "tsParseTypeOperator", "tsParseTypeOperatorOrHigher", "tsCheckTypeAnnotationForReadOnly", "tsParseInferType", "tsParseConstraintForInferType", "tsInDisallowConditionalTypesContext", "tsParseUnionOrIntersectionType", "parseConstituentType", "hasLeadingOperator", "tsParseIntersectionTypeOrHigher", "tsParseUnionTypeOrHigher", "tsIsStartOfFunctionType", "tsIsUnambiguouslyStartOfFunctionType", "tsSkipParameterStart", "previousErrorCount", "tsInType", "t", "tsParseTypePredicateAsserts", "thisTypePredicate", "typePredicateVariable", "tsParseTypePredicatePrefix", "tsTryParseTypeOrTypePredicateAnnotation", "eatColon", "tsParseNonConditionalType", "extendsType", "trueType", "falseType", "isAbstractConstructorSignature", "tsParseTypeAssertion", "tsParseHeritageClause", "originalStartLoc", "delimitedList", "tsParseInterfaceDeclaration", "tsParseTypeAliasDeclaration", "tsInNoContext", "cb", "oldContext", "oldInDisallowConditionalTypesContext", "tsNextThenParseType", "tsParseEnumMember", "initializer", "tsParseEnumDeclaration", "tsParseModuleBlock", "parseBlockOrModuleBlockBody", "tsParseModuleOrNamespaceDeclaration", "nested", "inner", "tsParseAmbientExternalModuleDeclaration", "global", "tsParseImportEqualsDeclaration", "isExport", "moduleReference", "tsParseModuleReference", "tsIsExternalModuleReference", "tsParseExternalModuleReference", "f", "tsTryParseAndCatch", "tsTryParseDeclare", "nany", "startType", "tsInAmbientContext", "parseFunctionStatement", "parseClass", "parseVarStatement", "tsParseDeclaration", "tsTryParseExportDeclaration", "tsParseExpressionStatement", "mod", "tsCheckLineTerminator", "tsParseAbstractDeclaration", "tsTryParseGenericAsyncArrowFunction", "oldMaybeInArrowParameters", "tsParseTypeArgumentsInExpression", "reScan_lt", "tsIsDeclarationStart", "override", "pp", "parameter", "isSimpleParameter", "tsDisallowOptionalPattern", "bodilessType", "registerFunctionStatementId", "tsCheckForInvalidTypeCasts", "items", "isInParens", "nonNullExpression", "isOptionalCall", "missingParenErrorLoc", "atPossibleAsyncArrow", "asyncArrowFn", "parseTaggedTemplateExpression", "tokenType", "_callee$extra", "parseExprOp", "leftStartLoc", "minPrec", "isSatisfies", "reScan_lt_gt", "checkKeywords", "checkDuplicateExports", "ahead", "importNode", "isAbstractClass", "cls", "allowMissingInitializer", "declarations", "isValidAmbientConstInitializer", "parseStatementContent", "parseAccessModifier", "tsHasSomeModifiers", "callParseClassMemberWithIsStatic", "parseClassStaticBlock", "parseClassMemberWithIsStatic", "hadSuperClass", "parsePostMemberNameModifiers", "methodOrProp", "isDeclare", "parseClassPropertyAnnotation", "definite", "parseClassAccessorProperty", "declareClassPrivateMethodInScope", "_typeCast", "_typeCast2", "typeCast", "_typeParameters", "reportReservedArrowTypeParam", "trailingComma", "sawUnary", "toAssignableParenthesizedExpression", "TSTypeCastExpression", "TSParameterProperty", "TSNonNullExpression", "TSAsExpression", "TSSatisfiesExpression", "TSTypeAssertion", "parseMaybeDecoratorArguments", "canHaveLeadingDecorator", "getGetterSetterExpectedParamCount", "baseCount", "firstParam", "parseCatchClauseParam", "oldIsAmbientContext", "oldInAbstractClass", "maybeTakeDecorators", "shouldParseAsAmbientContext", "getExpression", "parseExportSpecifier", "isString", "isInTypeExport", "parseTypeOnlyImportExportSpecifier", "isImport", "isInTypeOnlyImportExport", "leftOfAsKey", "rightOfAsKey", "leftOfAs", "rightOfAs", "hasTypeSpecifier", "canParseAsKeyword", "firstAs", "secondAs", "parseModuleExportName", "kindKey", "isPossiblyLiteralEnum", "expressions", "isUncomputedMemberExpressionChain", "isNumber", "isNegativeNumber", "PlaceholderErrors", "ClassNameIsRequired", "UnexpectedSpace", "placeholders", "parsePlaceholder", "assertNoSpace", "finishPlaceholder", "isFinished", "chStartsBindingIdentifier", "verifyBreakContinue", "isBreak", "parseStatementOrSloppyAnnexBFunctionDeclaration", "parseBlock", "createNewLexicalScope", "parseFunctionId", "requireId", "oldStrict", "parseClassBody", "startsWith", "maybeParseExportDefaultSpecifier", "checkExport", "maybeParseStarImportSpecifier", "parseNamedImportSpecifiers", "parseImportSource", "v8intrinsic", "parseV8Intrinsic", "v8IntrinsicStartLoc", "parseIdentifierName", "expectedConfig", "expectedName", "expectedOptions", "expectedKeys", "expectedOptionsIsEmpty", "p", "option", "find", "PIPELINE_PROPOSALS", "TOPIC_TOKENS", "RECORD_AND_TUPLE_SYNTAX_TYPES", "validatePlugins", "decoratorsBeforeExport", "allowCallParenthesized", "proposalList", "tupleSyntaxIsHash", "syntaxType", "tokenList", "missingPlugins", "mixinPlugins", "mixinPluginNames", "ExpressionParser", "checkProto", "isRecord", "protoRef", "used", "shouldExitDescending", "disallowIn", "disallowInAnd", "parseExpressionBase", "allowInAnd", "parseMaybeAssignDisallowIn", "resultError", "_resultError$loc", "parseYield", "ownExpressionErrors", "parseMaybeConditional", "startIndex", "parseExprOps", "parseMaybeUnaryOrPrivate", "op", "prec", "checkPipelineAtInfixOperator", "logical", "coalesce", "parseExprOpRightExpr", "finishedNode", "nextOp", "withTopicBindingContext", "parseHackPipeBody", "parseSmartPipelineBodyInStyle", "parseExprOpBaseRightExpr", "withSoloAwaitPermittingContext", "parseFSharpPipelineBody", "_body$extra", "topicReferenceWasUsedInCurrentContext", "checkExponentialAfterUnary", "isAwait", "isAwaitAllowed", "parseAwait", "update", "isDelete", "parseUpdate", "isAmbiguousAwait", "updateExpressionNode", "parseExprSubscripts", "maybeAsyncArrow", "parseBind", "parseCoverCallAndAsyncArrowHead", "parseMember", "parseNoCallExpr", "tag", "quasi", "dynamicImport", "allowPlaceholder", "nodeForExtra", "oldInFSharpPipelineDirectBody", "addTrailingCommaExtraToNode", "parseExprListItem", "_call$extra", "parseSuper", "parseImportMetaProperty", "parseDo", "parseFunctionOrFunctionSent", "parseDecorators", "parseNewOrNewTarget", "parseTopicReferenceThenEqualsSign", "parseTopicReference", "pipeProposal", "lookaheadCh", "parseModuleExpression", "parseAsyncFunctionExpression", "parseAsyncArrowUnaryFunction", "topicTokenType", "topicTokenValue", "finishTopicReference", "testTopicReferenceConfiguration", "topicReferenceIsAllowedInCurrentContext", "registerTopicReference", "meta", "parseMetaProperty", "parseFunction", "innerStartLoc", "spreadStartLoc", "optionalCommaStartLoc", "spreadNodeStartLoc", "innerEndLoc", "arrowNode", "wrapParenthesis", "parenExpression", "metaProp", "parseNew", "parseExprList", "parseTemplateElement", "isTagged", "elemStart", "elem", "isTail", "endOffset", "elemEnd", "cooked", "tail", "curElt", "quasis", "propHash", "parsePropertyDefinition", "maybeAsyncOrAccessorProp", "keyName", "_params", "finishedProp", "generator", "isExpression", "hasStrictModeDirective", "nonSimple", "isSimpleParamList", "formalParameters", "delegating", "delegate", "childExpr", "isSimpleReference", "checkSmartPipeTopicBodyEarlyErrors", "callback", "outerContextTopicState", "withSmartMixTopicForbiddingContext", "outerContextSoloAwaitState", "ret", "revertScopes", "parseProgram", "loopLabel", "switchLabel", "loneSurrogate", "keywordRelationalOperator", "babel7CompatTokens", "hashEndPos", "hashEndLoc", "backquoteEnd", "backquoteEndLoc", "startToken", "templateValue", "templateElementEnd", "templateElementEndLoc", "endToken", "StatementParser", "interpreter", "parseInterpreterDirective", "finishedProgram", "stmtToDirective", "directiveLiteral", "hasFollowingBindingAtom", "endCh", "chStartsBindingPattern", "hasInLineFollowingBindingIdentifier", "startsUsingForOf", "parseModuleItem", "ParseStatementFlag", "parseStatementListItem", "allowLabeledFunction", "parseStatement", "starttype", "allowDeclaration", "allowFunctionDeclaration", "parseBreakContinueStatement", "parseDebuggerStatement", "parseDoWhileStatement", "parseForStatement", "parseIfStatement", "parseReturnStatement", "parseSwitchStatement", "parseThrowStatement", "parseTryStatement", "parseWhileStatement", "parseWithStatement", "parseEmptyStatement", "nextTokenCharCode", "isAsyncFunction", "maybeName", "parseLabeledStatement", "decoratorsEnabledBeforeExport", "maybeDecorators", "classNode", "exportNode", "allowExport", "paramsStartLoc", "lab", "parseHeaderExpression", "awaitAt", "parseFor", "startsWithLet", "startsWithUsing", "isLetOrUsing", "initNode", "parseVar", "isForIn", "parseForIn", "startsWithAsync", "isForOf", "isHangingDeclaration", "ParseFunctionFlag", "discriminant", "cases", "cur", "sawDefault", "isCase", "block", "handler", "clause", "finalizer", "statementStart", "parsedNonDirective", "await", "isFor", "hangingDeclaration", "isDeclaration", "hadConstructor", "publicMethod", "privateMethod", "publicProp", "privateProp", "accessorProp", "publicMember", "parseClassElementName", "isPrivate", "maybeQuestionTokenStartLoc", "pushClassPrivateProperty", "pushClassProperty", "pushClassAccessorProperty", "_member$decorators", "parseInitializer", "hasDefault", "parseAfterDefault", "hasStar", "parseAfterNamespace", "isFromRequired", "hasSpecifiers", "maybeParseExportNamedSpecifiers", "hasDeclaration", "maybeParseExportDeclaration", "_node2$declaration", "isTypeExport", "assertions", "nextType", "hasFrom", "nextAfterFrom", "maybeParseImportAssertions", "checkJSONModuleImport", "checkNames", "isDefault", "isFrom", "_declaration$extra", "nodes", "surrogate", "isJSONModuleImport", "_node$assertions", "nonDefaultNamedSpecifier", "parseMaybeImportReflection", "isImportReflection", "parseNext", "maybeParseModuleAttributes", "parseAssertEntries", "attrs", "attrNames", "importSpecifier", "Parser", "pluginsMap", "pluginMap", "_options", "getParser", "ast", "moduleError", "generateExportedTokenTypes", "internalTokenTypes", "tokTypes", "getParserClass", "parserClassCache", "pluginsFromOptions", "pluginList", "require_sync", "__commonJSMin", "exports", "module", "isDepIncluded", "dep", "optimizeDepsInclude", "id", "parseIncludeStr", "isDepExcluded", "optimizeDepsExclude", "isDepNoExternaled", "ssrNoExternal", "isMatch", "isDepExternaled", "ssrExternal", "raw", "lastArrow", "target", "pattern", "p", "import_ts_dedent", "readFile", "writeFile", "assertAppTemplateIsCorrect", "svelteKit", "cwdFolderPath", "appTemplatePath", "markup", "updatedMarkup", "removeHtmlLangAttribute", "REGEX_LANG_ATTRIBUTE", "execArray", "htmlTag", "langAttribute", "index", "import_ts_dedent", "mkdir", "writeFile", "path", "dirname", "_PluginSetupError_id", "PluginSetupError", "actions", "actionsInto", "defaultMetaDataUpdater", "previousMeta", "metaMeta", "getObjectType", "object", "isRecord", "getKeys", "objects", "keys", "key", "objectHasProperty", "property", "getIterableOfIterables", "iterables", "iterable", "value", "validRecordToStringValues", "constructor", "prototype", "mergeRecords", "m_target", "values", "utils", "meta", "key", "getKeys", "propValues", "value", "objectHasProperty", "updatedMeta", "propertyTarget", "mergeUnknownsInto", "mergeArrays", "mergeSets", "getIterableOfIterables", "mergeMaps", "mergeOthers", "defaultMergeIntoFunctions", "deepmergeInto", "target", "objects", "deepmergeIntoCustom", "options", "rootMetaData", "getIntoUtils", "customizedDeepmergeInto", "option", "defaultMetaDataUpdater", "actionsInto", "mergeOthersInto", "type", "getObjectType", "m_index", "mergeRecordsInto", "mergeArraysInto", "mergeSetsInto", "mergeMapsInto", "import_ts_dedent", "setupPlugins", "args", "mergedConfig", "errors", "i", "config", "deepmergeInto", "error", "PluginSetupError", "id", "import_ts_dedent", "util", "val", "assertIs", "_arg", "assertNever", "_x", "items", "obj", "item", "validKeys", "k", "filtered", "e", "object", "keys", "key", "arr", "checker", "joinValues", "array", "separator", "_", "value", "objectUtil", "first", "second", "ZodParsedType", "getParsedType", "data", "ZodIssueCode", "quotelessJson", "ZodError", "issues", "sub", "subs", "actualProto", "_mapper", "mapper", "issue", "fieldErrors", "processError", "error", "curr", "i", "el", "formErrors", "errorMap", "_ctx", "message", "overrideErrorMap", "setErrorMap", "map", "getErrorMap", "makeIssue", "params", "path", "errorMaps", "issueData", "fullPath", "fullIssue", "errorMessage", "maps", "m", "EMPTY_PATH", "addIssueToContext", "ctx", "x", "ParseStatus", "status", "results", "arrayValue", "s", "INVALID", "pairs", "syncPairs", "pair", "finalObject", "DIRTY", "OK", "isAborted", "isDirty", "isValid", "isAsync", "errorUtil", "ParseInputLazyPath", "parent", "handleResult", "result", "processCreateParams", "invalid_type_error", "required_error", "description", "iss", "ZodType", "def", "input", "_a", "maybeAsyncResult", "check", "getIssueProperties", "setError", "refinementData", "refinement", "ZodEffects", "ZodFirstPartyTypeKind", "ZodOptional", "ZodNullable", "ZodArray", "ZodPromise", "option", "ZodUnion", "incoming", "ZodIntersection", "transform", "defaultValueFunc", "ZodDefault", "ZodBranded", "catchValueFunc", "ZodCatch", "This", "target", "ZodPipeline", "cuidRegex", "cuid2Regex", "ulidRegex", "uuidRegex", "emailRegex", "emojiRegex", "ipv4Regex", "ipv6Regex", "datetimeRegex", "args", "isValidIP", "ip", "version", "ZodString", "regex", "validation", "tooBig", "tooSmall", "options", "minLength", "maxLength", "len", "ch", "min", "max", "floatSafeRemainder", "step", "valDecCount", "stepDecCount", "decCount", "valInt", "stepInt", "ZodNumber", "kind", "inclusive", "ZodBigInt", "ZodBoolean", "ZodDate", "minDate", "maxDate", "ZodSymbol", "ZodUndefined", "ZodNull", "ZodAny", "ZodUnknown", "ZodNever", "ZodVoid", "schema", "deepPartialify", "ZodObject", "newShape", "fieldSchema", "ZodTuple", "shape", "shapeKeys", "extraKeys", "keyValidator", "unknownKeys", "catchall", "_b", "_c", "_d", "defaultError", "augmentation", "merging", "index", "mask", "newField", "createZodEnum", "handleResults", "unionErrors", "childCtx", "dirty", "types", "getDiscriminator", "type", "ZodLazy", "ZodLiteral", "ZodEnum", "ZodNativeEnum", "ZodDiscriminatedUnion", "discriminator", "discriminatorValue", "optionsMap", "discriminatorValues", "mergeValues", "a", "b", "aType", "bType", "bKeys", "sharedKeys", "newObj", "sharedValue", "newArray", "itemA", "itemB", "handleParsed", "parsedLeft", "parsedRight", "merged", "left", "right", "itemIndex", "rest", "schemas", "ZodRecord", "keyType", "valueType", "third", "ZodMap", "finalMap", "ZodSet", "finalizeSet", "elements", "parsedSet", "element", "minSize", "maxSize", "size", "ZodFunction", "makeArgsIssue", "makeReturnsIssue", "returns", "fn", "parsedArgs", "parsedReturns", "returnType", "func", "getter", "values", "expectedValues", "enumValues", "opt", "nativeEnumValues", "promisified", "effect", "processed", "checkCtx", "arg", "executeRefinement", "acc", "inner", "base", "preprocess", "newCtx", "ZodNaN", "BRAND", "inResult", "custom", "fatal", "p", "_fatal", "p2", "late", "instanceOfType", "cls", "stringType", "numberType", "nanType", "bigIntType", "booleanType", "dateType", "symbolType", "undefinedType", "nullType", "anyType", "unknownType", "neverType", "voidType", "arrayType", "objectType", "strictObjectType", "unionType", "discriminatedUnionType", "intersectionType", "tupleType", "recordType", "mapType", "setType", "functionType", "lazyType", "literalType", "enumType", "nativeEnumType", "promiseType", "effectsType", "optionalType", "nullableType", "preprocessType", "pipelineType", "ostring", "onumber", "oboolean", "coerce", "NEVER", "z", "Node", "z", "Identifier", "LanguageTag", "Text", "VariableReference", "Placeholder", "Pattern", "Message", "Resource", "import_ts_dedent", "documentSelectorSchema", "arrayType", "objectType", "stringType", "positionSchema", "numberType", "messageReferenceSchema", "zodIdeExtensionConfigSchema", "functionType", "promiseType", "zConfig", "z", "value", "items", "Resource", "zodIdeExtensionConfigSchema", "_ParseConfigException_id", "ParseConfigException", "parseConfig", "args", "hasSetupAResourcePlugin", "parsedConfig", "zConfig", "referenceLanguageMustBeInLanguages", "resources", "validateResources", "languagesMatch", "roundtripTest", "error", "config", "resource", "Resource", "initialResources", "commonErrorMessage", "readResourcesAgain", "intialResource", "matchingReadResourceAgain", "readResourceAgain", "messageIndex", "initialMessage", "setupConfig", "args", "config", "configWithPlugins", "pluginErrors", "setupPlugins", "parsedConfig", "testConfigException", "parseConfig", "e", "formatErrors", "error", "ZodError", "import_ts_dedent", "normalizePath", "path", "len", "prefix", "ch", "segs", "initialize$import", "args", "uri", "$import", "$ImportError", "message", "environment", "_fetch", "moduleAsText", "normalizePath", "moduleWithMimeType", "error", "import_ts_dedent", "InlangError", "initInlangEnvironment", "fs", "target", "key", "initialize$import", "args", "error", "initConfig", "module", "env", "setupConfig", "types", "types", "assert", "init_util", "defaults", "getLineTerminator", "hasOwn", "normalize", "opts", "options", "get", "key", "init_tslib_es6", "import_source_map", "assert", "init_util", "init_util", "assert", "Mapping", "sourceLines", "sourceLoc", "targetLoc", "lines", "start", "end", "skip", "name", "sourceFromPos", "targetFromPos", "targetToPos", "skipChars", "comparePos", "subtractPos", "line", "column", "addPos", "by", "skipFirstLine", "noNegativeColumns", "startLine", "endLine", "startColumn", "endColumn", "mapping_default", "toPos", "fromPos", "targetLines", "targetComparison", "sourceCursor", "targetCursor", "lineDiff", "Lines", "infos", "sourceFileName", "assert", "mapping_default", "options", "sourceMapName", "sourceRoot", "targetLines", "updateJSON", "json", "smg", "sourceMap", "sourcesToContents", "mapping", "sourceCursor", "targetCursor", "comparePos", "sourceChar", "targetChar", "sourceName", "hasOwn", "sourceContent", "pos", "line", "column", "strings", "lineTerminatorSeqExp", "string", "secret", "info", "c", "indent", "width", "skipFirstLine", "lines", "i", "__assign", "newMappings_1", "by", "newMappings_2", "newMappings_3", "counts", "lastIndent", "last", "sliced", "isOnlyWhitespace", "diff", "maxCount", "result", "tabWidth", "firstLineInfo", "sliceStart", "sliceEnd", "firstLine", "start", "end", "prefix", "skipSpaces", "l", "backward", "modifyInPlace", "emptyLines", "callback", "startPos", "fromString", "sliceInfo", "newMappings_4", "_a", "normalize", "useTabs", "reuseWhitespace", "lineTerminator", "parts", "before_1", "countSpaces", "tabs", "spaces", "elements", "separator", "mappings", "prevInfo", "appendLines", "linesOrNull", "prevLine_1", "prevColumn_1", "appendWithSeparator", "elem", "args", "_i", "list", "fromStringCache", "hasOwn", "maxCacheKeyLen", "countSpaces", "spaces", "tabWidth", "count", "len", "assert", "next", "leadingSpaceExp", "lineTerminatorSeqExp", "fromString", "string", "options", "Lines", "tabless", "cacheable", "lines", "line", "normalize", "isOnlyWhitespace", "sliceInfo", "info", "startCol", "endCol", "sliceStart", "sliceEnd", "indent", "lineLength", "concat", "elements", "emptyLines", "types", "assert", "init_util", "n", "isArray", "isObject", "childNodesCache", "getSortedChildNodes", "node", "lines", "resultArray", "fixFaultyLocations", "i", "child", "comparePos", "childNodes", "names", "nameCount", "decorateComment", "comment", "left", "right", "precedingNode", "followingNode", "middle", "attach", "comments", "ast", "tiesToBreak", "pn", "en", "fn", "tieCount", "lastTie", "assert", "breakTies", "addTrailingComment", "addLeadingComment", "addDanglingComment", "gapEndPos", "indexOfFirstLeadingComment", "gap", "addCommentHelper", "printLeadingComment", "commentPath", "print", "loc", "parts", "Lines", "trailingSpace", "concat", "printTrailingComment", "fromPos", "leadingSpace", "printComments", "path", "value", "innerLines", "leadingParts", "trailingParts", "leading", "trailing", "init_util", "b", "isObject", "isArray", "parse", "source", "options", "normalize", "lines", "fromString", "sourceWithoutTabs", "comments", "ast", "getOption", "tokens", "token", "fixFaultyLocations", "file", "program", "trueProgramLoc", "getTrueLoc", "attach", "TreeCopier", "assert", "TCp", "node", "copy_1", "item", "i", "copy", "loc", "oldIndent", "newIndent", "oldStartTokenIndex", "oldEndTokenIndex", "keys", "keyCount", "key", "comparePos", "init_tslib_es6", "types", "assert", "types", "init_util", "assert", "n", "isArray", "isNumber", "PRECEDENCE", "tier", "i", "op", "FastPath", "value", "FPp", "obj", "copy", "stack", "pp", "s", "len", "valueIndex", "getNodeHelper", "path", "count", "callback", "origLen", "argc", "name", "result", "node", "prevToken", "nextToken", "justNeedsOpeningParen", "loc", "tokens", "token", "rootLoc", "comparePos", "assumeExpressionContext", "parent", "po", "no", "np", "isBinary", "containsCallExpression", "containsCallExpression", "node", "n", "isArray", "_name", "child", "FPp", "parentName", "parent", "childName", "i", "assert", "isBinary", "fast_path_default", "FastPath", "assert", "types", "init_util", "Printable", "Expression", "ReturnStatement", "SourceLocation", "isObject", "isArray", "isString", "riskyAdjoiningCharExp", "Patcher", "lines", "assert", "Lines", "self", "replacements", "loc", "fromString", "sliceFrom", "toConcat", "pushSlice", "from", "to", "comparePos", "a", "b", "rep", "concat", "Pp", "Patcher", "newNode", "oldNode", "print", "patcher", "newPath", "fast_path_default", "oldPath", "getSurroundingComments", "reprints", "ableToReprintComments", "findArrayReprints", "reprint", "oldComment", "assert", "node", "result", "comment", "getReprinter", "path", "Printable", "orig", "origLoc", "lines", "findReprints", "SourceLocation", "needToPrintNewPathWithComments", "newLines", "nls", "needsLeadingSpace", "nts", "needsTrailingSpace", "newParts", "concat", "patchedLines", "oldLines", "oldLoc", "posBeforeOldLoc", "copyPos", "charBeforeOldLoc", "newFirstChar", "riskyAdjoiningCharExp", "charAfterOldLoc", "newLastPos", "newLastChar", "canReprint", "findChildReprints", "findAnyReprints", "isArray", "isObject", "findObjectReprints", "len", "i", "newParentNode", "oldParentNode", "oldNeedsParens", "newNeedParens", "childReprints", "Expression", "keys", "getUnionOfKeys", "originalReprintCount", "k", "ReturnStatement", "init_util", "namedTypes", "isString", "isObject", "PrintResult", "code", "sourceMap", "assert", "PRp", "warnedAboutToString", "emptyPrintResult", "Printer", "config", "explicitTabWidth", "normalize", "makePrintFunctionWith", "options", "overrides", "path", "print", "fast_path_default", "printComments", "oldTabWidth", "loc", "reprinter", "getReprinter", "lines", "genericPrint", "ast", "composeSourceMaps", "printGenerically", "oldReuseWhitespace", "pr", "genericPrint", "path", "config", "options", "printPath", "assert", "fast_path_default", "node", "parts", "linesWithoutParens", "genericPrintNoParens", "shouldAddParens", "decoratorsLines", "printDecorators", "concat", "print", "n", "fromString", "namedTypes", "childPath", "bodyPath", "printStatementSequence", "property", "optional", "printFunctionParams", "printMethod", "printExportDeclaration", "maybeAddSemicolon", "unbracedSpecifiers_1", "bracedSpecifiers_1", "specifierPath", "spec", "lines", "i", "maybePrintImportAssertions", "naked_1", "argLines", "printArgumentsList", "isTypeAnnotation_1", "separator_1", "fields", "allowBreak_1", "len_1", "field", "oneLine_1", "leftBrace", "rightBrace", "leftBraceIndex", "i_1", "multiLine", "isTrailingCommaEnabled", "line", "key", "elems", "len_2", "printed_1", "joined", "oneLine_2", "elemPath", "elem", "getPossibleRaw", "nodeStr", "args", "maxLen_1", "printed", "parentNode", "con", "adjustClause", "endsWithBrace", "init", "sep", "forParen", "indented", "head", "clause", "doBody", "statements", "handlerPath", "consequentPath", "openingPropName", "closingPropName", "openingLines", "childLines", "child", "closingLines", "attrParts_1", "attrPath", "attrLines", "needLineWrap", "part", "access", "printVariance", "__spreadArray", "printClassMemberModifiers", "printFlowDeclaration", "expressions_1", "printed_2", "oneLine_3", "parent", "isArrowFunctionTypeAnnotation", "needsColon", "hasTypeParameters", "needsParens", "name", "members", "member", "lastNonSpaceCharacter", "expression", "isInMappedType", "memberLines", "element", "isExternal", "prefix", "naked", "getParentExportDeclaration", "decoratorPath", "isExportDeclaration", "filtered", "sawComment", "sawStatement", "stmtPath", "stmt", "isString", "prevTrailingSpace", "len", "info", "notFirst", "notLast", "leadingSpace", "trailingSpace", "trueLoc", "getTrueLoc", "beforeStart", "beforeStartLine", "leadingGap", "afterEnd", "afterEndLine", "trailingGap", "maxSpace", "s1", "s2", "spaceLines1", "spaceLines2", "kind", "nodeValue", "valuePath", "trailingComma", "fun", "params", "defExprPath", "p", "flat", "decl", "shouldPrintSpaces", "unbracedSpecifiers_2", "bracedSpecifiers_2", "lines_1", "parentExportDecl", "variancePath", "value", "pos", "ch", "swapQuotes", "str", "m", "extra", "raw", "jsSafeStringify", "double", "single", "eoc", "import_ast_types", "print", "node", "options", "Printer", "babelParser", "promises", "_babelParser", "getBabelParser", "babelOptions", "_getBabelOptions", "source", "options", "MagicastError", "message", "line", "column", "lines", "start", "end", "codeFrame", "lineCode", "i", "LITERALS_AST", "LITERALS_TYPEOF", "b$4", "types", "isValidPropName", "name", "PROXY_KEY", "literalToAst", "value", "seen", "regex", "n", "key", "value2", "makeProxyUtils", "node", "extend", "obj", "propertyDescriptor", "createProxy", "handler", "utils", "target", "receiver", "b$3", "_importProxyCache", "creatImportProxy", "specifier", "root", "proxy", "s", "declaration", "createImportsProxy", "mod", "getAllImports", "imports", "updateImport", "item", "local", "removeImport", "acc", "_", "prop", "proxifyArrayElements", "elements", "getItem", "replaceItem", "proxify", "deleteCount", "items", "predicate", "index", "proxifyArray", "proxifyFunctionCall", "stringifyExpression", "node2", "argumentsProxy", "b$2", "proxifyObject", "getProp", "getPropName", "throwError", "replaceOrAddProp", "prop2", "proxifyNewExpression", "proxifyIdentifier", "_cache", "b$1", "createExportsProxy", "findExport", "type", "dec", "updateOrAddExport", "d", "proxifyModule", "ast", "code", "util", "generateCode", "detectCodeFormat", "userStyles", "detect", "codeIndent", "tabUsages", "semiUsages", "maxLineLength", "multiLineTrailingCommaUsages", "syntaxDetectRegex", "syntaxUsages", "previousLineTrailing", "trimmitedLine", "lineIndent", "matches", "match", "parseModule", "parse", "parseExpression", "body", "formatOptions", "map", "print", "loadFile", "filename", "contents", "b", "types", "builders", "callee", "args", "node", "i", "literalToAst", "proxifyFunctionCall", "proxifyNewExpression", "value", "code", "parseExpression", "import_parser", "mkdir", "readFile", "writeFile", "stat", "import_ts_dedent", "_TestConfigException_id", "_TestConfigException_id", "testConfigFile", "args", "importKeywordUsedException", "importKeywordUsed", "module", "config", "setupConfig", "exception", "parseConfig", "e", "ParseConfigException", "configFile", "import_ts_dedent", "_", "r", "e", "t", "a", "i", "n", "we", "d", "$", "c", "S", "o", "f", "le", "je", "pe", "me", "l", "u", "k", "m", "Re", "b", "Te", "Se", "ge", "ye", "h", "N", "Ce", "g", "v", "I", "p", "j", "V", "C", "U", "Y", "H", "F", "_e", "oe", "ee", "Ae", "Ze", "Me", "Pe", "ze", "Ve", "$e", "Le", "De", "Ue", "O", "Be", "M", "P", "te", "D", "se", "W", "J", "ne", "Z", "R", "re", "q", "x", "E", "y", "B", "Ne", "ue", "Q", "X", "A", "K", "ae", "ve", "G", "ie", "z", "L", "he", "ce", "Fe", "et", "de", "Oe", "tt", "st", "xe", "nt", "rt", "at", "it", "ot", "ct", "dt", "ut", "Ee", "w", "lt", "fe", "ft", "ht", "pt", "mt", "gt", "yt", "vt", "_t", "T", "xt", "kt", "bt", "wt", "Tt", "St", "Ct", "Nt", "Ie", "It", "jt", "qe", "Rt", "We", "Je", "Ye", "At", "He", "Ge", "Qe", "ke", "be", "Xe", "Ke", "version", "path", "pathToFileURL", "import_sync", "fs", "fsSync", "path", "pnp", "createRequire", "findDepPkgJsonPath", "dep", "parent", "pnp", "depRoot", "path", "root", "findClosestPkgJsonPath", "pkg", "fs", "fsSync", "nextRoot", "dir", "predicate", "nextDir", "doesPathExist", "path", "stat", "cwdFolderPath", "inlangConfigFilePath", "configPromise", "getTransformConfig", "resolve", "createInlangConfigIfNotPresentYet", "updateSdkPluginVersion", "inlangConfigAsString", "readFile", "exception", "testConfigFile", "initInlangEnvironment", "inlangConfigModule", "pathToFileURL", "inlangConfig", "initConfig", "svelteConfig", "files", "assertConfigWithSdk", "ke", "languageInUrl", "type", "rootRoutesFolder", "isStatic", "shouldContentBePrerendered", "usesTypeScript", "svelteKitVersion", "getInstalledVersionOfPackage", "resetConfig", "InlangSdkConfigError", "config", "createDemoResources", "writeFile", "resourcesFolder", "mkdir", "routesFolder", "filesToLookFor", "file", "loadFile", "mod", "REGEX_PLUGIN_VERSION", "newConfig", "version", "pkg", "pkgJsonPath", "findDepPkgJsonPath", "assertRoutesFolderPathExists", "config", "doesPathExist", "InlangError", "assertNecessaryFilesArePresent", "preferredFileEnding", "getPathForFileType", "fileType", "fileEnding", "path", "doesFileOfTypeExist", "files", "file", "result", "filesTypesToCreate", "resolve", "mkdir", "dirname", "message", "writeFile", "path", "normalize", "scriptExtensions", "getFileInformation", "config", "rawId", "id", "ext", "dir", "name", "root", "import_ts_dedent", "transformJs", "config", "code", "parse", "preprocess", "import_parser", "deepMergeObject", "magicast", "object", "key", "WalkerBase", "node", "parent", "prop", "index", "SyncWalker", "WalkerBase", "enter", "leave", "node", "parent", "prop", "index", "_should_skip", "_should_remove", "_replacement", "skipped", "removed", "key", "value", "nodes", "i", "item", "isNode", "walk", "ast", "enter", "leave", "SyncWalker", "svelteWalk", "findAst", "walker", "sourceAst", "matchers", "runOn", "matchCount", "matches", "nodeInfoMap", "node", "parent", "key", "index", "matchCountAncestor", "matcher", "runResults", "match", "matchPath", "currentNode", "runOnNode", "fn", "findAstJs", "walk", "findAstSvelte", "svelteWalk", "n", "types", "b", "makeMarkupReactive", "parsed", "s", "reactiveIdentifiers", "instance", "module", "locations", "findAstSvelte", "node", "n", "start", "sortMarkup", "css", "lastIndex", "child", "makeJsReactive", "ast", "findAstJs", "inlangSdkJsStores", "getReactiveImportIdentifiers", "importNames", "imported", "local", "is_all_ws", "htmlIsEmpty", "htmlAst", "templateNode", "functionMatchers", "name", "variableDeclaratorMatchers", "name", "node", "n", "findUsedImportsInAst", "ast", "availableImports", "usedImportsLocal", "findAstJs", "local", "getFunctionOrDeclarationValue", "fallbackFunction", "b", "variableDeclarationValueSearchResults", "functionDeclarationSearchResults", "functionMatchers", "variableDeclarationExpression", "functionDeclaration", "variableDeclarationAst", "importNames", "initImportedVariablesAst", "imported", "getRootReferenceIndexes", "names", "meta", "parent", "index", "parentMeta", "typeCheckAncestors", "typeChecks", "check", "isDeclaredIn", "type", "propertyCheck", "nd", "objectPatternCheck", "findAlias", "ast", "identifier", "deep", "lastAlias", "ignore", "result", "walk", "node", "n", "rest", "property", "found", "declaration", "nextAlias", "findDefinition", "ast", "identifier", "deep", "ignore", "type", "result", "walk", "node", "n", "identifierIsDeclarable", "ast", "identifier", "findAstJs", "node", "n", "meta", "isDeclaredIn", "error", "mergeNodes", "ast", "node", "renamingScope", "n", "property", "identifierIsDeclarable", "foundAlias", "findAlias", "b", "searchResult", "findDefinition", "def", "renamings", "index", "parameter", "targetParameter", "mergeResult", "comma", "semicolon", "chars", "intToChar", "charToInt", "i", "c", "td", "buf", "out", "encode", "decoded", "state", "bufLength", "subLength", "buf", "sub", "pos", "out", "i", "line", "td", "semicolon", "j", "segment", "comma", "encodeInteger", "next", "num", "clamped", "intToChar", "BitSet", "arg", "n", "Chunk", "start", "end", "content", "chunk", "index", "fn", "storeName", "contentOnly", "sliceIndex", "originalBefore", "originalAfter", "newChunk", "rx", "trimmed", "getBtoa", "str", "btoa", "SourceMap", "properties", "encode", "guessIndent", "code", "lines", "tabbed", "line", "spaced", "min", "previous", "current", "numSpaces", "getRelativePath", "from", "to", "fromParts", "toParts", "toString", "isObject", "thing", "getLocator", "source", "originalLines", "lineOffsets", "i", "pos", "j", "m", "column", "Mappings", "hires", "sourceIndex", "loc", "nameIndex", "segment", "original", "sourcemapLocations", "originalCharIndex", "first", "warned", "MagicString", "string", "options", "char", "cloned", "originalChunk", "clonedChunk", "nextOriginalChunk", "nextClonedChunk", "names", "mappings", "locate", "indentStr", "pattern", "isExcluded", "exclusion", "shouldIndentNextCharacter", "replacer", "match", "charIndex", "last", "oldLeft", "oldRight", "newRight", "newLeft", "overwrite", "lineIndex", "lineStr", "result", "startChunk", "containsEnd", "sliceStart", "sliceEnd", "clone", "searchForward", "length", "charType", "aborted", "searchValue", "replacement", "getReplacement", "_", "matchAll", "re", "matches", "stringLength", "vitePreprocess", "b", "types", "n", "rewriteLoadOrHandleParameters", "ast", "availableImports", "usedImports", "findUsedImportsInAst", "imported", "local", "extractWrappableExpression", "name", "fallbackFunction", "expression", "getFunctionOrDeclarationValue", "replaceOrAddExportNamedFunction", "replacementAst", "replaced", "walk", "node", "getWrappedExport", "options", "params", "exportedName", "wrapperName", "initHandleWrapperCall", "builders", "wrapperDeclarationAst", "parameter", "getSdkImportedModules", "remove", "findAstJs", "meta", "parent", "declarationIndex", "replaceSdkImports", "from", "importedModules", "replace", "id", "alias", "MagicString", "transformSvelte", "config", "code", "n", "types", "requiredImports", "reactiveImportIdentifiers", "codeWithoutTypes", "preprocess", "vitePreprocess", "codeWithScriptTag", "parse", "processedScript", "options", "ast", "parseModule", "importsAst", "deepMergeObject", "importNames", "getSdkImportedModules", "getReactiveImportIdentifiers", "usageIndexes", "getRootReferenceIndexes", "makeJsReactive", "variableDeclarationAst", "initImportedVariablesAst", "generated", "generateCode", "parsed", "instance", "module", "s", "makeMarkupReactive", "map", "import_ts_dedent", "requiredImports", "root", "options", "config", "transformLayoutJs", "code", "n", "types", "ast", "parseModule", "importNames", "getSdkImportedModules", "importsAst", "deepMergeObject", "arrowOrFunctionNode", "extractWrappableExpression", "exportAst", "getWrappedExport", "parseExpression", "replaceOrAddExportNamedFunction", "generateCode", "import_ts_dedent", "requiredImports", "root", "transformLayoutServerJs", "config", "code", "n", "types", "ast", "parseModule", "importNames", "getSdkImportedModules", "importsAst", "deepMergeObject", "arrowOrFunctionNode", "extractWrappableExpression", "exportAst", "getWrappedExport", "replaceOrAddExportNamedFunction", "generateCode", "parse", "preprocess", "vitePreprocess", "MagicString", "transformLayoutSvelte", "config", "code", "root", "transformRootLayoutSvelte", "transformGenericLayoutSvelte", "n", "types", "b", "requiredImportsAsts", "parseModule", "reactiveImportIdentifiers", "localLanguageName", "codeWithoutTypes", "preprocess", "vitePreprocess", "codeWithScriptTag", "parse", "processedScript", "options", "ast", "findAstJs", "node", "meta", "parent", "index", "importNames", "getSdkImportedModules", "imported", "identifier", "getReactiveImportIdentifiers", "reactiveImportNames", "local", "importAst", "deepMergeObject", "exportLetDataExportAst", "addRuntimeToContextAst", "nonReactiveLabeledStatementAst", "initImportedVariablesAst", "reactiveLabeledStatementAst", "usageIndexes", "getRootReferenceIndexes", "makeJsReactive", "variableDeclarationAst", "generated", "generateCode", "s", "parsed", "insertSlot", "htmlIsEmpty", "makeMarkupReactive", "sortMarkup", "map", "transformSvelte", "import_ts_dedent", "requiredImports", "config", "root", "options", "transformPageJs", "code", "n", "types", "ast", "parseModule", "importNames", "getSdkImportedModules", "importsAst", "deepMergeObject", "arrowOrFunctionNode", "extractWrappableExpression", "exportAst", "getWrappedExport", "parseExpression", "replaceOrAddExportNamedFunction", "generateCode", "import_ts_dedent", "transformPageServerJs", "config", "code", "root", "n", "types", "ast", "parseModule", "importNames", "getSdkImportedModules", "importsAst", "deepMergeObject", "arrowOrFunctionNode", "extractWrappableExpression", "exportAst", "getWrappedExport", "replaceOrAddExportNamedFunction", "generateCode", "transformPageSvelte", "config", "code", "root", "transformSvelte", "transformServerRequestJs", "config", "code", "root", "transformServerJs", "config", "code", "import_ts_dedent", "requiredImports", "config", "options", "transformHooksServerJs", "code", "n", "types", "b", "ast", "parseModule", "imports", "importsAst", "deepMergeObject", "functionTemplate", "replaceSdkImports", "mergeNodes", "def", "findDefinition", "exportAst", "getWrappedExport", "parseExpression", "replaceOrAddExportNamedFunction", "generateCode", "transformLanguageJson", "config", "code", "transformCode", "config", "code", "type", "root", "pluginOrderVerified", "assertCorrectPluginOrder", "transformHooksServerJs", "transformLanguageJson", "transformServerRequestJs", "transformLayoutServerJs", "transformLayoutJs", "transformLayoutSvelte", "transformPageServerJs", "transformPageJs", "transformPageSvelte", "transformServerJs", "transformJs", "transformSvelte", "REGEX_SVELTE_COMPILER_INFO", "InlangError", "viteServer", "virtualModuleId", "resolvedVirtualModuleId", "plugin", "server", "id", "config", "getTransformConfig", "assertAppTemplateIsCorrect", "assertRoutesFolderPathExists", "assertNecessaryFilesArePresent", "resetConfig", "code", "fileInformation", "getFileInformation", "transformedCode", "transformCode", "filePath", "adapter_sveltekit_default", "plugin"]
}
