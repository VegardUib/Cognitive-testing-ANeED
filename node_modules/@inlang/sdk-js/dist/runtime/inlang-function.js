export const createInlangFunction = (resource) => ((key, args) => {
    const message = resource.body.find((message) => message.id.name === key);
    if (!message)
        return "";
    return message.pattern.elements
        .map((element) => serializeElement(element, args || {}))
        .join("");
});
const serializeElement = (element, args) => {
    switch (element.type) {
        case "Text":
            return element.value;
        case "Placeholder": {
            return serializePlaceholder(element, args);
        }
    }
};
const serializePlaceholder = (placeholder, args) => {
    switch (placeholder.body.type) {
        case "VariableReference":
            return args[placeholder.body.name] || "";
    }
};
