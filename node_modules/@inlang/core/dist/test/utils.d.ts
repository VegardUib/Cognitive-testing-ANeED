import type { Language, Message, Pattern } from '../ast/schema.js';
export declare const createResource: (language: Language, ...messages: Message[]) => {
    type: "Resource";
    languageTag: {
        type: "LanguageTag";
        name: string;
    };
    body: (Record<string, unknown> & {
        type: "Message";
        metadata?: any;
    } & {
        id: Record<string, unknown> & {
            type: "Identifier";
            metadata?: any;
        } & {
            name: string;
        };
        pattern: Record<string, unknown> & {
            type: "Pattern";
            metadata?: any;
        } & {
            elements: ((Record<string, unknown> & {
                type: "Text";
                metadata?: any;
            } & {
                value: string;
            }) | (Record<string, unknown> & {
                type: "Placeholder";
                metadata?: any;
            } & {
                body: Record<string, unknown> & {
                    type: "VariableReference";
                    metadata?: any;
                } & {
                    name: string;
                };
            }))[];
        };
    })[];
};
export declare const createMessage: (id: string, pattern: string | Pattern['elements']) => {
    type: "Message";
    id: {
        type: "Identifier";
        name: string;
    };
    pattern: {
        type: "Pattern";
        elements: ((Record<string, unknown> & {
            type: "Text";
            metadata?: any;
        } & {
            value: string;
        }) | (Record<string, unknown> & {
            type: "Placeholder";
            metadata?: any;
        } & {
            body: Record<string, unknown> & {
                type: "VariableReference";
                metadata?: any;
            } & {
                name: string;
            };
        }))[];
    };
};
//# sourceMappingURL=utils.d.ts.map